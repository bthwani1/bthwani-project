name: Security Guard - BTW-SEC-003

on:
  pull_request:
    branches: [main, develop]
  push:
    branches: [main, develop]
  schedule:
    # Run daily at 2 AM UTC
    - cron: '0 2 * * *'

jobs:
  secrets-scan:
    name: Secret Detection with Gitleaks
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Run Gitleaks
        uses: gitleaks/gitleaks-action@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITLEAKS_LICENSE: ${{ secrets.GITLEAKS_LICENSE }}

      - name: Upload Gitleaks SARIF
        if: always()
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: results.sarif

  sbom-generation:
    name: Generate & Sign SBOM
    runs-on: ubuntu-latest
    needs: secrets-scan
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: backend-nest/package-lock.json

      - name: Install dependencies
        working-directory: backend-nest
        run: npm ci

      - name: Generate SBOM
        working-directory: backend-nest
        run: |
          npm run security:sbom || npx @cyclonedx/cyclonedx-npm --output-file reports/sbom.json

      - name: Install Cosign
        uses: sigstore/cosign-installer@v3

      - name: Sign SBOM
        working-directory: backend-nest
        env:
          COSIGN_PASSWORD: ${{ secrets.COSIGN_PASSWORD }}
        run: |
          echo "${{ secrets.COSIGN_PRIVATE_KEY }}" > cosign.key
          cosign sign-blob --key cosign.key reports/sbom.json > reports/sbom.json.sig
          rm cosign.key

      - name: Upload SBOM artifacts
        uses: actions/upload-artifact@v4
        with:
          name: sbom-${{ github.sha }}
          path: |
            backend-nest/reports/sbom.json
            backend-nest/reports/sbom.json.sig
          retention-days: 90

      - name: Verify SBOM signature
        working-directory: backend-nest
        run: |
          echo "${{ secrets.COSIGN_PUBLIC_KEY }}" > cosign.pub
          cosign verify-blob --key cosign.pub --signature reports/sbom.json.sig reports/sbom.json

  dependency-review:
    name: Dependency Review
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Dependency Review
        uses: actions/dependency-review-action@v4
        with:
          fail-on-severity: high

  npm-audit:
    name: NPM Security Audit
    runs-on: ubuntu-latest
    strategy:
      matrix:
        project: [backend-nest, admin-dashboard, bthwani-web, app-user]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Run npm audit
        working-directory: ${{ matrix.project }}
        run: |
          npm audit --audit-level=moderate || true
          npm audit --json > audit-report.json || true

      - name: Upload audit report
        uses: actions/upload-artifact@v4
        with:
          name: audit-report-${{ matrix.project }}
          path: ${{ matrix.project }}/audit-report.json

  security-summary:
    name: Security Summary
    runs-on: ubuntu-latest
    needs: [secrets-scan, sbom-generation, npm-audit]
    if: always()
    steps:
      - name: Create summary
        run: |
          echo "## 🔒 Security Scan Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "| Check | Status |" >> $GITHUB_STEP_SUMMARY
          echo "|-------|--------|" >> $GITHUB_STEP_SUMMARY
          echo "| Secret Scan | ${{ needs.secrets-scan.result == 'success' && '✅ Passed' || '❌ Failed' }} |" >> $GITHUB_STEP_SUMMARY
          echo "| SBOM Generation | ${{ needs.sbom-generation.result == 'success' && '✅ Passed' || '❌ Failed' }} |" >> $GITHUB_STEP_SUMMARY
          echo "| NPM Audit | ${{ needs.npm-audit.result == 'success' && '✅ Passed' || '⚠️ Warnings' }} |" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Generated:** $(date)" >> $GITHUB_STEP_SUMMARY

