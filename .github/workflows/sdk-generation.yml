name: SDK Generation & Validation

on:
  push:
    branches: [main, develop]
    paths:
      - 'backend-nest/src/**'
      - 'backend-nest/package.json'
      - 'package.json'
      - 'openapitools.json'
  pull_request:
    branches: [main, develop]
    paths:
      - 'backend-nest/src/**'
      - 'backend-nest/package.json'
      - 'package.json'
      - 'openapitools.json'

jobs:
  generate-and-validate-sdks:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install root dependencies
        run: npm ci

      - name: Install backend dependencies
        run: cd backend-nest && npm ci

      - name: Generate OpenAPI specification
        run: npm run generate:openapi

      - name: Generate SDKs
        run: npm run generate:sdks

      - name: Validate SDKs
        run: npm run validate:sdks

      - name: Check for changes
        id: verify-changed-files
        run: |
          if [ -n "$(git status --porcelain)" ]; then
            echo "changed=true" >> $GITHUB_OUTPUT
            echo "üîÑ SDKs have been updated. Please commit the changes."
            git status --porcelain
          else
            echo "changed=false" >> $GITHUB_OUTPUT
            echo "‚úÖ No changes detected in generated SDKs"
          fi

      - name: Upload SDK generation report
        uses: actions/upload-artifact@v4
        with:
          name: sdk-generation-report
          path: sdk-generation-report.json

      - name: Fail if SDKs are outdated
        if: steps.verify-changed-files.outputs.changed == 'true'
        run: |
          echo "‚ùå Generated SDKs are outdated. Please run 'npm run generate:all' locally and commit the changes."
          exit 1

  test-sdk-integration:
    runs-on: ubuntu-latest
    needs: generate-and-validate-sdks
    strategy:
      matrix:
        app: [admin-dashboard, bthwani-web, app-user, vendor-app, rider-app, field-marketers]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: ${{ matrix.app }}/package-lock.json

      - name: Install app dependencies
        run: cd ${{ matrix.app }} && npm ci

      - name: Type check generated SDKs
        run: cd ${{ matrix.app }} && npx tsc --noEmit --skipLibCheck src/api/generated/**/*.ts

      - name: Lint generated SDKs
        run: cd ${{ matrix.app }} && npx eslint src/api/generated/**/*.ts --max-warnings 0 || true
