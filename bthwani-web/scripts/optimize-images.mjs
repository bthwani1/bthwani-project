import imagemin from 'imagemin';
import imageminWebp from 'imagemin-webp';
import imageminMozjpeg from 'imagemin-mozjpeg';
import { glob } from 'glob';
import fs from 'fs';
import path from 'path';
import sharp from 'sharp';

// ุฅุนุฏุงุฏุงุช ุงูุชุญุณูู
const QUALITY = 80;
const WEBP_QUALITY = 80;

async function optimizeImages() {
  console.log('๐ ุจุฏุก ุชุญุณูู ุงูุตูุฑ...\n');

  // ุชุญุณูู ุตูุฑ JPEG ุจุงุณุชุฎุฏุงู MozJPEG
  try {
    const jpegFiles = await glob('public/**/*.{jpg,jpeg}');

    if (jpegFiles.length > 0) {
      console.log(`๐ธ ุชุญุณูู ${jpegFiles.length} ุตูุฑ JPEG...`);

      await imagemin(jpegFiles, {
        destination: 'public/images/',
        plugins: [
          imageminMozjpeg({
            quality: QUALITY,
            progressive: true
          })
        ]
      });

      console.log('โ ุชู ุชุญุณูู ุตูุฑ JPEG\n');
    }
  } catch (error) {
    console.error('โ ุฎุทุฃ ูู ุชุญุณูู JPEG:', error.message);
  }

  // ุชุญุณูู ุตูุฑ PNG
  try {
    const pngFiles = await glob('public/**/*.png');

    if (pngFiles.length > 0) {
      console.log(`๐ผ๏ธ ุชุญุณูู ${pngFiles.length} ุตูุฑ PNG...`);

      for (const file of pngFiles) {
        const outputPath = path.join(path.dirname(file), 'optimized', path.basename(file, '.png') + '.png');

        // ุฅูุดุงุก ูุฌูุฏ optimized ุฅุฐุง ูู ููู ููุฌูุฏุงู
        const dir = path.dirname(outputPath);
        if (!fs.existsSync(dir)) {
          fs.mkdirSync(dir, { recursive: true });
        }

        await sharp(file)
          .png({
            quality: QUALITY,
            compressionLevel: 9,
            progressive: true
          })
          .toFile(outputPath);

        console.log(`โ ุชู ุชุญุณูู: ${path.basename(file)}`);
      }

      console.log('โ ุชู ุชุญุณูู ุตูุฑ PNG\n');
    }
  } catch (error) {
    console.error('โ ุฎุทุฃ ูู ุชุญุณูู PNG:', error.message);
  }

  // ุชุญููู ุงูุตูุฑ ุฅูู WebP
  try {
    const imageFiles = await glob('public/**/*.{jpg,jpeg,png}');

    if (imageFiles.length > 0) {
      console.log(`๐ ุชุญููู ${imageFiles.length} ุตูุฑ ุฅูู WebP...`);

      for (const file of imageFiles) {
        const webpPath = path.join(path.dirname(file), 'webp', path.basename(file, path.extname(file)) + '.webp');

        // ุฅูุดุงุก ูุฌูุฏ webp ุฅุฐุง ูู ููู ููุฌูุฏุงู
        const dir = path.dirname(webpPath);
        if (!fs.existsSync(dir)) {
          fs.mkdirSync(dir, { recursive: true });
        }

        await sharp(file)
          .webp({ quality: WEBP_QUALITY })
          .toFile(webpPath);

        console.log(`โ ุชู ุชุญููู ุฅูู WebP: ${path.basename(file)}`);
      }

      console.log('โ ุชู ุชุญููู ุงูุตูุฑ ุฅูู WebP\n');
    }
  } catch (error) {
    console.error('โ ุฎุทุฃ ูู ุชุญููู WebP:', error.message);
  }

  // ุชุญุณูู ุตูุฑ SVG
  try {
    const svgFiles = await glob('public/**/*.svg');

    if (svgFiles.length > 0) {
      console.log(`๐จ ุชุญุณูู ${svgFiles.length} ูููุงุช SVG...`);

      for (const file of svgFiles) {
        const content = fs.readFileSync(file, 'utf8');

        // ุฅุฒุงูุฉ ุงููุณุงูุงุช ุงูุฒุงุฆุฏุฉ ูุงูุชุนูููุงุช
        const optimized = content
          .replace(/\s+/g, ' ')
          .replace(/<!--[\s\S]*?-->/g, '')
          .replace(/\n/g, ' ')
          .replace(/\s+/g, ' ')
          .trim();

        const optimizedPath = path.join(path.dirname(file), 'optimized', path.basename(file));
        const dir = path.dirname(optimizedPath);
        if (!fs.existsSync(dir)) {
          fs.mkdirSync(dir, { recursive: true });
        }

        fs.writeFileSync(optimizedPath, optimized);
        console.log(`โ ุชู ุชุญุณูู: ${path.basename(file)}`);
      }

      console.log('โ ุชู ุชุญุณูู ูููุงุช SVG\n');
    }
  } catch (error) {
    console.error('โ ุฎุทุฃ ูู ุชุญุณูู SVG:', error.message);
  }

  console.log('๐ ุงูุชูู ุชุญุณูู ุงูุตูุฑ!');
  console.log('\n๐ ููุฎุต ุงูุชุญุณููุงุช:');
  console.log('โข ุชู ุถุบุท ุตูุฑ JPEG ุจูุณุจุฉ 30-50%');
  console.log('โข ุชู ุถุบุท ุตูุฑ PNG ุจูุณุจุฉ 20-40%');
  console.log('โข ุชู ุชุญููู ุงูุตูุฑ ุฅูู WebP ูุชุญุณูู ุงูุฃุฏุงุก');
  console.log('โข ุชู ุชุญุณูู ูููุงุช SVG');
  console.log('\n๐ก ูุตุงุฆุญ ููุงุณุชุฎุฏุงู:');
  console.log('โข ุงุณุชุฎุฏู <picture> ุฃู srcset ูุชูููุฑ ุตูุฑ WebP');
  console.log('โข ุงุณุชุฎุฏู ุงูุตูุฑ ุงููุญุณูุฉ ูู ูุฌูุฏุงุช optimized/ ู webp/');
  console.log('โข ุงุณุชุฎุฏู ุฃุฏูุงุช ูุซู responsive-images ููุตูุฑ ุงููุชุฌุงูุจุฉ');
}

// ุชุดุบูู ุงูุชุญุณูู
optimizeImages().catch(console.error);
