/* tslint:disable */
/* eslint-disable */
/**
 * Bthwani API v2
 * NestJS API Documentation - نظام إدارة الطلبات والتجارة
 *
 * The version of the OpenAPI document: 2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  CartControllerAddToCartCompatRequest,
  CartControllerMergeCartRequest,
} from '../models/index';
import {
    CartControllerAddToCartCompatRequestFromJSON,
    CartControllerAddToCartCompatRequestToJSON,
    CartControllerMergeCartRequestFromJSON,
    CartControllerMergeCartRequestToJSON,
} from '../models/index';

export interface CartControllerAddDeliveryAddressRequest {
    body: object;
}

export interface CartControllerAddNoteRequest {
    body: object;
}

export interface CartControllerAddSheinNoteRequest {
    body: object;
}

export interface CartControllerAddToCartRequest {
    body: object;
}

export interface CartControllerAddToCartCompatOperationRequest {
    cartControllerAddToCartCompatRequest: CartControllerAddToCartCompatRequest;
}

export interface CartControllerAddToSheinCartRequest {
    body: object;
}

export interface CartControllerDeleteCartItemRequest {
    id: string;
}

export interface CartControllerDeleteSpecificCartItemRequest {
    cartId: string;
    productId: string;
}

export interface CartControllerGetCartByIdRequest {
    cartId: string;
}

export interface CartControllerGetUserCartRequest {
    userId: string;
}

export interface CartControllerMergeCartOperationRequest {
    cartControllerMergeCartRequest: CartControllerMergeCartRequest;
}

export interface CartControllerRemoveFromCartRequest {
    productId: string;
}

export interface CartControllerRemoveFromCartCompatRequest {
    productId: string;
}

export interface CartControllerRemoveFromSheinCartRequest {
    sheinProductId: string;
}

export interface CartControllerSendRetargetNotificationRequest {
    cartId: string;
}

export interface CartControllerUpdateCartItemRequest {
    productId: string;
    body: object;
}

export interface CartControllerUpdateCartItemCompatRequest {
    productId: string;
    body: object;
}

export interface CartControllerUpdateSheinCartItemRequest {
    sheinProductId: string;
    body: object;
}

export interface CartControllerUpdateSheinShippingRequest {
    body: object;
}

/**
 * CartApi - interface
 * 
 * @export
 * @interface CartApiInterface
 */
export interface CartApiInterface {
    /**
     * 
     * @summary إضافة عنوان التوصيل
     * @param {object} body 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CartApiInterface
     */
    cartControllerAddDeliveryAddressRaw(requestParameters: CartControllerAddDeliveryAddressRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>>;

    /**
     * إضافة عنوان التوصيل
     */
    cartControllerAddDeliveryAddress(requestParameters: CartControllerAddDeliveryAddressRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void>;

    /**
     * 
     * @summary إضافة ملاحظة
     * @param {object} body 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CartApiInterface
     */
    cartControllerAddNoteRaw(requestParameters: CartControllerAddNoteRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>>;

    /**
     * إضافة ملاحظة
     */
    cartControllerAddNote(requestParameters: CartControllerAddNoteRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void>;

    /**
     * 
     * @summary إضافة ملاحظة لسلة Shein
     * @param {object} body 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CartApiInterface
     */
    cartControllerAddSheinNoteRaw(requestParameters: CartControllerAddSheinNoteRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>>;

    /**
     * إضافة ملاحظة لسلة Shein
     */
    cartControllerAddSheinNote(requestParameters: CartControllerAddSheinNoteRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void>;

    /**
     * 
     * @summary إضافة منتج للسلة
     * @param {object} body 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CartApiInterface
     */
    cartControllerAddToCartRaw(requestParameters: CartControllerAddToCartRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>>;

    /**
     * إضافة منتج للسلة
     */
    cartControllerAddToCart(requestParameters: CartControllerAddToCartRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void>;

    /**
     * 
     * @summary إضافة منتج للسلة (توافق)
     * @param {CartControllerAddToCartCompatRequest} cartControllerAddToCartCompatRequest 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CartApiInterface
     */
    cartControllerAddToCartCompatRaw(requestParameters: CartControllerAddToCartCompatOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>>;

    /**
     * إضافة منتج للسلة (توافق)
     */
    cartControllerAddToCartCompat(requestParameters: CartControllerAddToCartCompatOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void>;

    /**
     * 
     * @summary إضافة منتج Shein للسلة
     * @param {object} body 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CartApiInterface
     */
    cartControllerAddToSheinCartRaw(requestParameters: CartControllerAddToSheinCartRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>>;

    /**
     * إضافة منتج Shein للسلة
     */
    cartControllerAddToSheinCart(requestParameters: CartControllerAddToSheinCartRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void>;

    /**
     * 
     * @summary تفريغ كل السلات
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CartApiInterface
     */
    cartControllerClearAllCartsRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>>;

    /**
     * تفريغ كل السلات
     */
    cartControllerClearAllCarts(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void>;

    /**
     * 
     * @summary تفريغ السلة
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CartApiInterface
     */
    cartControllerClearCartRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>>;

    /**
     * تفريغ السلة
     */
    cartControllerClearCart(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void>;

    /**
     * 
     * @summary تفريغ سلة Shein
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CartApiInterface
     */
    cartControllerClearSheinCartRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>>;

    /**
     * تفريغ سلة Shein
     */
    cartControllerClearSheinCart(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void>;

    /**
     * 
     * @summary حذف سلة أو منتج من السلة
     * @param {string} id 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CartApiInterface
     */
    cartControllerDeleteCartItemRaw(requestParameters: CartControllerDeleteCartItemRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>>;

    /**
     * حذف سلة أو منتج من السلة
     */
    cartControllerDeleteCartItem(requestParameters: CartControllerDeleteCartItemRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void>;

    /**
     * 
     * @summary حذف منتج من سلة محددة (Admin)
     * @param {string} cartId 
     * @param {string} productId 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CartApiInterface
     */
    cartControllerDeleteSpecificCartItemRaw(requestParameters: CartControllerDeleteSpecificCartItemRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>>;

    /**
     * حذف منتج من سلة محددة (Admin)
     */
    cartControllerDeleteSpecificCartItem(requestParameters: CartControllerDeleteSpecificCartItemRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void>;

    /**
     * 
     * @summary الحصول على السلات المهجورة (Admin)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CartApiInterface
     */
    cartControllerGetAbandonedCartsRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>>;

    /**
     * الحصول على السلات المهجورة (Admin)
     */
    cartControllerGetAbandonedCarts(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void>;

    /**
     * 
     * @summary الحصول على سلة بالمعرف
     * @param {string} cartId 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CartApiInterface
     */
    cartControllerGetCartByIdRaw(requestParameters: CartControllerGetCartByIdRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>>;

    /**
     * الحصول على سلة بالمعرف
     */
    cartControllerGetCartById(requestParameters: CartControllerGetCartByIdRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void>;

    /**
     * 
     * @summary عدد العناصر في السلة
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CartApiInterface
     */
    cartControllerGetCartCountRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>>;

    /**
     * عدد العناصر في السلة
     */
    cartControllerGetCartCount(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void>;

    /**
     * 
     * @summary حساب رسوم التوصيل
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CartApiInterface
     */
    cartControllerGetCartFeeRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>>;

    /**
     * حساب رسوم التوصيل
     */
    cartControllerGetCartFee(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void>;

    /**
     * 
     * @summary الحصول على السلة الموحدة
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CartApiInterface
     */
    cartControllerGetCombinedCartRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>>;

    /**
     * الحصول على السلة الموحدة
     */
    cartControllerGetCombinedCart(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void>;

    /**
     * 
     * @summary الحصول على سلتي
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CartApiInterface
     */
    cartControllerGetMyCartRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>>;

    /**
     * الحصول على سلتي
     */
    cartControllerGetMyCart(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void>;

    /**
     * 
     * @summary الحصول على سلة Shein
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CartApiInterface
     */
    cartControllerGetMySheinCartRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>>;

    /**
     * الحصول على سلة Shein
     */
    cartControllerGetMySheinCart(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void>;

    /**
     * 
     * @summary الحصول على سلة مستخدم
     * @param {string} userId 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CartApiInterface
     */
    cartControllerGetUserCartRaw(requestParameters: CartControllerGetUserCartRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>>;

    /**
     * الحصول على سلة مستخدم
     */
    cartControllerGetUserCart(requestParameters: CartControllerGetUserCartRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void>;

    /**
     * 
     * @summary دمج سلة الضيف مع سلة المستخدم
     * @param {CartControllerMergeCartRequest} cartControllerMergeCartRequest 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CartApiInterface
     */
    cartControllerMergeCartRaw(requestParameters: CartControllerMergeCartOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>>;

    /**
     * دمج سلة الضيف مع سلة المستخدم
     */
    cartControllerMergeCart(requestParameters: CartControllerMergeCartOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void>;

    /**
     * 
     * @summary حذف منتج من السلة
     * @param {string} productId 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CartApiInterface
     */
    cartControllerRemoveFromCartRaw(requestParameters: CartControllerRemoveFromCartRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>>;

    /**
     * حذف منتج من السلة
     */
    cartControllerRemoveFromCart(requestParameters: CartControllerRemoveFromCartRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void>;

    /**
     * 
     * @summary حذف منتج من السلة (توافق)
     * @param {string} productId 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CartApiInterface
     */
    cartControllerRemoveFromCartCompatRaw(requestParameters: CartControllerRemoveFromCartCompatRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>>;

    /**
     * حذف منتج من السلة (توافق)
     */
    cartControllerRemoveFromCartCompat(requestParameters: CartControllerRemoveFromCartCompatRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void>;

    /**
     * 
     * @summary حذف منتج Shein من السلة
     * @param {string} sheinProductId 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CartApiInterface
     */
    cartControllerRemoveFromSheinCartRaw(requestParameters: CartControllerRemoveFromSheinCartRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>>;

    /**
     * حذف منتج Shein من السلة
     */
    cartControllerRemoveFromSheinCart(requestParameters: CartControllerRemoveFromSheinCartRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void>;

    /**
     * 
     * @summary إرسال إشعار استعادة السلة (Admin)
     * @param {string} cartId 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CartApiInterface
     */
    cartControllerSendRetargetNotificationRaw(requestParameters: CartControllerSendRetargetNotificationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>>;

    /**
     * إرسال إشعار استعادة السلة (Admin)
     */
    cartControllerSendRetargetNotification(requestParameters: CartControllerSendRetargetNotificationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void>;

    /**
     * 
     * @summary تحديث كمية منتج
     * @param {string} productId 
     * @param {object} body 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CartApiInterface
     */
    cartControllerUpdateCartItemRaw(requestParameters: CartControllerUpdateCartItemRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>>;

    /**
     * تحديث كمية منتج
     */
    cartControllerUpdateCartItem(requestParameters: CartControllerUpdateCartItemRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void>;

    /**
     * 
     * @summary تحديث كمية منتج (توافق)
     * @param {string} productId 
     * @param {object} body 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CartApiInterface
     */
    cartControllerUpdateCartItemCompatRaw(requestParameters: CartControllerUpdateCartItemCompatRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>>;

    /**
     * تحديث كمية منتج (توافق)
     */
    cartControllerUpdateCartItemCompat(requestParameters: CartControllerUpdateCartItemCompatRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void>;

    /**
     * 
     * @summary تحديث كمية منتج Shein
     * @param {string} sheinProductId 
     * @param {object} body 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CartApiInterface
     */
    cartControllerUpdateSheinCartItemRaw(requestParameters: CartControllerUpdateSheinCartItemRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>>;

    /**
     * تحديث كمية منتج Shein
     */
    cartControllerUpdateSheinCartItem(requestParameters: CartControllerUpdateSheinCartItemRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void>;

    /**
     * 
     * @summary تحديث تكاليف الشحن
     * @param {object} body 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CartApiInterface
     */
    cartControllerUpdateSheinShippingRaw(requestParameters: CartControllerUpdateSheinShippingRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>>;

    /**
     * تحديث تكاليف الشحن
     */
    cartControllerUpdateSheinShipping(requestParameters: CartControllerUpdateSheinShippingRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void>;

}

/**
 * 
 */
export class CartApi extends runtime.BaseAPI implements CartApiInterface {

    /**
     * إضافة عنوان التوصيل
     */
    async cartControllerAddDeliveryAddressRaw(requestParameters: CartControllerAddDeliveryAddressRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {
        if (requestParameters['body'] == null) {
            throw new runtime.RequiredError(
                'body',
                'Required parameter "body" was null or undefined when calling cartControllerAddDeliveryAddress().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';


        let urlPath = `/delivery/cart/delivery-address`;

        const response = await this.request({
            path: urlPath,
            method: 'PATCH',
            headers: headerParameters,
            query: queryParameters,
            body: requestParameters['body'] as any,
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     * إضافة عنوان التوصيل
     */
    async cartControllerAddDeliveryAddress(requestParameters: CartControllerAddDeliveryAddressRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {
        await this.cartControllerAddDeliveryAddressRaw(requestParameters, initOverrides);
    }

    /**
     * إضافة ملاحظة
     */
    async cartControllerAddNoteRaw(requestParameters: CartControllerAddNoteRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {
        if (requestParameters['body'] == null) {
            throw new runtime.RequiredError(
                'body',
                'Required parameter "body" was null or undefined when calling cartControllerAddNote().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';


        let urlPath = `/delivery/cart/note`;

        const response = await this.request({
            path: urlPath,
            method: 'PATCH',
            headers: headerParameters,
            query: queryParameters,
            body: requestParameters['body'] as any,
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     * إضافة ملاحظة
     */
    async cartControllerAddNote(requestParameters: CartControllerAddNoteRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {
        await this.cartControllerAddNoteRaw(requestParameters, initOverrides);
    }

    /**
     * إضافة ملاحظة لسلة Shein
     */
    async cartControllerAddSheinNoteRaw(requestParameters: CartControllerAddSheinNoteRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {
        if (requestParameters['body'] == null) {
            throw new runtime.RequiredError(
                'body',
                'Required parameter "body" was null or undefined when calling cartControllerAddSheinNote().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';


        let urlPath = `/delivery/cart/shein/note`;

        const response = await this.request({
            path: urlPath,
            method: 'PATCH',
            headers: headerParameters,
            query: queryParameters,
            body: requestParameters['body'] as any,
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     * إضافة ملاحظة لسلة Shein
     */
    async cartControllerAddSheinNote(requestParameters: CartControllerAddSheinNoteRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {
        await this.cartControllerAddSheinNoteRaw(requestParameters, initOverrides);
    }

    /**
     * إضافة منتج للسلة
     */
    async cartControllerAddToCartRaw(requestParameters: CartControllerAddToCartRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {
        if (requestParameters['body'] == null) {
            throw new runtime.RequiredError(
                'body',
                'Required parameter "body" was null or undefined when calling cartControllerAddToCart().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';


        let urlPath = `/delivery/cart/items`;

        const response = await this.request({
            path: urlPath,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: requestParameters['body'] as any,
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     * إضافة منتج للسلة
     */
    async cartControllerAddToCart(requestParameters: CartControllerAddToCartRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {
        await this.cartControllerAddToCartRaw(requestParameters, initOverrides);
    }

    /**
     * إضافة منتج للسلة (توافق)
     */
    async cartControllerAddToCartCompatRaw(requestParameters: CartControllerAddToCartCompatOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {
        if (requestParameters['cartControllerAddToCartCompatRequest'] == null) {
            throw new runtime.RequiredError(
                'cartControllerAddToCartCompatRequest',
                'Required parameter "cartControllerAddToCartCompatRequest" was null or undefined when calling cartControllerAddToCartCompat().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';


        let urlPath = `/delivery/cart/add`;

        const response = await this.request({
            path: urlPath,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: CartControllerAddToCartCompatRequestToJSON(requestParameters['cartControllerAddToCartCompatRequest']),
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     * إضافة منتج للسلة (توافق)
     */
    async cartControllerAddToCartCompat(requestParameters: CartControllerAddToCartCompatOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {
        await this.cartControllerAddToCartCompatRaw(requestParameters, initOverrides);
    }

    /**
     * إضافة منتج Shein للسلة
     */
    async cartControllerAddToSheinCartRaw(requestParameters: CartControllerAddToSheinCartRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {
        if (requestParameters['body'] == null) {
            throw new runtime.RequiredError(
                'body',
                'Required parameter "body" was null or undefined when calling cartControllerAddToSheinCart().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';


        let urlPath = `/delivery/cart/shein/items`;

        const response = await this.request({
            path: urlPath,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: requestParameters['body'] as any,
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     * إضافة منتج Shein للسلة
     */
    async cartControllerAddToSheinCart(requestParameters: CartControllerAddToSheinCartRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {
        await this.cartControllerAddToSheinCartRaw(requestParameters, initOverrides);
    }

    /**
     * تفريغ كل السلات
     */
    async cartControllerClearAllCartsRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};


        let urlPath = `/delivery/cart/combined/clear-all`;

        const response = await this.request({
            path: urlPath,
            method: 'DELETE',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     * تفريغ كل السلات
     */
    async cartControllerClearAllCarts(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {
        await this.cartControllerClearAllCartsRaw(initOverrides);
    }

    /**
     * تفريغ السلة
     */
    async cartControllerClearCartRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};


        let urlPath = `/delivery/cart`;

        const response = await this.request({
            path: urlPath,
            method: 'DELETE',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     * تفريغ السلة
     */
    async cartControllerClearCart(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {
        await this.cartControllerClearCartRaw(initOverrides);
    }

    /**
     * تفريغ سلة Shein
     */
    async cartControllerClearSheinCartRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};


        let urlPath = `/delivery/cart/shein`;

        const response = await this.request({
            path: urlPath,
            method: 'DELETE',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     * تفريغ سلة Shein
     */
    async cartControllerClearSheinCart(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {
        await this.cartControllerClearSheinCartRaw(initOverrides);
    }

    /**
     * حذف سلة أو منتج من السلة
     */
    async cartControllerDeleteCartItemRaw(requestParameters: CartControllerDeleteCartItemRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {
        if (requestParameters['id'] == null) {
            throw new runtime.RequiredError(
                'id',
                'Required parameter "id" was null or undefined when calling cartControllerDeleteCartItem().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};


        let urlPath = `/delivery/cart/{id}`;
        urlPath = urlPath.replace(`{${"id"}}`, encodeURIComponent(String(requestParameters['id'])));

        const response = await this.request({
            path: urlPath,
            method: 'DELETE',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     * حذف سلة أو منتج من السلة
     */
    async cartControllerDeleteCartItem(requestParameters: CartControllerDeleteCartItemRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {
        await this.cartControllerDeleteCartItemRaw(requestParameters, initOverrides);
    }

    /**
     * حذف منتج من سلة محددة (Admin)
     */
    async cartControllerDeleteSpecificCartItemRaw(requestParameters: CartControllerDeleteSpecificCartItemRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {
        if (requestParameters['cartId'] == null) {
            throw new runtime.RequiredError(
                'cartId',
                'Required parameter "cartId" was null or undefined when calling cartControllerDeleteSpecificCartItem().'
            );
        }

        if (requestParameters['productId'] == null) {
            throw new runtime.RequiredError(
                'productId',
                'Required parameter "productId" was null or undefined when calling cartControllerDeleteSpecificCartItem().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};


        let urlPath = `/delivery/cart/{cartId}/items/{productId}`;
        urlPath = urlPath.replace(`{${"cartId"}}`, encodeURIComponent(String(requestParameters['cartId'])));
        urlPath = urlPath.replace(`{${"productId"}}`, encodeURIComponent(String(requestParameters['productId'])));

        const response = await this.request({
            path: urlPath,
            method: 'DELETE',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     * حذف منتج من سلة محددة (Admin)
     */
    async cartControllerDeleteSpecificCartItem(requestParameters: CartControllerDeleteSpecificCartItemRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {
        await this.cartControllerDeleteSpecificCartItemRaw(requestParameters, initOverrides);
    }

    /**
     * الحصول على السلات المهجورة (Admin)
     */
    async cartControllerGetAbandonedCartsRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};


        let urlPath = `/delivery/cart/abandoned`;

        const response = await this.request({
            path: urlPath,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     * الحصول على السلات المهجورة (Admin)
     */
    async cartControllerGetAbandonedCarts(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {
        await this.cartControllerGetAbandonedCartsRaw(initOverrides);
    }

    /**
     * الحصول على سلة بالمعرف
     */
    async cartControllerGetCartByIdRaw(requestParameters: CartControllerGetCartByIdRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {
        if (requestParameters['cartId'] == null) {
            throw new runtime.RequiredError(
                'cartId',
                'Required parameter "cartId" was null or undefined when calling cartControllerGetCartById().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};


        let urlPath = `/delivery/cart/{cartId}`;
        urlPath = urlPath.replace(`{${"cartId"}}`, encodeURIComponent(String(requestParameters['cartId'])));

        const response = await this.request({
            path: urlPath,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     * الحصول على سلة بالمعرف
     */
    async cartControllerGetCartById(requestParameters: CartControllerGetCartByIdRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {
        await this.cartControllerGetCartByIdRaw(requestParameters, initOverrides);
    }

    /**
     * عدد العناصر في السلة
     */
    async cartControllerGetCartCountRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};


        let urlPath = `/delivery/cart/count`;

        const response = await this.request({
            path: urlPath,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     * عدد العناصر في السلة
     */
    async cartControllerGetCartCount(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {
        await this.cartControllerGetCartCountRaw(initOverrides);
    }

    /**
     * حساب رسوم التوصيل
     */
    async cartControllerGetCartFeeRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};


        let urlPath = `/delivery/cart/fee`;

        const response = await this.request({
            path: urlPath,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     * حساب رسوم التوصيل
     */
    async cartControllerGetCartFee(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {
        await this.cartControllerGetCartFeeRaw(initOverrides);
    }

    /**
     * الحصول على السلة الموحدة
     */
    async cartControllerGetCombinedCartRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};


        let urlPath = `/delivery/cart/combined`;

        const response = await this.request({
            path: urlPath,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     * الحصول على السلة الموحدة
     */
    async cartControllerGetCombinedCart(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {
        await this.cartControllerGetCombinedCartRaw(initOverrides);
    }

    /**
     * الحصول على سلتي
     */
    async cartControllerGetMyCartRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};


        let urlPath = `/delivery/cart`;

        const response = await this.request({
            path: urlPath,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     * الحصول على سلتي
     */
    async cartControllerGetMyCart(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {
        await this.cartControllerGetMyCartRaw(initOverrides);
    }

    /**
     * الحصول على سلة Shein
     */
    async cartControllerGetMySheinCartRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};


        let urlPath = `/delivery/cart/shein`;

        const response = await this.request({
            path: urlPath,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     * الحصول على سلة Shein
     */
    async cartControllerGetMySheinCart(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {
        await this.cartControllerGetMySheinCartRaw(initOverrides);
    }

    /**
     * الحصول على سلة مستخدم
     */
    async cartControllerGetUserCartRaw(requestParameters: CartControllerGetUserCartRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {
        if (requestParameters['userId'] == null) {
            throw new runtime.RequiredError(
                'userId',
                'Required parameter "userId" was null or undefined when calling cartControllerGetUserCart().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};


        let urlPath = `/delivery/cart/user/{userId}`;
        urlPath = urlPath.replace(`{${"userId"}}`, encodeURIComponent(String(requestParameters['userId'])));

        const response = await this.request({
            path: urlPath,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     * الحصول على سلة مستخدم
     */
    async cartControllerGetUserCart(requestParameters: CartControllerGetUserCartRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {
        await this.cartControllerGetUserCartRaw(requestParameters, initOverrides);
    }

    /**
     * دمج سلة الضيف مع سلة المستخدم
     */
    async cartControllerMergeCartRaw(requestParameters: CartControllerMergeCartOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {
        if (requestParameters['cartControllerMergeCartRequest'] == null) {
            throw new runtime.RequiredError(
                'cartControllerMergeCartRequest',
                'Required parameter "cartControllerMergeCartRequest" was null or undefined when calling cartControllerMergeCart().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';


        let urlPath = `/delivery/cart/merge`;

        const response = await this.request({
            path: urlPath,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: CartControllerMergeCartRequestToJSON(requestParameters['cartControllerMergeCartRequest']),
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     * دمج سلة الضيف مع سلة المستخدم
     */
    async cartControllerMergeCart(requestParameters: CartControllerMergeCartOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {
        await this.cartControllerMergeCartRaw(requestParameters, initOverrides);
    }

    /**
     * حذف منتج من السلة
     */
    async cartControllerRemoveFromCartRaw(requestParameters: CartControllerRemoveFromCartRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {
        if (requestParameters['productId'] == null) {
            throw new runtime.RequiredError(
                'productId',
                'Required parameter "productId" was null or undefined when calling cartControllerRemoveFromCart().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};


        let urlPath = `/delivery/cart/items/{productId}`;
        urlPath = urlPath.replace(`{${"productId"}}`, encodeURIComponent(String(requestParameters['productId'])));

        const response = await this.request({
            path: urlPath,
            method: 'DELETE',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     * حذف منتج من السلة
     */
    async cartControllerRemoveFromCart(requestParameters: CartControllerRemoveFromCartRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {
        await this.cartControllerRemoveFromCartRaw(requestParameters, initOverrides);
    }

    /**
     * حذف منتج من السلة (توافق)
     */
    async cartControllerRemoveFromCartCompatRaw(requestParameters: CartControllerRemoveFromCartCompatRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {
        if (requestParameters['productId'] == null) {
            throw new runtime.RequiredError(
                'productId',
                'Required parameter "productId" was null or undefined when calling cartControllerRemoveFromCartCompat().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};


        let urlPath = `/delivery/cart/{productId}`;
        urlPath = urlPath.replace(`{${"productId"}}`, encodeURIComponent(String(requestParameters['productId'])));

        const response = await this.request({
            path: urlPath,
            method: 'DELETE',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     * حذف منتج من السلة (توافق)
     */
    async cartControllerRemoveFromCartCompat(requestParameters: CartControllerRemoveFromCartCompatRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {
        await this.cartControllerRemoveFromCartCompatRaw(requestParameters, initOverrides);
    }

    /**
     * حذف منتج Shein من السلة
     */
    async cartControllerRemoveFromSheinCartRaw(requestParameters: CartControllerRemoveFromSheinCartRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {
        if (requestParameters['sheinProductId'] == null) {
            throw new runtime.RequiredError(
                'sheinProductId',
                'Required parameter "sheinProductId" was null or undefined when calling cartControllerRemoveFromSheinCart().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};


        let urlPath = `/delivery/cart/shein/items/{sheinProductId}`;
        urlPath = urlPath.replace(`{${"sheinProductId"}}`, encodeURIComponent(String(requestParameters['sheinProductId'])));

        const response = await this.request({
            path: urlPath,
            method: 'DELETE',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     * حذف منتج Shein من السلة
     */
    async cartControllerRemoveFromSheinCart(requestParameters: CartControllerRemoveFromSheinCartRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {
        await this.cartControllerRemoveFromSheinCartRaw(requestParameters, initOverrides);
    }

    /**
     * إرسال إشعار استعادة السلة (Admin)
     */
    async cartControllerSendRetargetNotificationRaw(requestParameters: CartControllerSendRetargetNotificationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {
        if (requestParameters['cartId'] == null) {
            throw new runtime.RequiredError(
                'cartId',
                'Required parameter "cartId" was null or undefined when calling cartControllerSendRetargetNotification().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};


        let urlPath = `/delivery/cart/{cartId}/retarget/push`;
        urlPath = urlPath.replace(`{${"cartId"}}`, encodeURIComponent(String(requestParameters['cartId'])));

        const response = await this.request({
            path: urlPath,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     * إرسال إشعار استعادة السلة (Admin)
     */
    async cartControllerSendRetargetNotification(requestParameters: CartControllerSendRetargetNotificationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {
        await this.cartControllerSendRetargetNotificationRaw(requestParameters, initOverrides);
    }

    /**
     * تحديث كمية منتج
     */
    async cartControllerUpdateCartItemRaw(requestParameters: CartControllerUpdateCartItemRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {
        if (requestParameters['productId'] == null) {
            throw new runtime.RequiredError(
                'productId',
                'Required parameter "productId" was null or undefined when calling cartControllerUpdateCartItem().'
            );
        }

        if (requestParameters['body'] == null) {
            throw new runtime.RequiredError(
                'body',
                'Required parameter "body" was null or undefined when calling cartControllerUpdateCartItem().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';


        let urlPath = `/delivery/cart/items/{productId}`;
        urlPath = urlPath.replace(`{${"productId"}}`, encodeURIComponent(String(requestParameters['productId'])));

        const response = await this.request({
            path: urlPath,
            method: 'PATCH',
            headers: headerParameters,
            query: queryParameters,
            body: requestParameters['body'] as any,
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     * تحديث كمية منتج
     */
    async cartControllerUpdateCartItem(requestParameters: CartControllerUpdateCartItemRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {
        await this.cartControllerUpdateCartItemRaw(requestParameters, initOverrides);
    }

    /**
     * تحديث كمية منتج (توافق)
     */
    async cartControllerUpdateCartItemCompatRaw(requestParameters: CartControllerUpdateCartItemCompatRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {
        if (requestParameters['productId'] == null) {
            throw new runtime.RequiredError(
                'productId',
                'Required parameter "productId" was null or undefined when calling cartControllerUpdateCartItemCompat().'
            );
        }

        if (requestParameters['body'] == null) {
            throw new runtime.RequiredError(
                'body',
                'Required parameter "body" was null or undefined when calling cartControllerUpdateCartItemCompat().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';


        let urlPath = `/delivery/cart/{productId}`;
        urlPath = urlPath.replace(`{${"productId"}}`, encodeURIComponent(String(requestParameters['productId'])));

        const response = await this.request({
            path: urlPath,
            method: 'PATCH',
            headers: headerParameters,
            query: queryParameters,
            body: requestParameters['body'] as any,
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     * تحديث كمية منتج (توافق)
     */
    async cartControllerUpdateCartItemCompat(requestParameters: CartControllerUpdateCartItemCompatRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {
        await this.cartControllerUpdateCartItemCompatRaw(requestParameters, initOverrides);
    }

    /**
     * تحديث كمية منتج Shein
     */
    async cartControllerUpdateSheinCartItemRaw(requestParameters: CartControllerUpdateSheinCartItemRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {
        if (requestParameters['sheinProductId'] == null) {
            throw new runtime.RequiredError(
                'sheinProductId',
                'Required parameter "sheinProductId" was null or undefined when calling cartControllerUpdateSheinCartItem().'
            );
        }

        if (requestParameters['body'] == null) {
            throw new runtime.RequiredError(
                'body',
                'Required parameter "body" was null or undefined when calling cartControllerUpdateSheinCartItem().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';


        let urlPath = `/delivery/cart/shein/items/{sheinProductId}`;
        urlPath = urlPath.replace(`{${"sheinProductId"}}`, encodeURIComponent(String(requestParameters['sheinProductId'])));

        const response = await this.request({
            path: urlPath,
            method: 'PATCH',
            headers: headerParameters,
            query: queryParameters,
            body: requestParameters['body'] as any,
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     * تحديث كمية منتج Shein
     */
    async cartControllerUpdateSheinCartItem(requestParameters: CartControllerUpdateSheinCartItemRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {
        await this.cartControllerUpdateSheinCartItemRaw(requestParameters, initOverrides);
    }

    /**
     * تحديث تكاليف الشحن
     */
    async cartControllerUpdateSheinShippingRaw(requestParameters: CartControllerUpdateSheinShippingRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {
        if (requestParameters['body'] == null) {
            throw new runtime.RequiredError(
                'body',
                'Required parameter "body" was null or undefined when calling cartControllerUpdateSheinShipping().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';


        let urlPath = `/delivery/cart/shein/shipping`;

        const response = await this.request({
            path: urlPath,
            method: 'PATCH',
            headers: headerParameters,
            query: queryParameters,
            body: requestParameters['body'] as any,
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     * تحديث تكاليف الشحن
     */
    async cartControllerUpdateSheinShipping(requestParameters: CartControllerUpdateSheinShippingRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {
        await this.cartControllerUpdateSheinShippingRaw(requestParameters, initOverrides);
    }

}
