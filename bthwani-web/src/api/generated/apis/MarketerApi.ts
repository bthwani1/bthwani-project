/* tslint:disable */
/* eslint-disable */
/**
 * Bthwani API v2
 * NestJS API Documentation - نظام إدارة الطلبات والتجارة
 *
 * The version of the OpenAPI document: 2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  MarketerControllerUpdateProfileRequest,
  MarketerControllerUploadFileRequest,
} from '../models/index';
import {
    MarketerControllerUpdateProfileRequestFromJSON,
    MarketerControllerUpdateProfileRequestToJSON,
    MarketerControllerUploadFileRequestFromJSON,
    MarketerControllerUploadFileRequestToJSON,
} from '../models/index';

export interface MarketerControllerGetEarningsRequest {
    startDate: string;
    endDate: string;
}

export interface MarketerControllerGetMyCommissionsRequest {
    status: string;
}

export interface MarketerControllerGetStoreDetailsRequest {
    id: string;
}

export interface MarketerControllerGetStorePerformanceRequest {
    id: string;
    startDate: string;
    endDate: string;
}

export interface MarketerControllerGetVendorDetailsRequest {
    id: string;
}

export interface MarketerControllerMarkNotificationReadRequest {
    id: string;
}

export interface MarketerControllerUpdateProfileOperationRequest {
    marketerControllerUpdateProfileRequest: MarketerControllerUpdateProfileRequest;
}

export interface MarketerControllerUploadFileOperationRequest {
    marketerControllerUploadFileRequest: MarketerControllerUploadFileRequest;
}

/**
 * MarketerApi - interface
 * 
 * @export
 * @interface MarketerApiInterface
 */
export interface MarketerApiInterface {
    /**
     * 
     * @summary إنشاء كود إحالة
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof MarketerApiInterface
     */
    marketerControllerGenerateReferralCodeRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>>;

    /**
     * إنشاء كود إحالة
     */
    marketerControllerGenerateReferralCode(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void>;

    /**
     * 
     * @summary إحصائيات العمولات
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof MarketerApiInterface
     */
    marketerControllerGetCommissionStatisticsRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>>;

    /**
     * إحصائيات العمولات
     */
    marketerControllerGetCommissionStatistics(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void>;

    /**
     * 
     * @summary أرباحي
     * @param {string} startDate 
     * @param {string} endDate 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof MarketerApiInterface
     */
    marketerControllerGetEarningsRaw(requestParameters: MarketerControllerGetEarningsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>>;

    /**
     * أرباحي
     */
    marketerControllerGetEarnings(requestParameters: MarketerControllerGetEarningsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void>;

    /**
     * 
     * @summary تفصيل الأرباح
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof MarketerApiInterface
     */
    marketerControllerGetEarningsBreakdownRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>>;

    /**
     * تفصيل الأرباح
     */
    marketerControllerGetEarningsBreakdown(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void>;

    /**
     * 
     * @summary ملفاتي
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof MarketerApiInterface
     */
    marketerControllerGetFilesRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>>;

    /**
     * ملفاتي
     */
    marketerControllerGetFiles(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void>;

    /**
     * 
     * @summary إحصائيات الشهر
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof MarketerApiInterface
     */
    marketerControllerGetMonthStatisticsRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>>;

    /**
     * إحصائيات الشهر
     */
    marketerControllerGetMonthStatistics(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void>;

    /**
     * 
     * @summary عمولاتي
     * @param {string} status 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof MarketerApiInterface
     */
    marketerControllerGetMyCommissionsRaw(requestParameters: MarketerControllerGetMyCommissionsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>>;

    /**
     * عمولاتي
     */
    marketerControllerGetMyCommissions(requestParameters: MarketerControllerGetMyCommissionsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void>;

    /**
     * 
     * @summary إحالاتي
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof MarketerApiInterface
     */
    marketerControllerGetMyReferralsRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>>;

    /**
     * إحالاتي
     */
    marketerControllerGetMyReferrals(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void>;

    /**
     * 
     * @summary متاجري
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof MarketerApiInterface
     */
    marketerControllerGetMyStoresRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>>;

    /**
     * متاجري
     */
    marketerControllerGetMyStores(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void>;

    /**
     * 
     * @summary تجاري
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof MarketerApiInterface
     */
    marketerControllerGetMyVendorsRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>>;

    /**
     * تجاري
     */
    marketerControllerGetMyVendors(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void>;

    /**
     * 
     * @summary إشعاراتي
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof MarketerApiInterface
     */
    marketerControllerGetNotificationsRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>>;

    /**
     * إشعاراتي
     */
    marketerControllerGetNotifications(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void>;

    /**
     * 
     * @summary نظرة عامة
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof MarketerApiInterface
     */
    marketerControllerGetOverviewRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>>;

    /**
     * نظرة عامة
     */
    marketerControllerGetOverview(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void>;

    /**
     * 
     * @summary العمولات المعلقة
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof MarketerApiInterface
     */
    marketerControllerGetPendingCommissionsRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>>;

    /**
     * العمولات المعلقة
     */
    marketerControllerGetPendingCommissions(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void>;

    /**
     * 
     * @summary ملفي الشخصي
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof MarketerApiInterface
     */
    marketerControllerGetProfileRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>>;

    /**
     * ملفي الشخصي
     */
    marketerControllerGetProfile(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void>;

    /**
     * 
     * @summary إحصائيات الإحالات
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof MarketerApiInterface
     */
    marketerControllerGetReferralStatisticsRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>>;

    /**
     * إحصائيات الإحالات
     */
    marketerControllerGetReferralStatistics(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void>;

    /**
     * 
     * @summary تفاصيل متجر
     * @param {string} id 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof MarketerApiInterface
     */
    marketerControllerGetStoreDetailsRaw(requestParameters: MarketerControllerGetStoreDetailsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>>;

    /**
     * تفاصيل متجر
     */
    marketerControllerGetStoreDetails(requestParameters: MarketerControllerGetStoreDetailsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void>;

    /**
     * 
     * @summary أداء المتجر
     * @param {string} id 
     * @param {string} startDate 
     * @param {string} endDate 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof MarketerApiInterface
     */
    marketerControllerGetStorePerformanceRaw(requestParameters: MarketerControllerGetStorePerformanceRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>>;

    /**
     * أداء المتجر
     */
    marketerControllerGetStorePerformance(requestParameters: MarketerControllerGetStorePerformanceRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void>;

    /**
     * 
     * @summary إحصائيات المنطقة
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof MarketerApiInterface
     */
    marketerControllerGetTerritoryStatsRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>>;

    /**
     * إحصائيات المنطقة
     */
    marketerControllerGetTerritoryStats(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void>;

    /**
     * 
     * @summary إحصائيات اليوم
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof MarketerApiInterface
     */
    marketerControllerGetTodayStatisticsRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>>;

    /**
     * إحصائيات اليوم
     */
    marketerControllerGetTodayStatistics(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void>;

    /**
     * 
     * @summary تفاصيل تاجر
     * @param {string} id 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof MarketerApiInterface
     */
    marketerControllerGetVendorDetailsRaw(requestParameters: MarketerControllerGetVendorDetailsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>>;

    /**
     * تفاصيل تاجر
     */
    marketerControllerGetVendorDetails(requestParameters: MarketerControllerGetVendorDetailsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void>;

    /**
     * 
     * @summary تحديد إشعار كمقروء
     * @param {string} id 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof MarketerApiInterface
     */
    marketerControllerMarkNotificationReadRaw(requestParameters: MarketerControllerMarkNotificationReadRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>>;

    /**
     * تحديد إشعار كمقروء
     */
    marketerControllerMarkNotificationRead(requestParameters: MarketerControllerMarkNotificationReadRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void>;

    /**
     * 
     * @summary تحديث الملف الشخصي
     * @param {MarketerControllerUpdateProfileRequest} marketerControllerUpdateProfileRequest 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof MarketerApiInterface
     */
    marketerControllerUpdateProfileRaw(requestParameters: MarketerControllerUpdateProfileOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>>;

    /**
     * تحديث الملف الشخصي
     */
    marketerControllerUpdateProfile(requestParameters: MarketerControllerUpdateProfileOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void>;

    /**
     * 
     * @summary رفع ملف
     * @param {MarketerControllerUploadFileRequest} marketerControllerUploadFileRequest 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof MarketerApiInterface
     */
    marketerControllerUploadFileRaw(requestParameters: MarketerControllerUploadFileOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>>;

    /**
     * رفع ملف
     */
    marketerControllerUploadFile(requestParameters: MarketerControllerUploadFileOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void>;

}

/**
 * 
 */
export class MarketerApi extends runtime.BaseAPI implements MarketerApiInterface {

    /**
     * إنشاء كود إحالة
     */
    async marketerControllerGenerateReferralCodeRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};


        let urlPath = `/marketer/referrals/generate-code`;

        const response = await this.request({
            path: urlPath,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     * إنشاء كود إحالة
     */
    async marketerControllerGenerateReferralCode(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {
        await this.marketerControllerGenerateReferralCodeRaw(initOverrides);
    }

    /**
     * إحصائيات العمولات
     */
    async marketerControllerGetCommissionStatisticsRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};


        let urlPath = `/marketer/commissions/statistics`;

        const response = await this.request({
            path: urlPath,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     * إحصائيات العمولات
     */
    async marketerControllerGetCommissionStatistics(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {
        await this.marketerControllerGetCommissionStatisticsRaw(initOverrides);
    }

    /**
     * أرباحي
     */
    async marketerControllerGetEarningsRaw(requestParameters: MarketerControllerGetEarningsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {
        if (requestParameters['startDate'] == null) {
            throw new runtime.RequiredError(
                'startDate',
                'Required parameter "startDate" was null or undefined when calling marketerControllerGetEarnings().'
            );
        }

        if (requestParameters['endDate'] == null) {
            throw new runtime.RequiredError(
                'endDate',
                'Required parameter "endDate" was null or undefined when calling marketerControllerGetEarnings().'
            );
        }

        const queryParameters: any = {};

        if (requestParameters['startDate'] != null) {
            queryParameters['startDate'] = requestParameters['startDate'];
        }

        if (requestParameters['endDate'] != null) {
            queryParameters['endDate'] = requestParameters['endDate'];
        }

        const headerParameters: runtime.HTTPHeaders = {};


        let urlPath = `/marketer/earnings`;

        const response = await this.request({
            path: urlPath,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     * أرباحي
     */
    async marketerControllerGetEarnings(requestParameters: MarketerControllerGetEarningsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {
        await this.marketerControllerGetEarningsRaw(requestParameters, initOverrides);
    }

    /**
     * تفصيل الأرباح
     */
    async marketerControllerGetEarningsBreakdownRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};


        let urlPath = `/marketer/earnings/breakdown`;

        const response = await this.request({
            path: urlPath,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     * تفصيل الأرباح
     */
    async marketerControllerGetEarningsBreakdown(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {
        await this.marketerControllerGetEarningsBreakdownRaw(initOverrides);
    }

    /**
     * ملفاتي
     */
    async marketerControllerGetFilesRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};


        let urlPath = `/marketer/files`;

        const response = await this.request({
            path: urlPath,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     * ملفاتي
     */
    async marketerControllerGetFiles(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {
        await this.marketerControllerGetFilesRaw(initOverrides);
    }

    /**
     * إحصائيات الشهر
     */
    async marketerControllerGetMonthStatisticsRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};


        let urlPath = `/marketer/statistics/month`;

        const response = await this.request({
            path: urlPath,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     * إحصائيات الشهر
     */
    async marketerControllerGetMonthStatistics(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {
        await this.marketerControllerGetMonthStatisticsRaw(initOverrides);
    }

    /**
     * عمولاتي
     */
    async marketerControllerGetMyCommissionsRaw(requestParameters: MarketerControllerGetMyCommissionsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {
        if (requestParameters['status'] == null) {
            throw new runtime.RequiredError(
                'status',
                'Required parameter "status" was null or undefined when calling marketerControllerGetMyCommissions().'
            );
        }

        const queryParameters: any = {};

        if (requestParameters['status'] != null) {
            queryParameters['status'] = requestParameters['status'];
        }

        const headerParameters: runtime.HTTPHeaders = {};


        let urlPath = `/marketer/commissions/my`;

        const response = await this.request({
            path: urlPath,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     * عمولاتي
     */
    async marketerControllerGetMyCommissions(requestParameters: MarketerControllerGetMyCommissionsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {
        await this.marketerControllerGetMyCommissionsRaw(requestParameters, initOverrides);
    }

    /**
     * إحالاتي
     */
    async marketerControllerGetMyReferralsRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};


        let urlPath = `/marketer/referrals/my`;

        const response = await this.request({
            path: urlPath,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     * إحالاتي
     */
    async marketerControllerGetMyReferrals(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {
        await this.marketerControllerGetMyReferralsRaw(initOverrides);
    }

    /**
     * متاجري
     */
    async marketerControllerGetMyStoresRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};


        let urlPath = `/marketer/stores/my`;

        const response = await this.request({
            path: urlPath,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     * متاجري
     */
    async marketerControllerGetMyStores(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {
        await this.marketerControllerGetMyStoresRaw(initOverrides);
    }

    /**
     * تجاري
     */
    async marketerControllerGetMyVendorsRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};


        let urlPath = `/marketer/vendors/my`;

        const response = await this.request({
            path: urlPath,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     * تجاري
     */
    async marketerControllerGetMyVendors(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {
        await this.marketerControllerGetMyVendorsRaw(initOverrides);
    }

    /**
     * إشعاراتي
     */
    async marketerControllerGetNotificationsRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};


        let urlPath = `/marketer/notifications`;

        const response = await this.request({
            path: urlPath,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     * إشعاراتي
     */
    async marketerControllerGetNotifications(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {
        await this.marketerControllerGetNotificationsRaw(initOverrides);
    }

    /**
     * نظرة عامة
     */
    async marketerControllerGetOverviewRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};


        let urlPath = `/marketer/overview`;

        const response = await this.request({
            path: urlPath,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     * نظرة عامة
     */
    async marketerControllerGetOverview(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {
        await this.marketerControllerGetOverviewRaw(initOverrides);
    }

    /**
     * العمولات المعلقة
     */
    async marketerControllerGetPendingCommissionsRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};


        let urlPath = `/marketer/commissions/pending`;

        const response = await this.request({
            path: urlPath,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     * العمولات المعلقة
     */
    async marketerControllerGetPendingCommissions(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {
        await this.marketerControllerGetPendingCommissionsRaw(initOverrides);
    }

    /**
     * ملفي الشخصي
     */
    async marketerControllerGetProfileRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};


        let urlPath = `/marketer/profile`;

        const response = await this.request({
            path: urlPath,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     * ملفي الشخصي
     */
    async marketerControllerGetProfile(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {
        await this.marketerControllerGetProfileRaw(initOverrides);
    }

    /**
     * إحصائيات الإحالات
     */
    async marketerControllerGetReferralStatisticsRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};


        let urlPath = `/marketer/referrals/statistics`;

        const response = await this.request({
            path: urlPath,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     * إحصائيات الإحالات
     */
    async marketerControllerGetReferralStatistics(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {
        await this.marketerControllerGetReferralStatisticsRaw(initOverrides);
    }

    /**
     * تفاصيل متجر
     */
    async marketerControllerGetStoreDetailsRaw(requestParameters: MarketerControllerGetStoreDetailsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {
        if (requestParameters['id'] == null) {
            throw new runtime.RequiredError(
                'id',
                'Required parameter "id" was null or undefined when calling marketerControllerGetStoreDetails().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};


        let urlPath = `/marketer/stores/{id}`;
        urlPath = urlPath.replace(`{${"id"}}`, encodeURIComponent(String(requestParameters['id'])));

        const response = await this.request({
            path: urlPath,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     * تفاصيل متجر
     */
    async marketerControllerGetStoreDetails(requestParameters: MarketerControllerGetStoreDetailsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {
        await this.marketerControllerGetStoreDetailsRaw(requestParameters, initOverrides);
    }

    /**
     * أداء المتجر
     */
    async marketerControllerGetStorePerformanceRaw(requestParameters: MarketerControllerGetStorePerformanceRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {
        if (requestParameters['id'] == null) {
            throw new runtime.RequiredError(
                'id',
                'Required parameter "id" was null or undefined when calling marketerControllerGetStorePerformance().'
            );
        }

        if (requestParameters['startDate'] == null) {
            throw new runtime.RequiredError(
                'startDate',
                'Required parameter "startDate" was null or undefined when calling marketerControllerGetStorePerformance().'
            );
        }

        if (requestParameters['endDate'] == null) {
            throw new runtime.RequiredError(
                'endDate',
                'Required parameter "endDate" was null or undefined when calling marketerControllerGetStorePerformance().'
            );
        }

        const queryParameters: any = {};

        if (requestParameters['startDate'] != null) {
            queryParameters['startDate'] = requestParameters['startDate'];
        }

        if (requestParameters['endDate'] != null) {
            queryParameters['endDate'] = requestParameters['endDate'];
        }

        const headerParameters: runtime.HTTPHeaders = {};


        let urlPath = `/marketer/stores/{id}/performance`;
        urlPath = urlPath.replace(`{${"id"}}`, encodeURIComponent(String(requestParameters['id'])));

        const response = await this.request({
            path: urlPath,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     * أداء المتجر
     */
    async marketerControllerGetStorePerformance(requestParameters: MarketerControllerGetStorePerformanceRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {
        await this.marketerControllerGetStorePerformanceRaw(requestParameters, initOverrides);
    }

    /**
     * إحصائيات المنطقة
     */
    async marketerControllerGetTerritoryStatsRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};


        let urlPath = `/marketer/territory/stats`;

        const response = await this.request({
            path: urlPath,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     * إحصائيات المنطقة
     */
    async marketerControllerGetTerritoryStats(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {
        await this.marketerControllerGetTerritoryStatsRaw(initOverrides);
    }

    /**
     * إحصائيات اليوم
     */
    async marketerControllerGetTodayStatisticsRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};


        let urlPath = `/marketer/statistics/today`;

        const response = await this.request({
            path: urlPath,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     * إحصائيات اليوم
     */
    async marketerControllerGetTodayStatistics(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {
        await this.marketerControllerGetTodayStatisticsRaw(initOverrides);
    }

    /**
     * تفاصيل تاجر
     */
    async marketerControllerGetVendorDetailsRaw(requestParameters: MarketerControllerGetVendorDetailsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {
        if (requestParameters['id'] == null) {
            throw new runtime.RequiredError(
                'id',
                'Required parameter "id" was null or undefined when calling marketerControllerGetVendorDetails().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};


        let urlPath = `/marketer/vendors/{id}`;
        urlPath = urlPath.replace(`{${"id"}}`, encodeURIComponent(String(requestParameters['id'])));

        const response = await this.request({
            path: urlPath,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     * تفاصيل تاجر
     */
    async marketerControllerGetVendorDetails(requestParameters: MarketerControllerGetVendorDetailsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {
        await this.marketerControllerGetVendorDetailsRaw(requestParameters, initOverrides);
    }

    /**
     * تحديد إشعار كمقروء
     */
    async marketerControllerMarkNotificationReadRaw(requestParameters: MarketerControllerMarkNotificationReadRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {
        if (requestParameters['id'] == null) {
            throw new runtime.RequiredError(
                'id',
                'Required parameter "id" was null or undefined when calling marketerControllerMarkNotificationRead().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};


        let urlPath = `/marketer/notifications/{id}/read`;
        urlPath = urlPath.replace(`{${"id"}}`, encodeURIComponent(String(requestParameters['id'])));

        const response = await this.request({
            path: urlPath,
            method: 'PATCH',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     * تحديد إشعار كمقروء
     */
    async marketerControllerMarkNotificationRead(requestParameters: MarketerControllerMarkNotificationReadRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {
        await this.marketerControllerMarkNotificationReadRaw(requestParameters, initOverrides);
    }

    /**
     * تحديث الملف الشخصي
     */
    async marketerControllerUpdateProfileRaw(requestParameters: MarketerControllerUpdateProfileOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {
        if (requestParameters['marketerControllerUpdateProfileRequest'] == null) {
            throw new runtime.RequiredError(
                'marketerControllerUpdateProfileRequest',
                'Required parameter "marketerControllerUpdateProfileRequest" was null or undefined when calling marketerControllerUpdateProfile().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';


        let urlPath = `/marketer/profile`;

        const response = await this.request({
            path: urlPath,
            method: 'PATCH',
            headers: headerParameters,
            query: queryParameters,
            body: MarketerControllerUpdateProfileRequestToJSON(requestParameters['marketerControllerUpdateProfileRequest']),
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     * تحديث الملف الشخصي
     */
    async marketerControllerUpdateProfile(requestParameters: MarketerControllerUpdateProfileOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {
        await this.marketerControllerUpdateProfileRaw(requestParameters, initOverrides);
    }

    /**
     * رفع ملف
     */
    async marketerControllerUploadFileRaw(requestParameters: MarketerControllerUploadFileOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {
        if (requestParameters['marketerControllerUploadFileRequest'] == null) {
            throw new runtime.RequiredError(
                'marketerControllerUploadFileRequest',
                'Required parameter "marketerControllerUploadFileRequest" was null or undefined when calling marketerControllerUploadFile().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';


        let urlPath = `/marketer/files/upload`;

        const response = await this.request({
            path: urlPath,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: MarketerControllerUploadFileRequestToJSON(requestParameters['marketerControllerUploadFileRequest']),
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     * رفع ملف
     */
    async marketerControllerUploadFile(requestParameters: MarketerControllerUploadFileOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {
        await this.marketerControllerUploadFileRaw(requestParameters, initOverrides);
    }

}
