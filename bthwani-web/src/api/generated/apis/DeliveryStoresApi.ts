/* tslint:disable */
/* eslint-disable */
/**
 * Bthwani API v2
 * NestJS API Documentation - نظام إدارة الطلبات والتجارة
 *
 * The version of the OpenAPI document: 2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';

export interface DeliveryStoreControllerFindStoreRequest {
    id: string;
}

export interface DeliveryStoreControllerFindStoresRequest {
    categoryId: string;
    isTrending: boolean;
    isFeatured: boolean;
    usageType: string;
    cursor?: string;
    limit?: number;
}

export interface DeliveryStoreControllerGetProductsRequest {
    id: string;
    cursor?: string;
    limit?: number;
}

export interface DeliveryStoreControllerGetStoreReviewsRequest {
    id: string;
    cursor?: string;
    limit?: number;
}

export interface DeliveryStoreControllerGetStoreStatisticsRequest {
    id: string;
}

export interface DeliveryStoreControllerSearchStoresRequest {
    q: string;
    cursor?: string;
    limit?: number;
}

export interface DeliveryStoreControllerUpdateStoreRequest {
    id: string;
}

/**
 * DeliveryStoresApi - interface
 * 
 * @export
 * @interface DeliveryStoresApiInterface
 */
export interface DeliveryStoresApiInterface {
    /**
     * 
     * @summary جلب متجر محدد
     * @param {string} id 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof DeliveryStoresApiInterface
     */
    deliveryStoreControllerFindStoreRaw(requestParameters: DeliveryStoreControllerFindStoreRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>>;

    /**
     * جلب متجر محدد
     */
    deliveryStoreControllerFindStore(requestParameters: DeliveryStoreControllerFindStoreRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void>;

    /**
     * 
     * @summary جلب المتاجر - عام
     * @param {string} categoryId 
     * @param {boolean} isTrending 
     * @param {boolean} isFeatured 
     * @param {string} usageType 
     * @param {string} [cursor] Cursor للصفحة التالية
     * @param {number} [limit] عدد العناصر
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof DeliveryStoresApiInterface
     */
    deliveryStoreControllerFindStoresRaw(requestParameters: DeliveryStoreControllerFindStoresRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>>;

    /**
     * جلب المتاجر - عام
     */
    deliveryStoreControllerFindStores(requestParameters: DeliveryStoreControllerFindStoresRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void>;

    /**
     * 
     * @summary جلب منتجات المتجر
     * @param {string} id 
     * @param {string} [cursor] Cursor للصفحة التالية
     * @param {number} [limit] عدد العناصر
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof DeliveryStoresApiInterface
     */
    deliveryStoreControllerGetProductsRaw(requestParameters: DeliveryStoreControllerGetProductsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>>;

    /**
     * جلب منتجات المتجر
     */
    deliveryStoreControllerGetProducts(requestParameters: DeliveryStoreControllerGetProductsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void>;

    /**
     * 
     * @summary مراجعات المتجر
     * @param {string} id 
     * @param {string} [cursor] Cursor للصفحة التالية
     * @param {number} [limit] عدد العناصر
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof DeliveryStoresApiInterface
     */
    deliveryStoreControllerGetStoreReviewsRaw(requestParameters: DeliveryStoreControllerGetStoreReviewsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>>;

    /**
     * مراجعات المتجر
     */
    deliveryStoreControllerGetStoreReviews(requestParameters: DeliveryStoreControllerGetStoreReviewsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void>;

    /**
     * 
     * @summary إحصائيات المتجر - عامة
     * @param {string} id 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof DeliveryStoresApiInterface
     */
    deliveryStoreControllerGetStoreStatisticsRaw(requestParameters: DeliveryStoreControllerGetStoreStatisticsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>>;

    /**
     * إحصائيات المتجر - عامة
     */
    deliveryStoreControllerGetStoreStatistics(requestParameters: DeliveryStoreControllerGetStoreStatisticsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void>;

    /**
     * 
     * @summary البحث عن متاجر
     * @param {string} q 
     * @param {string} [cursor] Cursor للصفحة التالية
     * @param {number} [limit] عدد العناصر
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof DeliveryStoresApiInterface
     */
    deliveryStoreControllerSearchStoresRaw(requestParameters: DeliveryStoreControllerSearchStoresRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>>;

    /**
     * البحث عن متاجر
     */
    deliveryStoreControllerSearchStores(requestParameters: DeliveryStoreControllerSearchStoresRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void>;

    /**
     * 
     * @summary تحديث متجر
     * @param {string} id 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof DeliveryStoresApiInterface
     */
    deliveryStoreControllerUpdateStoreRaw(requestParameters: DeliveryStoreControllerUpdateStoreRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>>;

    /**
     * تحديث متجر
     */
    deliveryStoreControllerUpdateStore(requestParameters: DeliveryStoreControllerUpdateStoreRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void>;

}

/**
 * 
 */
export class DeliveryStoresApi extends runtime.BaseAPI implements DeliveryStoresApiInterface {

    /**
     * جلب متجر محدد
     */
    async deliveryStoreControllerFindStoreRaw(requestParameters: DeliveryStoreControllerFindStoreRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {
        if (requestParameters['id'] == null) {
            throw new runtime.RequiredError(
                'id',
                'Required parameter "id" was null or undefined when calling deliveryStoreControllerFindStore().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};


        let urlPath = `/delivery/stores/{id}`;
        urlPath = urlPath.replace(`{${"id"}}`, encodeURIComponent(String(requestParameters['id'])));

        const response = await this.request({
            path: urlPath,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     * جلب متجر محدد
     */
    async deliveryStoreControllerFindStore(requestParameters: DeliveryStoreControllerFindStoreRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {
        await this.deliveryStoreControllerFindStoreRaw(requestParameters, initOverrides);
    }

    /**
     * جلب المتاجر - عام
     */
    async deliveryStoreControllerFindStoresRaw(requestParameters: DeliveryStoreControllerFindStoresRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {
        if (requestParameters['categoryId'] == null) {
            throw new runtime.RequiredError(
                'categoryId',
                'Required parameter "categoryId" was null or undefined when calling deliveryStoreControllerFindStores().'
            );
        }

        if (requestParameters['isTrending'] == null) {
            throw new runtime.RequiredError(
                'isTrending',
                'Required parameter "isTrending" was null or undefined when calling deliveryStoreControllerFindStores().'
            );
        }

        if (requestParameters['isFeatured'] == null) {
            throw new runtime.RequiredError(
                'isFeatured',
                'Required parameter "isFeatured" was null or undefined when calling deliveryStoreControllerFindStores().'
            );
        }

        if (requestParameters['usageType'] == null) {
            throw new runtime.RequiredError(
                'usageType',
                'Required parameter "usageType" was null or undefined when calling deliveryStoreControllerFindStores().'
            );
        }

        const queryParameters: any = {};

        if (requestParameters['cursor'] != null) {
            queryParameters['cursor'] = requestParameters['cursor'];
        }

        if (requestParameters['limit'] != null) {
            queryParameters['limit'] = requestParameters['limit'];
        }

        if (requestParameters['categoryId'] != null) {
            queryParameters['categoryId'] = requestParameters['categoryId'];
        }

        if (requestParameters['isTrending'] != null) {
            queryParameters['isTrending'] = requestParameters['isTrending'];
        }

        if (requestParameters['isFeatured'] != null) {
            queryParameters['isFeatured'] = requestParameters['isFeatured'];
        }

        if (requestParameters['usageType'] != null) {
            queryParameters['usageType'] = requestParameters['usageType'];
        }

        const headerParameters: runtime.HTTPHeaders = {};


        let urlPath = `/delivery/stores`;

        const response = await this.request({
            path: urlPath,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     * جلب المتاجر - عام
     */
    async deliveryStoreControllerFindStores(requestParameters: DeliveryStoreControllerFindStoresRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {
        await this.deliveryStoreControllerFindStoresRaw(requestParameters, initOverrides);
    }

    /**
     * جلب منتجات المتجر
     */
    async deliveryStoreControllerGetProductsRaw(requestParameters: DeliveryStoreControllerGetProductsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {
        if (requestParameters['id'] == null) {
            throw new runtime.RequiredError(
                'id',
                'Required parameter "id" was null or undefined when calling deliveryStoreControllerGetProducts().'
            );
        }

        const queryParameters: any = {};

        if (requestParameters['cursor'] != null) {
            queryParameters['cursor'] = requestParameters['cursor'];
        }

        if (requestParameters['limit'] != null) {
            queryParameters['limit'] = requestParameters['limit'];
        }

        const headerParameters: runtime.HTTPHeaders = {};


        let urlPath = `/delivery/stores/{id}/products`;
        urlPath = urlPath.replace(`{${"id"}}`, encodeURIComponent(String(requestParameters['id'])));

        const response = await this.request({
            path: urlPath,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     * جلب منتجات المتجر
     */
    async deliveryStoreControllerGetProducts(requestParameters: DeliveryStoreControllerGetProductsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {
        await this.deliveryStoreControllerGetProductsRaw(requestParameters, initOverrides);
    }

    /**
     * مراجعات المتجر
     */
    async deliveryStoreControllerGetStoreReviewsRaw(requestParameters: DeliveryStoreControllerGetStoreReviewsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {
        if (requestParameters['id'] == null) {
            throw new runtime.RequiredError(
                'id',
                'Required parameter "id" was null or undefined when calling deliveryStoreControllerGetStoreReviews().'
            );
        }

        const queryParameters: any = {};

        if (requestParameters['cursor'] != null) {
            queryParameters['cursor'] = requestParameters['cursor'];
        }

        if (requestParameters['limit'] != null) {
            queryParameters['limit'] = requestParameters['limit'];
        }

        const headerParameters: runtime.HTTPHeaders = {};


        let urlPath = `/delivery/stores/{id}/reviews`;
        urlPath = urlPath.replace(`{${"id"}}`, encodeURIComponent(String(requestParameters['id'])));

        const response = await this.request({
            path: urlPath,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     * مراجعات المتجر
     */
    async deliveryStoreControllerGetStoreReviews(requestParameters: DeliveryStoreControllerGetStoreReviewsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {
        await this.deliveryStoreControllerGetStoreReviewsRaw(requestParameters, initOverrides);
    }

    /**
     * إحصائيات المتجر - عامة
     */
    async deliveryStoreControllerGetStoreStatisticsRaw(requestParameters: DeliveryStoreControllerGetStoreStatisticsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {
        if (requestParameters['id'] == null) {
            throw new runtime.RequiredError(
                'id',
                'Required parameter "id" was null or undefined when calling deliveryStoreControllerGetStoreStatistics().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};


        let urlPath = `/delivery/stores/{id}/statistics`;
        urlPath = urlPath.replace(`{${"id"}}`, encodeURIComponent(String(requestParameters['id'])));

        const response = await this.request({
            path: urlPath,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     * إحصائيات المتجر - عامة
     */
    async deliveryStoreControllerGetStoreStatistics(requestParameters: DeliveryStoreControllerGetStoreStatisticsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {
        await this.deliveryStoreControllerGetStoreStatisticsRaw(requestParameters, initOverrides);
    }

    /**
     * البحث عن متاجر
     */
    async deliveryStoreControllerSearchStoresRaw(requestParameters: DeliveryStoreControllerSearchStoresRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {
        if (requestParameters['q'] == null) {
            throw new runtime.RequiredError(
                'q',
                'Required parameter "q" was null or undefined when calling deliveryStoreControllerSearchStores().'
            );
        }

        const queryParameters: any = {};

        if (requestParameters['q'] != null) {
            queryParameters['q'] = requestParameters['q'];
        }

        if (requestParameters['cursor'] != null) {
            queryParameters['cursor'] = requestParameters['cursor'];
        }

        if (requestParameters['limit'] != null) {
            queryParameters['limit'] = requestParameters['limit'];
        }

        const headerParameters: runtime.HTTPHeaders = {};


        let urlPath = `/delivery/stores/search`;

        const response = await this.request({
            path: urlPath,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     * البحث عن متاجر
     */
    async deliveryStoreControllerSearchStores(requestParameters: DeliveryStoreControllerSearchStoresRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {
        await this.deliveryStoreControllerSearchStoresRaw(requestParameters, initOverrides);
    }

    /**
     * تحديث متجر
     */
    async deliveryStoreControllerUpdateStoreRaw(requestParameters: DeliveryStoreControllerUpdateStoreRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {
        if (requestParameters['id'] == null) {
            throw new runtime.RequiredError(
                'id',
                'Required parameter "id" was null or undefined when calling deliveryStoreControllerUpdateStore().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};


        let urlPath = `/delivery/stores/{id}`;
        urlPath = urlPath.replace(`{${"id"}}`, encodeURIComponent(String(requestParameters['id'])));

        const response = await this.request({
            path: urlPath,
            method: 'PUT',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     * تحديث متجر
     */
    async deliveryStoreControllerUpdateStore(requestParameters: DeliveryStoreControllerUpdateStoreRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {
        await this.deliveryStoreControllerUpdateStoreRaw(requestParameters, initOverrides);
    }

}
