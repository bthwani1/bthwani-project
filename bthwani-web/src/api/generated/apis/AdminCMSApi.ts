/* tslint:disable */
/* eslint-disable */
/**
 * Bthwani API v2
 * NestJS API Documentation - نظام إدارة الطلبات والتجارة
 *
 * The version of the OpenAPI document: 2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';

export interface AdminCMSControllerDeleteCouponRequest {
    id: string;
}

export interface AdminCMSControllerDeleteHomeLayoutRequest {
    id: string;
}

export interface AdminCMSControllerDeleteOnboardingSlideRequest {
    id: string;
}

export interface AdminCMSControllerDeletePageRequest {
    id: string;
}

export interface AdminCMSControllerDeleteStringRequest {
    id: string;
}

export interface AdminCMSControllerDeleteSubscriptionRequest {
    id: string;
}

export interface AdminCMSControllerExportReportRequest {
    id: string;
    format: string;
}

export interface AdminCMSControllerUpdateHomeLayoutRequest {
    id: string;
}

export interface AdminCMSControllerUpdateOnboardingSlideRequest {
    id: string;
}

export interface AdminCMSControllerUpdatePageRequest {
    id: string;
}

export interface AdminCMSControllerUpdateStringRequest {
    id: string;
}

/**
 * AdminCMSApi - interface
 * 
 * @export
 * @interface AdminCMSApiInterface
 */
export interface AdminCMSApiInterface {
    /**
     * 
     * @summary إضافة تخطيط للصفحة الرئيسية
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof AdminCMSApiInterface
     */
    adminCMSControllerCreateHomeLayoutRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>>;

    /**
     * إضافة تخطيط للصفحة الرئيسية
     */
    adminCMSControllerCreateHomeLayout(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void>;

    /**
     * 
     * @summary إضافة شريحة أونبوردينج
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof AdminCMSApiInterface
     */
    adminCMSControllerCreateOnboardingSlideRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>>;

    /**
     * إضافة شريحة أونبوردينج
     */
    adminCMSControllerCreateOnboardingSlide(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void>;

    /**
     * 
     * @summary إضافة نص/ترجمة
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof AdminCMSApiInterface
     */
    adminCMSControllerCreateStringRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>>;

    /**
     * إضافة نص/ترجمة
     */
    adminCMSControllerCreateString(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void>;

    /**
     * 
     * @summary حذف قسيمة
     * @param {string} id 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof AdminCMSApiInterface
     */
    adminCMSControllerDeleteCouponRaw(requestParameters: AdminCMSControllerDeleteCouponRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>>;

    /**
     * حذف قسيمة
     */
    adminCMSControllerDeleteCoupon(requestParameters: AdminCMSControllerDeleteCouponRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void>;

    /**
     * 
     * @summary حذف تخطيط الصفحة الرئيسية
     * @param {string} id 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof AdminCMSApiInterface
     */
    adminCMSControllerDeleteHomeLayoutRaw(requestParameters: AdminCMSControllerDeleteHomeLayoutRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>>;

    /**
     * حذف تخطيط الصفحة الرئيسية
     */
    adminCMSControllerDeleteHomeLayout(requestParameters: AdminCMSControllerDeleteHomeLayoutRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void>;

    /**
     * 
     * @summary حذف شريحة أونبوردينج
     * @param {string} id 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof AdminCMSApiInterface
     */
    adminCMSControllerDeleteOnboardingSlideRaw(requestParameters: AdminCMSControllerDeleteOnboardingSlideRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>>;

    /**
     * حذف شريحة أونبوردينج
     */
    adminCMSControllerDeleteOnboardingSlide(requestParameters: AdminCMSControllerDeleteOnboardingSlideRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void>;

    /**
     * 
     * @summary حذف صفحة
     * @param {string} id 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof AdminCMSApiInterface
     */
    adminCMSControllerDeletePageRaw(requestParameters: AdminCMSControllerDeletePageRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>>;

    /**
     * حذف صفحة
     */
    adminCMSControllerDeletePage(requestParameters: AdminCMSControllerDeletePageRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void>;

    /**
     * 
     * @summary حذف نص/ترجمة
     * @param {string} id 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof AdminCMSApiInterface
     */
    adminCMSControllerDeleteStringRaw(requestParameters: AdminCMSControllerDeleteStringRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>>;

    /**
     * حذف نص/ترجمة
     */
    adminCMSControllerDeleteString(requestParameters: AdminCMSControllerDeleteStringRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void>;

    /**
     * 
     * @summary حذف اشتراك
     * @param {string} id 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof AdminCMSApiInterface
     */
    adminCMSControllerDeleteSubscriptionRaw(requestParameters: AdminCMSControllerDeleteSubscriptionRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>>;

    /**
     * حذف اشتراك
     */
    adminCMSControllerDeleteSubscription(requestParameters: AdminCMSControllerDeleteSubscriptionRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void>;

    /**
     * 
     * @summary تصدير تقرير
     * @param {string} id 
     * @param {string} format 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof AdminCMSApiInterface
     */
    adminCMSControllerExportReportRaw(requestParameters: AdminCMSControllerExportReportRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>>;

    /**
     * تصدير تقرير
     */
    adminCMSControllerExportReport(requestParameters: AdminCMSControllerExportReportRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void>;

    /**
     * 
     * @summary تصدير التسويات
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof AdminCMSApiInterface
     */
    adminCMSControllerExportSettlementsRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>>;

    /**
     * تصدير التسويات
     */
    adminCMSControllerExportSettlements(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void>;

    /**
     * 
     * @summary إنشاء تقرير
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof AdminCMSApiInterface
     */
    adminCMSControllerGenerateReportRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>>;

    /**
     * إنشاء تقرير
     */
    adminCMSControllerGenerateReport(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void>;

    /**
     * 
     * @summary التقارير الفورية
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof AdminCMSApiInterface
     */
    adminCMSControllerGetRealtimeReportsRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>>;

    /**
     * التقارير الفورية
     */
    adminCMSControllerGetRealtimeReports(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void>;

    /**
     * 
     * @summary تحديث تخطيط الصفحة الرئيسية
     * @param {string} id 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof AdminCMSApiInterface
     */
    adminCMSControllerUpdateHomeLayoutRaw(requestParameters: AdminCMSControllerUpdateHomeLayoutRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>>;

    /**
     * تحديث تخطيط الصفحة الرئيسية
     */
    adminCMSControllerUpdateHomeLayout(requestParameters: AdminCMSControllerUpdateHomeLayoutRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void>;

    /**
     * 
     * @summary تحديث شريحة أونبوردينج
     * @param {string} id 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof AdminCMSApiInterface
     */
    adminCMSControllerUpdateOnboardingSlideRaw(requestParameters: AdminCMSControllerUpdateOnboardingSlideRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>>;

    /**
     * تحديث شريحة أونبوردينج
     */
    adminCMSControllerUpdateOnboardingSlide(requestParameters: AdminCMSControllerUpdateOnboardingSlideRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void>;

    /**
     * 
     * @summary تحديث صفحة
     * @param {string} id 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof AdminCMSApiInterface
     */
    adminCMSControllerUpdatePageRaw(requestParameters: AdminCMSControllerUpdatePageRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>>;

    /**
     * تحديث صفحة
     */
    adminCMSControllerUpdatePage(requestParameters: AdminCMSControllerUpdatePageRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void>;

    /**
     * 
     * @summary تحديث نص/ترجمة
     * @param {string} id 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof AdminCMSApiInterface
     */
    adminCMSControllerUpdateStringRaw(requestParameters: AdminCMSControllerUpdateStringRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>>;

    /**
     * تحديث نص/ترجمة
     */
    adminCMSControllerUpdateString(requestParameters: AdminCMSControllerUpdateStringRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void>;

}

/**
 * 
 */
export class AdminCMSApi extends runtime.BaseAPI implements AdminCMSApiInterface {

    /**
     * إضافة تخطيط للصفحة الرئيسية
     */
    async adminCMSControllerCreateHomeLayoutRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.accessToken) {
            const token = this.configuration.accessToken;
            const tokenString = await token("bearer", []);

            if (tokenString) {
                headerParameters["Authorization"] = `Bearer ${tokenString}`;
            }
        }

        let urlPath = `/admin/home-layouts`;

        const response = await this.request({
            path: urlPath,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     * إضافة تخطيط للصفحة الرئيسية
     */
    async adminCMSControllerCreateHomeLayout(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {
        await this.adminCMSControllerCreateHomeLayoutRaw(initOverrides);
    }

    /**
     * إضافة شريحة أونبوردينج
     */
    async adminCMSControllerCreateOnboardingSlideRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.accessToken) {
            const token = this.configuration.accessToken;
            const tokenString = await token("bearer", []);

            if (tokenString) {
                headerParameters["Authorization"] = `Bearer ${tokenString}`;
            }
        }

        let urlPath = `/admin/onboarding-slides`;

        const response = await this.request({
            path: urlPath,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     * إضافة شريحة أونبوردينج
     */
    async adminCMSControllerCreateOnboardingSlide(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {
        await this.adminCMSControllerCreateOnboardingSlideRaw(initOverrides);
    }

    /**
     * إضافة نص/ترجمة
     */
    async adminCMSControllerCreateStringRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.accessToken) {
            const token = this.configuration.accessToken;
            const tokenString = await token("bearer", []);

            if (tokenString) {
                headerParameters["Authorization"] = `Bearer ${tokenString}`;
            }
        }

        let urlPath = `/admin/strings`;

        const response = await this.request({
            path: urlPath,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     * إضافة نص/ترجمة
     */
    async adminCMSControllerCreateString(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {
        await this.adminCMSControllerCreateStringRaw(initOverrides);
    }

    /**
     * حذف قسيمة
     */
    async adminCMSControllerDeleteCouponRaw(requestParameters: AdminCMSControllerDeleteCouponRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {
        if (requestParameters['id'] == null) {
            throw new runtime.RequiredError(
                'id',
                'Required parameter "id" was null or undefined when calling adminCMSControllerDeleteCoupon().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.accessToken) {
            const token = this.configuration.accessToken;
            const tokenString = await token("bearer", []);

            if (tokenString) {
                headerParameters["Authorization"] = `Bearer ${tokenString}`;
            }
        }

        let urlPath = `/admin/wallet/coupons/{id}`;
        urlPath = urlPath.replace(`{${"id"}}`, encodeURIComponent(String(requestParameters['id'])));

        const response = await this.request({
            path: urlPath,
            method: 'DELETE',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     * حذف قسيمة
     */
    async adminCMSControllerDeleteCoupon(requestParameters: AdminCMSControllerDeleteCouponRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {
        await this.adminCMSControllerDeleteCouponRaw(requestParameters, initOverrides);
    }

    /**
     * حذف تخطيط الصفحة الرئيسية
     */
    async adminCMSControllerDeleteHomeLayoutRaw(requestParameters: AdminCMSControllerDeleteHomeLayoutRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {
        if (requestParameters['id'] == null) {
            throw new runtime.RequiredError(
                'id',
                'Required parameter "id" was null or undefined when calling adminCMSControllerDeleteHomeLayout().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.accessToken) {
            const token = this.configuration.accessToken;
            const tokenString = await token("bearer", []);

            if (tokenString) {
                headerParameters["Authorization"] = `Bearer ${tokenString}`;
            }
        }

        let urlPath = `/admin/home-layouts/{id}`;
        urlPath = urlPath.replace(`{${"id"}}`, encodeURIComponent(String(requestParameters['id'])));

        const response = await this.request({
            path: urlPath,
            method: 'DELETE',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     * حذف تخطيط الصفحة الرئيسية
     */
    async adminCMSControllerDeleteHomeLayout(requestParameters: AdminCMSControllerDeleteHomeLayoutRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {
        await this.adminCMSControllerDeleteHomeLayoutRaw(requestParameters, initOverrides);
    }

    /**
     * حذف شريحة أونبوردينج
     */
    async adminCMSControllerDeleteOnboardingSlideRaw(requestParameters: AdminCMSControllerDeleteOnboardingSlideRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {
        if (requestParameters['id'] == null) {
            throw new runtime.RequiredError(
                'id',
                'Required parameter "id" was null or undefined when calling adminCMSControllerDeleteOnboardingSlide().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.accessToken) {
            const token = this.configuration.accessToken;
            const tokenString = await token("bearer", []);

            if (tokenString) {
                headerParameters["Authorization"] = `Bearer ${tokenString}`;
            }
        }

        let urlPath = `/admin/onboarding-slides/{id}`;
        urlPath = urlPath.replace(`{${"id"}}`, encodeURIComponent(String(requestParameters['id'])));

        const response = await this.request({
            path: urlPath,
            method: 'DELETE',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     * حذف شريحة أونبوردينج
     */
    async adminCMSControllerDeleteOnboardingSlide(requestParameters: AdminCMSControllerDeleteOnboardingSlideRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {
        await this.adminCMSControllerDeleteOnboardingSlideRaw(requestParameters, initOverrides);
    }

    /**
     * حذف صفحة
     */
    async adminCMSControllerDeletePageRaw(requestParameters: AdminCMSControllerDeletePageRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {
        if (requestParameters['id'] == null) {
            throw new runtime.RequiredError(
                'id',
                'Required parameter "id" was null or undefined when calling adminCMSControllerDeletePage().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.accessToken) {
            const token = this.configuration.accessToken;
            const tokenString = await token("bearer", []);

            if (tokenString) {
                headerParameters["Authorization"] = `Bearer ${tokenString}`;
            }
        }

        let urlPath = `/admin/pages/{id}`;
        urlPath = urlPath.replace(`{${"id"}}`, encodeURIComponent(String(requestParameters['id'])));

        const response = await this.request({
            path: urlPath,
            method: 'DELETE',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     * حذف صفحة
     */
    async adminCMSControllerDeletePage(requestParameters: AdminCMSControllerDeletePageRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {
        await this.adminCMSControllerDeletePageRaw(requestParameters, initOverrides);
    }

    /**
     * حذف نص/ترجمة
     */
    async adminCMSControllerDeleteStringRaw(requestParameters: AdminCMSControllerDeleteStringRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {
        if (requestParameters['id'] == null) {
            throw new runtime.RequiredError(
                'id',
                'Required parameter "id" was null or undefined when calling adminCMSControllerDeleteString().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.accessToken) {
            const token = this.configuration.accessToken;
            const tokenString = await token("bearer", []);

            if (tokenString) {
                headerParameters["Authorization"] = `Bearer ${tokenString}`;
            }
        }

        let urlPath = `/admin/strings/{id}`;
        urlPath = urlPath.replace(`{${"id"}}`, encodeURIComponent(String(requestParameters['id'])));

        const response = await this.request({
            path: urlPath,
            method: 'DELETE',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     * حذف نص/ترجمة
     */
    async adminCMSControllerDeleteString(requestParameters: AdminCMSControllerDeleteStringRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {
        await this.adminCMSControllerDeleteStringRaw(requestParameters, initOverrides);
    }

    /**
     * حذف اشتراك
     */
    async adminCMSControllerDeleteSubscriptionRaw(requestParameters: AdminCMSControllerDeleteSubscriptionRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {
        if (requestParameters['id'] == null) {
            throw new runtime.RequiredError(
                'id',
                'Required parameter "id" was null or undefined when calling adminCMSControllerDeleteSubscription().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.accessToken) {
            const token = this.configuration.accessToken;
            const tokenString = await token("bearer", []);

            if (tokenString) {
                headerParameters["Authorization"] = `Bearer ${tokenString}`;
            }
        }

        let urlPath = `/admin/wallet/subscriptions/{id}`;
        urlPath = urlPath.replace(`{${"id"}}`, encodeURIComponent(String(requestParameters['id'])));

        const response = await this.request({
            path: urlPath,
            method: 'DELETE',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     * حذف اشتراك
     */
    async adminCMSControllerDeleteSubscription(requestParameters: AdminCMSControllerDeleteSubscriptionRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {
        await this.adminCMSControllerDeleteSubscriptionRaw(requestParameters, initOverrides);
    }

    /**
     * تصدير تقرير
     */
    async adminCMSControllerExportReportRaw(requestParameters: AdminCMSControllerExportReportRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {
        if (requestParameters['id'] == null) {
            throw new runtime.RequiredError(
                'id',
                'Required parameter "id" was null or undefined when calling adminCMSControllerExportReport().'
            );
        }

        if (requestParameters['format'] == null) {
            throw new runtime.RequiredError(
                'format',
                'Required parameter "format" was null or undefined when calling adminCMSControllerExportReport().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.accessToken) {
            const token = this.configuration.accessToken;
            const tokenString = await token("bearer", []);

            if (tokenString) {
                headerParameters["Authorization"] = `Bearer ${tokenString}`;
            }
        }

        let urlPath = `/admin/reports/export/{id}/{format}`;
        urlPath = urlPath.replace(`{${"id"}}`, encodeURIComponent(String(requestParameters['id'])));
        urlPath = urlPath.replace(`{${"format"}}`, encodeURIComponent(String(requestParameters['format'])));

        const response = await this.request({
            path: urlPath,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     * تصدير تقرير
     */
    async adminCMSControllerExportReport(requestParameters: AdminCMSControllerExportReportRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {
        await this.adminCMSControllerExportReportRaw(requestParameters, initOverrides);
    }

    /**
     * تصدير التسويات
     */
    async adminCMSControllerExportSettlementsRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.accessToken) {
            const token = this.configuration.accessToken;
            const tokenString = await token("bearer", []);

            if (tokenString) {
                headerParameters["Authorization"] = `Bearer ${tokenString}`;
            }
        }

        let urlPath = `/admin/wallet/settlements/export`;

        const response = await this.request({
            path: urlPath,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     * تصدير التسويات
     */
    async adminCMSControllerExportSettlements(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {
        await this.adminCMSControllerExportSettlementsRaw(initOverrides);
    }

    /**
     * إنشاء تقرير
     */
    async adminCMSControllerGenerateReportRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.accessToken) {
            const token = this.configuration.accessToken;
            const tokenString = await token("bearer", []);

            if (tokenString) {
                headerParameters["Authorization"] = `Bearer ${tokenString}`;
            }
        }

        let urlPath = `/admin/reports/generate`;

        const response = await this.request({
            path: urlPath,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     * إنشاء تقرير
     */
    async adminCMSControllerGenerateReport(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {
        await this.adminCMSControllerGenerateReportRaw(initOverrides);
    }

    /**
     * التقارير الفورية
     */
    async adminCMSControllerGetRealtimeReportsRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.accessToken) {
            const token = this.configuration.accessToken;
            const tokenString = await token("bearer", []);

            if (tokenString) {
                headerParameters["Authorization"] = `Bearer ${tokenString}`;
            }
        }

        let urlPath = `/admin/reports/realtime`;

        const response = await this.request({
            path: urlPath,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     * التقارير الفورية
     */
    async adminCMSControllerGetRealtimeReports(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {
        await this.adminCMSControllerGetRealtimeReportsRaw(initOverrides);
    }

    /**
     * تحديث تخطيط الصفحة الرئيسية
     */
    async adminCMSControllerUpdateHomeLayoutRaw(requestParameters: AdminCMSControllerUpdateHomeLayoutRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {
        if (requestParameters['id'] == null) {
            throw new runtime.RequiredError(
                'id',
                'Required parameter "id" was null or undefined when calling adminCMSControllerUpdateHomeLayout().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.accessToken) {
            const token = this.configuration.accessToken;
            const tokenString = await token("bearer", []);

            if (tokenString) {
                headerParameters["Authorization"] = `Bearer ${tokenString}`;
            }
        }

        let urlPath = `/admin/home-layouts/{id}`;
        urlPath = urlPath.replace(`{${"id"}}`, encodeURIComponent(String(requestParameters['id'])));

        const response = await this.request({
            path: urlPath,
            method: 'PUT',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     * تحديث تخطيط الصفحة الرئيسية
     */
    async adminCMSControllerUpdateHomeLayout(requestParameters: AdminCMSControllerUpdateHomeLayoutRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {
        await this.adminCMSControllerUpdateHomeLayoutRaw(requestParameters, initOverrides);
    }

    /**
     * تحديث شريحة أونبوردينج
     */
    async adminCMSControllerUpdateOnboardingSlideRaw(requestParameters: AdminCMSControllerUpdateOnboardingSlideRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {
        if (requestParameters['id'] == null) {
            throw new runtime.RequiredError(
                'id',
                'Required parameter "id" was null or undefined when calling adminCMSControllerUpdateOnboardingSlide().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.accessToken) {
            const token = this.configuration.accessToken;
            const tokenString = await token("bearer", []);

            if (tokenString) {
                headerParameters["Authorization"] = `Bearer ${tokenString}`;
            }
        }

        let urlPath = `/admin/onboarding-slides/{id}`;
        urlPath = urlPath.replace(`{${"id"}}`, encodeURIComponent(String(requestParameters['id'])));

        const response = await this.request({
            path: urlPath,
            method: 'PUT',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     * تحديث شريحة أونبوردينج
     */
    async adminCMSControllerUpdateOnboardingSlide(requestParameters: AdminCMSControllerUpdateOnboardingSlideRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {
        await this.adminCMSControllerUpdateOnboardingSlideRaw(requestParameters, initOverrides);
    }

    /**
     * تحديث صفحة
     */
    async adminCMSControllerUpdatePageRaw(requestParameters: AdminCMSControllerUpdatePageRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {
        if (requestParameters['id'] == null) {
            throw new runtime.RequiredError(
                'id',
                'Required parameter "id" was null or undefined when calling adminCMSControllerUpdatePage().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.accessToken) {
            const token = this.configuration.accessToken;
            const tokenString = await token("bearer", []);

            if (tokenString) {
                headerParameters["Authorization"] = `Bearer ${tokenString}`;
            }
        }

        let urlPath = `/admin/pages/{id}`;
        urlPath = urlPath.replace(`{${"id"}}`, encodeURIComponent(String(requestParameters['id'])));

        const response = await this.request({
            path: urlPath,
            method: 'PUT',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     * تحديث صفحة
     */
    async adminCMSControllerUpdatePage(requestParameters: AdminCMSControllerUpdatePageRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {
        await this.adminCMSControllerUpdatePageRaw(requestParameters, initOverrides);
    }

    /**
     * تحديث نص/ترجمة
     */
    async adminCMSControllerUpdateStringRaw(requestParameters: AdminCMSControllerUpdateStringRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {
        if (requestParameters['id'] == null) {
            throw new runtime.RequiredError(
                'id',
                'Required parameter "id" was null or undefined when calling adminCMSControllerUpdateString().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.accessToken) {
            const token = this.configuration.accessToken;
            const tokenString = await token("bearer", []);

            if (tokenString) {
                headerParameters["Authorization"] = `Bearer ${tokenString}`;
            }
        }

        let urlPath = `/admin/strings/{id}`;
        urlPath = urlPath.replace(`{${"id"}}`, encodeURIComponent(String(requestParameters['id'])));

        const response = await this.request({
            path: urlPath,
            method: 'PUT',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     * تحديث نص/ترجمة
     */
    async adminCMSControllerUpdateString(requestParameters: AdminCMSControllerUpdateStringRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {
        await this.adminCMSControllerUpdateStringRaw(requestParameters, initOverrides);
    }

}
