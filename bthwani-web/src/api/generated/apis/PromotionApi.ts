/* tslint:disable */
/* eslint-disable */
/**
 * Bthwani API v2
 * NestJS API Documentation - نظام إدارة الطلبات والتجارة
 *
 * The version of the OpenAPI document: 2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  CreatePromotionDto,
} from '../models/index';
import {
    CreatePromotionDtoFromJSON,
    CreatePromotionDtoToJSON,
} from '../models/index';

export interface PromotionControllerCreatePromotionRequest {
    createPromotionDto: CreatePromotionDto;
}

export interface PromotionControllerDeletePromotionRequest {
    id: string;
}

export interface PromotionControllerGetAllPromotionsRequest {
    isActive: boolean;
}

export interface PromotionControllerGetPromotionRequest {
    id: string;
}

export interface PromotionControllerGetPromotionsByPlacementRequest {
    placement: PromotionControllerGetPromotionsByPlacementPlacementEnum;
    channel?: PromotionControllerGetPromotionsByPlacementChannelEnum;
    city?: string;
}

export interface PromotionControllerRecordClickRequest {
    id: string;
}

export interface PromotionControllerRecordConversionRequest {
    id: string;
}

export interface PromotionControllerUpdatePromotionRequest {
    id: string;
    body: object;
}

/**
 * PromotionApi - interface
 * 
 * @export
 * @interface PromotionApiInterface
 */
export interface PromotionApiInterface {
    /**
     * 
     * @summary إنشاء عرض ترويجي
     * @param {CreatePromotionDto} createPromotionDto 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof PromotionApiInterface
     */
    promotionControllerCreatePromotionRaw(requestParameters: PromotionControllerCreatePromotionRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>>;

    /**
     * إنشاء عرض ترويجي
     */
    promotionControllerCreatePromotion(requestParameters: PromotionControllerCreatePromotionRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void>;

    /**
     * 
     * @summary حذف عرض
     * @param {string} id 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof PromotionApiInterface
     */
    promotionControllerDeletePromotionRaw(requestParameters: PromotionControllerDeletePromotionRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>>;

    /**
     * حذف عرض
     */
    promotionControllerDeletePromotion(requestParameters: PromotionControllerDeletePromotionRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void>;

    /**
     * 
     * @summary الحصول على كل العروض
     * @param {boolean} isActive 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof PromotionApiInterface
     */
    promotionControllerGetAllPromotionsRaw(requestParameters: PromotionControllerGetAllPromotionsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>>;

    /**
     * الحصول على كل العروض
     */
    promotionControllerGetAllPromotions(requestParameters: PromotionControllerGetAllPromotionsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void>;

    /**
     * 
     * @summary الحصول على عرض محدد
     * @param {string} id 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof PromotionApiInterface
     */
    promotionControllerGetPromotionRaw(requestParameters: PromotionControllerGetPromotionRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>>;

    /**
     * الحصول على عرض محدد
     */
    promotionControllerGetPromotion(requestParameters: PromotionControllerGetPromotionRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void>;

    /**
     * 
     * @summary الحصول على عروض حسب الموضع (public)
     * @param {'home_hero' | 'home_strip' | 'category_header' | 'category_feed' | 'store_header' | 'search_banner' | 'cart' | 'checkout'} placement 
     * @param {'app' | 'web'} [channel] 
     * @param {string} [city] 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof PromotionApiInterface
     */
    promotionControllerGetPromotionsByPlacementRaw(requestParameters: PromotionControllerGetPromotionsByPlacementRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>>;

    /**
     * الحصول على عروض حسب الموضع (public)
     */
    promotionControllerGetPromotionsByPlacement(requestParameters: PromotionControllerGetPromotionsByPlacementRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void>;

    /**
     * 
     * @summary إحصائيات العروض
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof PromotionApiInterface
     */
    promotionControllerGetStatisticsRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>>;

    /**
     * إحصائيات العروض
     */
    promotionControllerGetStatistics(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void>;

    /**
     * 
     * @summary تسجيل نقرة على عرض
     * @param {string} id 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof PromotionApiInterface
     */
    promotionControllerRecordClickRaw(requestParameters: PromotionControllerRecordClickRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>>;

    /**
     * تسجيل نقرة على عرض
     */
    promotionControllerRecordClick(requestParameters: PromotionControllerRecordClickRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void>;

    /**
     * 
     * @summary تسجيل تحويل (طلب من العرض)
     * @param {string} id 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof PromotionApiInterface
     */
    promotionControllerRecordConversionRaw(requestParameters: PromotionControllerRecordConversionRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>>;

    /**
     * تسجيل تحويل (طلب من العرض)
     */
    promotionControllerRecordConversion(requestParameters: PromotionControllerRecordConversionRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void>;

    /**
     * 
     * @summary تحديث عرض
     * @param {string} id 
     * @param {object} body 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof PromotionApiInterface
     */
    promotionControllerUpdatePromotionRaw(requestParameters: PromotionControllerUpdatePromotionRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>>;

    /**
     * تحديث عرض
     */
    promotionControllerUpdatePromotion(requestParameters: PromotionControllerUpdatePromotionRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void>;

}

/**
 * 
 */
export class PromotionApi extends runtime.BaseAPI implements PromotionApiInterface {

    /**
     * إنشاء عرض ترويجي
     */
    async promotionControllerCreatePromotionRaw(requestParameters: PromotionControllerCreatePromotionRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {
        if (requestParameters['createPromotionDto'] == null) {
            throw new runtime.RequiredError(
                'createPromotionDto',
                'Required parameter "createPromotionDto" was null or undefined when calling promotionControllerCreatePromotion().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        if (this.configuration && this.configuration.accessToken) {
            const token = this.configuration.accessToken;
            const tokenString = await token("bearer", []);

            if (tokenString) {
                headerParameters["Authorization"] = `Bearer ${tokenString}`;
            }
        }

        let urlPath = `/promotions`;

        const response = await this.request({
            path: urlPath,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: CreatePromotionDtoToJSON(requestParameters['createPromotionDto']),
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     * إنشاء عرض ترويجي
     */
    async promotionControllerCreatePromotion(requestParameters: PromotionControllerCreatePromotionRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {
        await this.promotionControllerCreatePromotionRaw(requestParameters, initOverrides);
    }

    /**
     * حذف عرض
     */
    async promotionControllerDeletePromotionRaw(requestParameters: PromotionControllerDeletePromotionRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {
        if (requestParameters['id'] == null) {
            throw new runtime.RequiredError(
                'id',
                'Required parameter "id" was null or undefined when calling promotionControllerDeletePromotion().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.accessToken) {
            const token = this.configuration.accessToken;
            const tokenString = await token("bearer", []);

            if (tokenString) {
                headerParameters["Authorization"] = `Bearer ${tokenString}`;
            }
        }

        let urlPath = `/promotions/{id}`;
        urlPath = urlPath.replace(`{${"id"}}`, encodeURIComponent(String(requestParameters['id'])));

        const response = await this.request({
            path: urlPath,
            method: 'DELETE',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     * حذف عرض
     */
    async promotionControllerDeletePromotion(requestParameters: PromotionControllerDeletePromotionRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {
        await this.promotionControllerDeletePromotionRaw(requestParameters, initOverrides);
    }

    /**
     * الحصول على كل العروض
     */
    async promotionControllerGetAllPromotionsRaw(requestParameters: PromotionControllerGetAllPromotionsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {
        if (requestParameters['isActive'] == null) {
            throw new runtime.RequiredError(
                'isActive',
                'Required parameter "isActive" was null or undefined when calling promotionControllerGetAllPromotions().'
            );
        }

        const queryParameters: any = {};

        if (requestParameters['isActive'] != null) {
            queryParameters['isActive'] = requestParameters['isActive'];
        }

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.accessToken) {
            const token = this.configuration.accessToken;
            const tokenString = await token("bearer", []);

            if (tokenString) {
                headerParameters["Authorization"] = `Bearer ${tokenString}`;
            }
        }

        let urlPath = `/promotions`;

        const response = await this.request({
            path: urlPath,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     * الحصول على كل العروض
     */
    async promotionControllerGetAllPromotions(requestParameters: PromotionControllerGetAllPromotionsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {
        await this.promotionControllerGetAllPromotionsRaw(requestParameters, initOverrides);
    }

    /**
     * الحصول على عرض محدد
     */
    async promotionControllerGetPromotionRaw(requestParameters: PromotionControllerGetPromotionRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {
        if (requestParameters['id'] == null) {
            throw new runtime.RequiredError(
                'id',
                'Required parameter "id" was null or undefined when calling promotionControllerGetPromotion().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.accessToken) {
            const token = this.configuration.accessToken;
            const tokenString = await token("bearer", []);

            if (tokenString) {
                headerParameters["Authorization"] = `Bearer ${tokenString}`;
            }
        }

        let urlPath = `/promotions/{id}`;
        urlPath = urlPath.replace(`{${"id"}}`, encodeURIComponent(String(requestParameters['id'])));

        const response = await this.request({
            path: urlPath,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     * الحصول على عرض محدد
     */
    async promotionControllerGetPromotion(requestParameters: PromotionControllerGetPromotionRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {
        await this.promotionControllerGetPromotionRaw(requestParameters, initOverrides);
    }

    /**
     * الحصول على عروض حسب الموضع (public)
     */
    async promotionControllerGetPromotionsByPlacementRaw(requestParameters: PromotionControllerGetPromotionsByPlacementRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {
        if (requestParameters['placement'] == null) {
            throw new runtime.RequiredError(
                'placement',
                'Required parameter "placement" was null or undefined when calling promotionControllerGetPromotionsByPlacement().'
            );
        }

        const queryParameters: any = {};

        if (requestParameters['channel'] != null) {
            queryParameters['channel'] = requestParameters['channel'];
        }

        if (requestParameters['city'] != null) {
            queryParameters['city'] = requestParameters['city'];
        }

        if (requestParameters['placement'] != null) {
            queryParameters['placement'] = requestParameters['placement'];
        }

        const headerParameters: runtime.HTTPHeaders = {};


        let urlPath = `/promotions/by-placement`;

        const response = await this.request({
            path: urlPath,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     * الحصول على عروض حسب الموضع (public)
     */
    async promotionControllerGetPromotionsByPlacement(requestParameters: PromotionControllerGetPromotionsByPlacementRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {
        await this.promotionControllerGetPromotionsByPlacementRaw(requestParameters, initOverrides);
    }

    /**
     * إحصائيات العروض
     */
    async promotionControllerGetStatisticsRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.accessToken) {
            const token = this.configuration.accessToken;
            const tokenString = await token("bearer", []);

            if (tokenString) {
                headerParameters["Authorization"] = `Bearer ${tokenString}`;
            }
        }

        let urlPath = `/promotions/stats/overview`;

        const response = await this.request({
            path: urlPath,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     * إحصائيات العروض
     */
    async promotionControllerGetStatistics(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {
        await this.promotionControllerGetStatisticsRaw(initOverrides);
    }

    /**
     * تسجيل نقرة على عرض
     */
    async promotionControllerRecordClickRaw(requestParameters: PromotionControllerRecordClickRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {
        if (requestParameters['id'] == null) {
            throw new runtime.RequiredError(
                'id',
                'Required parameter "id" was null or undefined when calling promotionControllerRecordClick().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};


        let urlPath = `/promotions/{id}/click`;
        urlPath = urlPath.replace(`{${"id"}}`, encodeURIComponent(String(requestParameters['id'])));

        const response = await this.request({
            path: urlPath,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     * تسجيل نقرة على عرض
     */
    async promotionControllerRecordClick(requestParameters: PromotionControllerRecordClickRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {
        await this.promotionControllerRecordClickRaw(requestParameters, initOverrides);
    }

    /**
     * تسجيل تحويل (طلب من العرض)
     */
    async promotionControllerRecordConversionRaw(requestParameters: PromotionControllerRecordConversionRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {
        if (requestParameters['id'] == null) {
            throw new runtime.RequiredError(
                'id',
                'Required parameter "id" was null or undefined when calling promotionControllerRecordConversion().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};


        let urlPath = `/promotions/{id}/conversion`;
        urlPath = urlPath.replace(`{${"id"}}`, encodeURIComponent(String(requestParameters['id'])));

        const response = await this.request({
            path: urlPath,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     * تسجيل تحويل (طلب من العرض)
     */
    async promotionControllerRecordConversion(requestParameters: PromotionControllerRecordConversionRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {
        await this.promotionControllerRecordConversionRaw(requestParameters, initOverrides);
    }

    /**
     * تحديث عرض
     */
    async promotionControllerUpdatePromotionRaw(requestParameters: PromotionControllerUpdatePromotionRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {
        if (requestParameters['id'] == null) {
            throw new runtime.RequiredError(
                'id',
                'Required parameter "id" was null or undefined when calling promotionControllerUpdatePromotion().'
            );
        }

        if (requestParameters['body'] == null) {
            throw new runtime.RequiredError(
                'body',
                'Required parameter "body" was null or undefined when calling promotionControllerUpdatePromotion().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        if (this.configuration && this.configuration.accessToken) {
            const token = this.configuration.accessToken;
            const tokenString = await token("bearer", []);

            if (tokenString) {
                headerParameters["Authorization"] = `Bearer ${tokenString}`;
            }
        }

        let urlPath = `/promotions/{id}`;
        urlPath = urlPath.replace(`{${"id"}}`, encodeURIComponent(String(requestParameters['id'])));

        const response = await this.request({
            path: urlPath,
            method: 'PATCH',
            headers: headerParameters,
            query: queryParameters,
            body: requestParameters['body'] as any,
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     * تحديث عرض
     */
    async promotionControllerUpdatePromotion(requestParameters: PromotionControllerUpdatePromotionRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {
        await this.promotionControllerUpdatePromotionRaw(requestParameters, initOverrides);
    }

}

/**
 * @export
 */
export const PromotionControllerGetPromotionsByPlacementPlacementEnum = {
    HomeHero: 'home_hero',
    HomeStrip: 'home_strip',
    CategoryHeader: 'category_header',
    CategoryFeed: 'category_feed',
    StoreHeader: 'store_header',
    SearchBanner: 'search_banner',
    Cart: 'cart',
    Checkout: 'checkout'
} as const;
export type PromotionControllerGetPromotionsByPlacementPlacementEnum = typeof PromotionControllerGetPromotionsByPlacementPlacementEnum[keyof typeof PromotionControllerGetPromotionsByPlacementPlacementEnum];
/**
 * @export
 */
export const PromotionControllerGetPromotionsByPlacementChannelEnum = {
    App: 'app',
    Web: 'web'
} as const;
export type PromotionControllerGetPromotionsByPlacementChannelEnum = typeof PromotionControllerGetPromotionsByPlacementChannelEnum[keyof typeof PromotionControllerGetPromotionsByPlacementChannelEnum];
