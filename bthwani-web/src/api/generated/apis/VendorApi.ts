/* tslint:disable */
/* eslint-disable */
/**
 * Bthwani API v2
 * NestJS API Documentation - نظام إدارة الطلبات والتجارة
 *
 * The version of the OpenAPI document: 2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  CreateVendorDto,
  UpdateVendorDto,
  VendorControllerCreateSettlementRequest,
  VendorControllerRequestAccountDeletionRequest,
} from '../models/index';
import {
    CreateVendorDtoFromJSON,
    CreateVendorDtoToJSON,
    UpdateVendorDtoFromJSON,
    UpdateVendorDtoToJSON,
    VendorControllerCreateSettlementRequestFromJSON,
    VendorControllerCreateSettlementRequestToJSON,
    VendorControllerRequestAccountDeletionRequestFromJSON,
    VendorControllerRequestAccountDeletionRequestToJSON,
} from '../models/index';

export interface VendorControllerCreateRequest {
    createVendorDto: CreateVendorDto;
}

export interface VendorControllerCreateSettlementOperationRequest {
    vendorControllerCreateSettlementRequest: VendorControllerCreateSettlementRequest;
}

export interface VendorControllerFindAllRequest {
    cursor?: string;
    limit?: number;
}

export interface VendorControllerFindOneRequest {
    id: string;
}

export interface VendorControllerGetSalesRequest {
    limit: number;
}

export interface VendorControllerRequestAccountDeletionOperationRequest {
    vendorControllerRequestAccountDeletionRequest: VendorControllerRequestAccountDeletionRequest;
}

export interface VendorControllerResetPasswordRequest {
    id: string;
}

export interface VendorControllerUpdateRequest {
    updateVendorDto: UpdateVendorDto;
}

export interface VendorControllerUpdateStatusRequest {
    id: string;
}

export interface VendorControllerUpdateVendorRequest {
    id: string;
    updateVendorDto: UpdateVendorDto;
}

/**
 * VendorApi - interface
 * 
 * @export
 * @interface VendorApiInterface
 */
export interface VendorApiInterface {
    /**
     * 
     * @summary إنشاء تاجر جديد
     * @param {CreateVendorDto} createVendorDto 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof VendorApiInterface
     */
    vendorControllerCreateRaw(requestParameters: VendorControllerCreateRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>>;

    /**
     * إنشاء تاجر جديد
     */
    vendorControllerCreate(requestParameters: VendorControllerCreateRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void>;

    /**
     * 
     * @summary طلب تسوية مالية
     * @param {VendorControllerCreateSettlementRequest} vendorControllerCreateSettlementRequest 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof VendorApiInterface
     */
    vendorControllerCreateSettlementRaw(requestParameters: VendorControllerCreateSettlementOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>>;

    /**
     * طلب تسوية مالية
     */
    vendorControllerCreateSettlement(requestParameters: VendorControllerCreateSettlementOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void>;

    /**
     * 
     * @summary جلب كل التجار
     * @param {string} [cursor] Cursor للصفحة التالية
     * @param {number} [limit] عدد العناصر
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof VendorApiInterface
     */
    vendorControllerFindAllRaw(requestParameters: VendorControllerFindAllRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>>;

    /**
     * جلب كل التجار
     */
    vendorControllerFindAll(requestParameters: VendorControllerFindAllRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void>;

    /**
     * 
     * @summary جلب تاجر محدد
     * @param {string} id 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof VendorApiInterface
     */
    vendorControllerFindOneRaw(requestParameters: VendorControllerFindOneRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>>;

    /**
     * جلب تاجر محدد
     */
    vendorControllerFindOne(requestParameters: VendorControllerFindOneRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void>;

    /**
     * 
     * @summary كشف حساب التاجر
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof VendorApiInterface
     */
    vendorControllerGetAccountStatementRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>>;

    /**
     * كشف حساب التاجر
     */
    vendorControllerGetAccountStatement(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void>;

    /**
     * 
     * @summary لوحة معلومات التاجر
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof VendorApiInterface
     */
    vendorControllerGetDashboardRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>>;

    /**
     * لوحة معلومات التاجر
     */
    vendorControllerGetDashboard(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void>;

    /**
     * 
     * @summary جلب بيانات التاجر الحالي
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof VendorApiInterface
     */
    vendorControllerGetProfileRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>>;

    /**
     * جلب بيانات التاجر الحالي
     */
    vendorControllerGetProfile(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void>;

    /**
     * 
     * @summary سجل المبيعات
     * @param {number} limit 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof VendorApiInterface
     */
    vendorControllerGetSalesRaw(requestParameters: VendorControllerGetSalesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>>;

    /**
     * سجل المبيعات
     */
    vendorControllerGetSales(requestParameters: VendorControllerGetSalesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void>;

    /**
     * 
     * @summary طلبات التسوية المالية
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof VendorApiInterface
     */
    vendorControllerGetSettlementsRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>>;

    /**
     * طلبات التسوية المالية
     */
    vendorControllerGetSettlements(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void>;

    /**
     * 
     * @summary طلب حذف الحساب
     * @param {VendorControllerRequestAccountDeletionRequest} vendorControllerRequestAccountDeletionRequest 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof VendorApiInterface
     */
    vendorControllerRequestAccountDeletionRaw(requestParameters: VendorControllerRequestAccountDeletionOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>>;

    /**
     * طلب حذف الحساب
     */
    vendorControllerRequestAccountDeletion(requestParameters: VendorControllerRequestAccountDeletionOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void>;

    /**
     * 
     * @summary إعادة تعيين كلمة مرور التاجر
     * @param {string} id 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof VendorApiInterface
     */
    vendorControllerResetPasswordRaw(requestParameters: VendorControllerResetPasswordRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>>;

    /**
     * إعادة تعيين كلمة مرور التاجر
     */
    vendorControllerResetPassword(requestParameters: VendorControllerResetPasswordRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void>;

    /**
     * 
     * @summary تحديث بيانات التاجر
     * @param {UpdateVendorDto} updateVendorDto 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof VendorApiInterface
     */
    vendorControllerUpdateRaw(requestParameters: VendorControllerUpdateRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>>;

    /**
     * تحديث بيانات التاجر
     */
    vendorControllerUpdate(requestParameters: VendorControllerUpdateRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void>;

    /**
     * 
     * @summary تحديث حالة التاجر
     * @param {string} id 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof VendorApiInterface
     */
    vendorControllerUpdateStatusRaw(requestParameters: VendorControllerUpdateStatusRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>>;

    /**
     * تحديث حالة التاجر
     */
    vendorControllerUpdateStatus(requestParameters: VendorControllerUpdateStatusRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void>;

    /**
     * 
     * @summary تحديث تاجر (للإدارة)
     * @param {string} id 
     * @param {UpdateVendorDto} updateVendorDto 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof VendorApiInterface
     */
    vendorControllerUpdateVendorRaw(requestParameters: VendorControllerUpdateVendorRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>>;

    /**
     * تحديث تاجر (للإدارة)
     */
    vendorControllerUpdateVendor(requestParameters: VendorControllerUpdateVendorRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void>;

}

/**
 * 
 */
export class VendorApi extends runtime.BaseAPI implements VendorApiInterface {

    /**
     * إنشاء تاجر جديد
     */
    async vendorControllerCreateRaw(requestParameters: VendorControllerCreateRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {
        if (requestParameters['createVendorDto'] == null) {
            throw new runtime.RequiredError(
                'createVendorDto',
                'Required parameter "createVendorDto" was null or undefined when calling vendorControllerCreate().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';


        let urlPath = `/vendors`;

        const response = await this.request({
            path: urlPath,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: CreateVendorDtoToJSON(requestParameters['createVendorDto']),
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     * إنشاء تاجر جديد
     */
    async vendorControllerCreate(requestParameters: VendorControllerCreateRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {
        await this.vendorControllerCreateRaw(requestParameters, initOverrides);
    }

    /**
     * طلب تسوية مالية
     */
    async vendorControllerCreateSettlementRaw(requestParameters: VendorControllerCreateSettlementOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {
        if (requestParameters['vendorControllerCreateSettlementRequest'] == null) {
            throw new runtime.RequiredError(
                'vendorControllerCreateSettlementRequest',
                'Required parameter "vendorControllerCreateSettlementRequest" was null or undefined when calling vendorControllerCreateSettlement().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';


        let urlPath = `/vendors/settlements`;

        const response = await this.request({
            path: urlPath,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: VendorControllerCreateSettlementRequestToJSON(requestParameters['vendorControllerCreateSettlementRequest']),
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     * طلب تسوية مالية
     */
    async vendorControllerCreateSettlement(requestParameters: VendorControllerCreateSettlementOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {
        await this.vendorControllerCreateSettlementRaw(requestParameters, initOverrides);
    }

    /**
     * جلب كل التجار
     */
    async vendorControllerFindAllRaw(requestParameters: VendorControllerFindAllRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {
        const queryParameters: any = {};

        if (requestParameters['cursor'] != null) {
            queryParameters['cursor'] = requestParameters['cursor'];
        }

        if (requestParameters['limit'] != null) {
            queryParameters['limit'] = requestParameters['limit'];
        }

        const headerParameters: runtime.HTTPHeaders = {};


        let urlPath = `/vendors`;

        const response = await this.request({
            path: urlPath,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     * جلب كل التجار
     */
    async vendorControllerFindAll(requestParameters: VendorControllerFindAllRequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {
        await this.vendorControllerFindAllRaw(requestParameters, initOverrides);
    }

    /**
     * جلب تاجر محدد
     */
    async vendorControllerFindOneRaw(requestParameters: VendorControllerFindOneRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {
        if (requestParameters['id'] == null) {
            throw new runtime.RequiredError(
                'id',
                'Required parameter "id" was null or undefined when calling vendorControllerFindOne().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};


        let urlPath = `/vendors/{id}`;
        urlPath = urlPath.replace(`{${"id"}}`, encodeURIComponent(String(requestParameters['id'])));

        const response = await this.request({
            path: urlPath,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     * جلب تاجر محدد
     */
    async vendorControllerFindOne(requestParameters: VendorControllerFindOneRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {
        await this.vendorControllerFindOneRaw(requestParameters, initOverrides);
    }

    /**
     * كشف حساب التاجر
     */
    async vendorControllerGetAccountStatementRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};


        let urlPath = `/vendors/account/statement`;

        const response = await this.request({
            path: urlPath,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     * كشف حساب التاجر
     */
    async vendorControllerGetAccountStatement(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {
        await this.vendorControllerGetAccountStatementRaw(initOverrides);
    }

    /**
     * لوحة معلومات التاجر
     */
    async vendorControllerGetDashboardRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};


        let urlPath = `/vendors/dashboard/overview`;

        const response = await this.request({
            path: urlPath,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     * لوحة معلومات التاجر
     */
    async vendorControllerGetDashboard(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {
        await this.vendorControllerGetDashboardRaw(initOverrides);
    }

    /**
     * جلب بيانات التاجر الحالي
     */
    async vendorControllerGetProfileRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};


        let urlPath = `/vendors/me`;

        const response = await this.request({
            path: urlPath,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     * جلب بيانات التاجر الحالي
     */
    async vendorControllerGetProfile(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {
        await this.vendorControllerGetProfileRaw(initOverrides);
    }

    /**
     * سجل المبيعات
     */
    async vendorControllerGetSalesRaw(requestParameters: VendorControllerGetSalesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {
        if (requestParameters['limit'] == null) {
            throw new runtime.RequiredError(
                'limit',
                'Required parameter "limit" was null or undefined when calling vendorControllerGetSales().'
            );
        }

        const queryParameters: any = {};

        if (requestParameters['limit'] != null) {
            queryParameters['limit'] = requestParameters['limit'];
        }

        const headerParameters: runtime.HTTPHeaders = {};


        let urlPath = `/vendors/sales`;

        const response = await this.request({
            path: urlPath,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     * سجل المبيعات
     */
    async vendorControllerGetSales(requestParameters: VendorControllerGetSalesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {
        await this.vendorControllerGetSalesRaw(requestParameters, initOverrides);
    }

    /**
     * طلبات التسوية المالية
     */
    async vendorControllerGetSettlementsRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};


        let urlPath = `/vendors/settlements`;

        const response = await this.request({
            path: urlPath,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     * طلبات التسوية المالية
     */
    async vendorControllerGetSettlements(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {
        await this.vendorControllerGetSettlementsRaw(initOverrides);
    }

    /**
     * طلب حذف الحساب
     */
    async vendorControllerRequestAccountDeletionRaw(requestParameters: VendorControllerRequestAccountDeletionOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {
        if (requestParameters['vendorControllerRequestAccountDeletionRequest'] == null) {
            throw new runtime.RequiredError(
                'vendorControllerRequestAccountDeletionRequest',
                'Required parameter "vendorControllerRequestAccountDeletionRequest" was null or undefined when calling vendorControllerRequestAccountDeletion().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';


        let urlPath = `/vendors/account/delete-request`;

        const response = await this.request({
            path: urlPath,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: VendorControllerRequestAccountDeletionRequestToJSON(requestParameters['vendorControllerRequestAccountDeletionRequest']),
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     * طلب حذف الحساب
     */
    async vendorControllerRequestAccountDeletion(requestParameters: VendorControllerRequestAccountDeletionOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {
        await this.vendorControllerRequestAccountDeletionRaw(requestParameters, initOverrides);
    }

    /**
     * إعادة تعيين كلمة مرور التاجر
     */
    async vendorControllerResetPasswordRaw(requestParameters: VendorControllerResetPasswordRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {
        if (requestParameters['id'] == null) {
            throw new runtime.RequiredError(
                'id',
                'Required parameter "id" was null or undefined when calling vendorControllerResetPassword().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};


        let urlPath = `/vendors/{id}/reset-password`;
        urlPath = urlPath.replace(`{${"id"}}`, encodeURIComponent(String(requestParameters['id'])));

        const response = await this.request({
            path: urlPath,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     * إعادة تعيين كلمة مرور التاجر
     */
    async vendorControllerResetPassword(requestParameters: VendorControllerResetPasswordRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {
        await this.vendorControllerResetPasswordRaw(requestParameters, initOverrides);
    }

    /**
     * تحديث بيانات التاجر
     */
    async vendorControllerUpdateRaw(requestParameters: VendorControllerUpdateRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {
        if (requestParameters['updateVendorDto'] == null) {
            throw new runtime.RequiredError(
                'updateVendorDto',
                'Required parameter "updateVendorDto" was null or undefined when calling vendorControllerUpdate().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';


        let urlPath = `/vendors/me`;

        const response = await this.request({
            path: urlPath,
            method: 'PATCH',
            headers: headerParameters,
            query: queryParameters,
            body: UpdateVendorDtoToJSON(requestParameters['updateVendorDto']),
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     * تحديث بيانات التاجر
     */
    async vendorControllerUpdate(requestParameters: VendorControllerUpdateRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {
        await this.vendorControllerUpdateRaw(requestParameters, initOverrides);
    }

    /**
     * تحديث حالة التاجر
     */
    async vendorControllerUpdateStatusRaw(requestParameters: VendorControllerUpdateStatusRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {
        if (requestParameters['id'] == null) {
            throw new runtime.RequiredError(
                'id',
                'Required parameter "id" was null or undefined when calling vendorControllerUpdateStatus().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};


        let urlPath = `/vendors/{id}/status`;
        urlPath = urlPath.replace(`{${"id"}}`, encodeURIComponent(String(requestParameters['id'])));

        const response = await this.request({
            path: urlPath,
            method: 'PATCH',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     * تحديث حالة التاجر
     */
    async vendorControllerUpdateStatus(requestParameters: VendorControllerUpdateStatusRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {
        await this.vendorControllerUpdateStatusRaw(requestParameters, initOverrides);
    }

    /**
     * تحديث تاجر (للإدارة)
     */
    async vendorControllerUpdateVendorRaw(requestParameters: VendorControllerUpdateVendorRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {
        if (requestParameters['id'] == null) {
            throw new runtime.RequiredError(
                'id',
                'Required parameter "id" was null or undefined when calling vendorControllerUpdateVendor().'
            );
        }

        if (requestParameters['updateVendorDto'] == null) {
            throw new runtime.RequiredError(
                'updateVendorDto',
                'Required parameter "updateVendorDto" was null or undefined when calling vendorControllerUpdateVendor().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';


        let urlPath = `/vendors/{id}`;
        urlPath = urlPath.replace(`{${"id"}}`, encodeURIComponent(String(requestParameters['id'])));

        const response = await this.request({
            path: urlPath,
            method: 'PATCH',
            headers: headerParameters,
            query: queryParameters,
            body: UpdateVendorDtoToJSON(requestParameters['updateVendorDto']),
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     * تحديث تاجر (للإدارة)
     */
    async vendorControllerUpdateVendor(requestParameters: VendorControllerUpdateVendorRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {
        await this.vendorControllerUpdateVendorRaw(requestParameters, initOverrides);
    }

}
