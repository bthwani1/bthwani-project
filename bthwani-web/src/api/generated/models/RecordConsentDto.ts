/* tslint:disable */
/* eslint-disable */
/**
 * Bthwani API v2
 * NestJS API Documentation - نظام إدارة الطلبات والتجارة
 *
 * The version of the OpenAPI document: 2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface RecordConsentDto
 */
export interface RecordConsentDto {
    /**
     * نوع الموافقة
     * @type {string}
     * @memberof RecordConsentDto
     */
    consentType: RecordConsentDtoConsentTypeEnum;
    /**
     * إصدار المستند
     * @type {string}
     * @memberof RecordConsentDto
     */
    version: string;
    /**
     * هل تمت الموافقة
     * @type {boolean}
     * @memberof RecordConsentDto
     */
    accepted: boolean;
    /**
     * عنوان IP
     * @type {string}
     * @memberof RecordConsentDto
     */
    ipAddress?: string;
    /**
     * User Agent
     * @type {string}
     * @memberof RecordConsentDto
     */
    userAgent?: string;
}


/**
 * @export
 */
export const RecordConsentDtoConsentTypeEnum = {
    PrivacyPolicy: 'privacy_policy',
    TermsOfService: 'terms_of_service'
} as const;
export type RecordConsentDtoConsentTypeEnum = typeof RecordConsentDtoConsentTypeEnum[keyof typeof RecordConsentDtoConsentTypeEnum];


/**
 * Check if a given object implements the RecordConsentDto interface.
 */
export function instanceOfRecordConsentDto(value: object): value is RecordConsentDto {
    if (!('consentType' in value) || value['consentType'] === undefined) return false;
    if (!('version' in value) || value['version'] === undefined) return false;
    if (!('accepted' in value) || value['accepted'] === undefined) return false;
    return true;
}

export function RecordConsentDtoFromJSON(json: any): RecordConsentDto {
    return RecordConsentDtoFromJSONTyped(json, false);
}

export function RecordConsentDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): RecordConsentDto {
    if (json == null) {
        return json;
    }
    return {
        
        'consentType': json['consentType'],
        'version': json['version'],
        'accepted': json['accepted'],
        'ipAddress': json['ipAddress'] == null ? undefined : json['ipAddress'],
        'userAgent': json['userAgent'] == null ? undefined : json['userAgent'],
    };
}

export function RecordConsentDtoToJSON(json: any): RecordConsentDto {
    return RecordConsentDtoToJSONTyped(json, false);
}

export function RecordConsentDtoToJSONTyped(value?: RecordConsentDto | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'consentType': value['consentType'],
        'version': value['version'],
        'accepted': value['accepted'],
        'ipAddress': value['ipAddress'],
        'userAgent': value['userAgent'],
    };
}

