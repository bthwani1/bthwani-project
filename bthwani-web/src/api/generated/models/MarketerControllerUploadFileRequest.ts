/* tslint:disable */
/* eslint-disable */
/**
 * Bthwani API v2
 * NestJS API Documentation - نظام إدارة الطلبات والتجارة
 *
 * The version of the OpenAPI document: 2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface MarketerControllerUploadFileRequest
 */
export interface MarketerControllerUploadFileRequest {
    /**
     * 
     * @type {string}
     * @memberof MarketerControllerUploadFileRequest
     */
    fileUrl?: string;
    /**
     * 
     * @type {string}
     * @memberof MarketerControllerUploadFileRequest
     */
    type?: string;
    /**
     * 
     * @type {string}
     * @memberof MarketerControllerUploadFileRequest
     */
    relatedTo?: string;
}

/**
 * Check if a given object implements the MarketerControllerUploadFileRequest interface.
 */
export function instanceOfMarketerControllerUploadFileRequest(value: object): value is MarketerControllerUploadFileRequest {
    return true;
}

export function MarketerControllerUploadFileRequestFromJSON(json: any): MarketerControllerUploadFileRequest {
    return MarketerControllerUploadFileRequestFromJSONTyped(json, false);
}

export function MarketerControllerUploadFileRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): MarketerControllerUploadFileRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'fileUrl': json['fileUrl'] == null ? undefined : json['fileUrl'],
        'type': json['type'] == null ? undefined : json['type'],
        'relatedTo': json['relatedTo'] == null ? undefined : json['relatedTo'],
    };
}

export function MarketerControllerUploadFileRequestToJSON(json: any): MarketerControllerUploadFileRequest {
    return MarketerControllerUploadFileRequestToJSONTyped(json, false);
}

export function MarketerControllerUploadFileRequestToJSONTyped(value?: MarketerControllerUploadFileRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'fileUrl': value['fileUrl'],
        'type': value['type'],
        'relatedTo': value['relatedTo'],
    };
}

