/* tslint:disable */
/* eslint-disable */
/**
 * Bthwani API v2
 * NestJS API Documentation - نظام إدارة الطلبات والتجارة
 *
 * The version of the OpenAPI document: 2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface CreateDriverDto
 */
export interface CreateDriverDto {
    /**
     * الاسم الكامل
     * @type {string}
     * @memberof CreateDriverDto
     */
    fullName: string;
    /**
     * البريد الإلكتروني
     * @type {string}
     * @memberof CreateDriverDto
     */
    email: string;
    /**
     * كلمة المرور
     * @type {string}
     * @memberof CreateDriverDto
     */
    password: string;
    /**
     * رقم الهاتف
     * @type {string}
     * @memberof CreateDriverDto
     */
    phone: string;
    /**
     * الدور
     * @type {string}
     * @memberof CreateDriverDto
     */
    role: CreateDriverDtoRoleEnum;
    /**
     * نوع المركبة
     * @type {string}
     * @memberof CreateDriverDto
     */
    vehicleType: CreateDriverDtoVehicleTypeEnum;
    /**
     * فئة المركبة
     * @type {string}
     * @memberof CreateDriverDto
     */
    vehicleClass?: CreateDriverDtoVehicleClassEnum;
    /**
     * قوة المركبة
     * @type {number}
     * @memberof CreateDriverDto
     */
    vehiclePower?: number;
    /**
     * نوع السائق
     * @type {string}
     * @memberof CreateDriverDto
     */
    driverType?: CreateDriverDtoDriverTypeEnum;
    /**
     * سائقة أنثى
     * @type {boolean}
     * @memberof CreateDriverDto
     */
    isFemaleDriver?: boolean;
}


/**
 * @export
 */
export const CreateDriverDtoRoleEnum = {
    RiderDriver: 'rider_driver',
    LightDriver: 'light_driver',
    WomenDriver: 'women_driver'
} as const;
export type CreateDriverDtoRoleEnum = typeof CreateDriverDtoRoleEnum[keyof typeof CreateDriverDtoRoleEnum];

/**
 * @export
 */
export const CreateDriverDtoVehicleTypeEnum = {
    Motor: 'motor',
    Bike: 'bike',
    Car: 'car'
} as const;
export type CreateDriverDtoVehicleTypeEnum = typeof CreateDriverDtoVehicleTypeEnum[keyof typeof CreateDriverDtoVehicleTypeEnum];

/**
 * @export
 */
export const CreateDriverDtoVehicleClassEnum = {
    Light: 'light',
    Medium: 'medium',
    Heavy: 'heavy'
} as const;
export type CreateDriverDtoVehicleClassEnum = typeof CreateDriverDtoVehicleClassEnum[keyof typeof CreateDriverDtoVehicleClassEnum];

/**
 * @export
 */
export const CreateDriverDtoDriverTypeEnum = {
    Primary: 'primary',
    Joker: 'joker'
} as const;
export type CreateDriverDtoDriverTypeEnum = typeof CreateDriverDtoDriverTypeEnum[keyof typeof CreateDriverDtoDriverTypeEnum];


/**
 * Check if a given object implements the CreateDriverDto interface.
 */
export function instanceOfCreateDriverDto(value: object): value is CreateDriverDto {
    if (!('fullName' in value) || value['fullName'] === undefined) return false;
    if (!('email' in value) || value['email'] === undefined) return false;
    if (!('password' in value) || value['password'] === undefined) return false;
    if (!('phone' in value) || value['phone'] === undefined) return false;
    if (!('role' in value) || value['role'] === undefined) return false;
    if (!('vehicleType' in value) || value['vehicleType'] === undefined) return false;
    return true;
}

export function CreateDriverDtoFromJSON(json: any): CreateDriverDto {
    return CreateDriverDtoFromJSONTyped(json, false);
}

export function CreateDriverDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): CreateDriverDto {
    if (json == null) {
        return json;
    }
    return {
        
        'fullName': json['fullName'],
        'email': json['email'],
        'password': json['password'],
        'phone': json['phone'],
        'role': json['role'],
        'vehicleType': json['vehicleType'],
        'vehicleClass': json['vehicleClass'] == null ? undefined : json['vehicleClass'],
        'vehiclePower': json['vehiclePower'] == null ? undefined : json['vehiclePower'],
        'driverType': json['driverType'] == null ? undefined : json['driverType'],
        'isFemaleDriver': json['isFemaleDriver'] == null ? undefined : json['isFemaleDriver'],
    };
}

export function CreateDriverDtoToJSON(json: any): CreateDriverDto {
    return CreateDriverDtoToJSONTyped(json, false);
}

export function CreateDriverDtoToJSONTyped(value?: CreateDriverDto | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'fullName': value['fullName'],
        'email': value['email'],
        'password': value['password'],
        'phone': value['phone'],
        'role': value['role'],
        'vehicleType': value['vehicleType'],
        'vehicleClass': value['vehicleClass'],
        'vehiclePower': value['vehiclePower'],
        'driverType': value['driverType'],
        'isFemaleDriver': value['isFemaleDriver'],
    };
}

