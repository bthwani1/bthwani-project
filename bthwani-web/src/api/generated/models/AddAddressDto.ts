/* tslint:disable */
/* eslint-disable */
/**
 * Bthwani API v2
 * NestJS API Documentation - نظام إدارة الطلبات والتجارة
 *
 * The version of the OpenAPI document: 2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { LocationDto } from './LocationDto';
import {
    LocationDtoFromJSON,
    LocationDtoFromJSONTyped,
    LocationDtoToJSON,
    LocationDtoToJSONTyped,
} from './LocationDto';

/**
 * 
 * @export
 * @interface AddAddressDto
 */
export interface AddAddressDto {
    /**
     * تسمية العنوان (منزل، عمل، إلخ)
     * @type {string}
     * @memberof AddAddressDto
     */
    label: string;
    /**
     * المدينة
     * @type {string}
     * @memberof AddAddressDto
     */
    city: string;
    /**
     * الشارع
     * @type {string}
     * @memberof AddAddressDto
     */
    street: string;
    /**
     * الموقع الجغرافي
     * @type {LocationDto}
     * @memberof AddAddressDto
     */
    location?: LocationDto;
}

/**
 * Check if a given object implements the AddAddressDto interface.
 */
export function instanceOfAddAddressDto(value: object): value is AddAddressDto {
    if (!('label' in value) || value['label'] === undefined) return false;
    if (!('city' in value) || value['city'] === undefined) return false;
    if (!('street' in value) || value['street'] === undefined) return false;
    return true;
}

export function AddAddressDtoFromJSON(json: any): AddAddressDto {
    return AddAddressDtoFromJSONTyped(json, false);
}

export function AddAddressDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): AddAddressDto {
    if (json == null) {
        return json;
    }
    return {
        
        'label': json['label'],
        'city': json['city'],
        'street': json['street'],
        'location': json['location'] == null ? undefined : LocationDtoFromJSON(json['location']),
    };
}

export function AddAddressDtoToJSON(json: any): AddAddressDto {
    return AddAddressDtoToJSONTyped(json, false);
}

export function AddAddressDtoToJSONTyped(value?: AddAddressDto | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'label': value['label'],
        'city': value['city'],
        'street': value['street'],
        'location': LocationDtoToJSON(value['location']),
    };
}

