/* tslint:disable */
/* eslint-disable */
/**
 * Bthwani API v2
 * NestJS API Documentation - نظام إدارة الطلبات والتجارة
 *
 * The version of the OpenAPI document: 2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface UtilityControllerUpsertGasRequest
 */
export interface UtilityControllerUpsertGasRequest {
    /**
     * 
     * @type {number}
     * @memberof UtilityControllerUpsertGasRequest
     */
    price?: number;
    /**
     * 
     * @type {string}
     * @memberof UtilityControllerUpsertGasRequest
     */
    unit?: string;
    /**
     * 
     * @type {string}
     * @memberof UtilityControllerUpsertGasRequest
     */
    provider?: string;
}

/**
 * Check if a given object implements the UtilityControllerUpsertGasRequest interface.
 */
export function instanceOfUtilityControllerUpsertGasRequest(value: object): value is UtilityControllerUpsertGasRequest {
    return true;
}

export function UtilityControllerUpsertGasRequestFromJSON(json: any): UtilityControllerUpsertGasRequest {
    return UtilityControllerUpsertGasRequestFromJSONTyped(json, false);
}

export function UtilityControllerUpsertGasRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): UtilityControllerUpsertGasRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'price': json['price'] == null ? undefined : json['price'],
        'unit': json['unit'] == null ? undefined : json['unit'],
        'provider': json['provider'] == null ? undefined : json['provider'],
    };
}

export function UtilityControllerUpsertGasRequestToJSON(json: any): UtilityControllerUpsertGasRequest {
    return UtilityControllerUpsertGasRequestToJSONTyped(json, false);
}

export function UtilityControllerUpsertGasRequestToJSONTyped(value?: UtilityControllerUpsertGasRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'price': value['price'],
        'unit': value['unit'],
        'provider': value['provider'],
    };
}

