/* tslint:disable */
/* eslint-disable */
/**
 * Bthwani API v2
 * NestJS API Documentation - نظام إدارة الطلبات والتجارة
 *
 * The version of the OpenAPI document: 2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface CreateVendorDto
 */
export interface CreateVendorDto {
    /**
     * الاسم الكامل
     * @type {string}
     * @memberof CreateVendorDto
     */
    fullName: string;
    /**
     * رقم الهاتف
     * @type {string}
     * @memberof CreateVendorDto
     */
    phone: string;
    /**
     * البريد الإلكتروني
     * @type {string}
     * @memberof CreateVendorDto
     */
    email?: string;
    /**
     * كلمة المرور
     * @type {string}
     * @memberof CreateVendorDto
     */
    password: string;
    /**
     * معرف المتجر
     * @type {string}
     * @memberof CreateVendorDto
     */
    store: string;
    /**
     * معرف المسوق
     * @type {string}
     * @memberof CreateVendorDto
     */
    createdByMarketerUid?: string;
    /**
     * المصدر
     * @type {string}
     * @memberof CreateVendorDto
     */
    source?: CreateVendorDtoSourceEnum;
}


/**
 * @export
 */
export const CreateVendorDtoSourceEnum = {
    MarketerQuickOnboard: 'marketerQuickOnboard',
    Admin: 'admin',
    Other: 'other'
} as const;
export type CreateVendorDtoSourceEnum = typeof CreateVendorDtoSourceEnum[keyof typeof CreateVendorDtoSourceEnum];


/**
 * Check if a given object implements the CreateVendorDto interface.
 */
export function instanceOfCreateVendorDto(value: object): value is CreateVendorDto {
    if (!('fullName' in value) || value['fullName'] === undefined) return false;
    if (!('phone' in value) || value['phone'] === undefined) return false;
    if (!('password' in value) || value['password'] === undefined) return false;
    if (!('store' in value) || value['store'] === undefined) return false;
    return true;
}

export function CreateVendorDtoFromJSON(json: any): CreateVendorDto {
    return CreateVendorDtoFromJSONTyped(json, false);
}

export function CreateVendorDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): CreateVendorDto {
    if (json == null) {
        return json;
    }
    return {
        
        'fullName': json['fullName'],
        'phone': json['phone'],
        'email': json['email'] == null ? undefined : json['email'],
        'password': json['password'],
        'store': json['store'],
        'createdByMarketerUid': json['createdByMarketerUid'] == null ? undefined : json['createdByMarketerUid'],
        'source': json['source'] == null ? undefined : json['source'],
    };
}

export function CreateVendorDtoToJSON(json: any): CreateVendorDto {
    return CreateVendorDtoToJSONTyped(json, false);
}

export function CreateVendorDtoToJSONTyped(value?: CreateVendorDto | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'fullName': value['fullName'],
        'phone': value['phone'],
        'email': value['email'],
        'password': value['password'],
        'store': value['store'],
        'createdByMarketerUid': value['createdByMarketerUid'],
        'source': value['source'],
    };
}

