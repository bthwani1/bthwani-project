/* tslint:disable */
/* eslint-disable */
/**
 * Bthwani API v2
 * NestJS API Documentation - نظام إدارة الطلبات والتجارة
 *
 * The version of the OpenAPI document: 2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface UpdateUserDto
 */
export interface UpdateUserDto {
    /**
     * الاسم الكامل
     * @type {string}
     * @memberof UpdateUserDto
     */
    fullName?: string;
    /**
     * الاسم المستعار
     * @type {string}
     * @memberof UpdateUserDto
     */
    aliasName?: string;
    /**
     * رقم الهاتف
     * @type {string}
     * @memberof UpdateUserDto
     */
    phone?: string;
    /**
     * صورة الملف الشخصي
     * @type {string}
     * @memberof UpdateUserDto
     */
    profileImage?: string;
    /**
     * اللغة
     * @type {string}
     * @memberof UpdateUserDto
     */
    language?: UpdateUserDtoLanguageEnum;
    /**
     * الثيم
     * @type {string}
     * @memberof UpdateUserDto
     */
    theme?: UpdateUserDtoThemeEnum;
    /**
     * توكن الإشعارات
     * @type {string}
     * @memberof UpdateUserDto
     */
    pushToken?: string;
}


/**
 * @export
 */
export const UpdateUserDtoLanguageEnum = {
    Ar: 'ar',
    En: 'en'
} as const;
export type UpdateUserDtoLanguageEnum = typeof UpdateUserDtoLanguageEnum[keyof typeof UpdateUserDtoLanguageEnum];

/**
 * @export
 */
export const UpdateUserDtoThemeEnum = {
    Light: 'light',
    Dark: 'dark'
} as const;
export type UpdateUserDtoThemeEnum = typeof UpdateUserDtoThemeEnum[keyof typeof UpdateUserDtoThemeEnum];


/**
 * Check if a given object implements the UpdateUserDto interface.
 */
export function instanceOfUpdateUserDto(value: object): value is UpdateUserDto {
    return true;
}

export function UpdateUserDtoFromJSON(json: any): UpdateUserDto {
    return UpdateUserDtoFromJSONTyped(json, false);
}

export function UpdateUserDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): UpdateUserDto {
    if (json == null) {
        return json;
    }
    return {
        
        'fullName': json['fullName'] == null ? undefined : json['fullName'],
        'aliasName': json['aliasName'] == null ? undefined : json['aliasName'],
        'phone': json['phone'] == null ? undefined : json['phone'],
        'profileImage': json['profileImage'] == null ? undefined : json['profileImage'],
        'language': json['language'] == null ? undefined : json['language'],
        'theme': json['theme'] == null ? undefined : json['theme'],
        'pushToken': json['pushToken'] == null ? undefined : json['pushToken'],
    };
}

export function UpdateUserDtoToJSON(json: any): UpdateUserDto {
    return UpdateUserDtoToJSONTyped(json, false);
}

export function UpdateUserDtoToJSONTyped(value?: UpdateUserDto | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'fullName': value['fullName'],
        'aliasName': value['aliasName'],
        'phone': value['phone'],
        'profileImage': value['profileImage'],
        'language': value['language'],
        'theme': value['theme'],
        'pushToken': value['pushToken'],
    };
}

