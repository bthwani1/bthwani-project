/* tslint:disable */
/* eslint-disable */
/**
 * Bthwani API v2
 * NestJS API Documentation - نظام إدارة الطلبات والتجارة
 *
 * The version of the OpenAPI document: 2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { PointDto } from './PointDto';
import {
    PointDtoFromJSON,
    PointDtoFromJSONTyped,
    PointDtoToJSON,
    PointDtoToJSONTyped,
} from './PointDto';

/**
 * 
 * @export
 * @interface CalculateFeeDto
 */
export interface CalculateFeeDto {
    /**
     * نوع الغرض
     * @type {string}
     * @memberof CalculateFeeDto
     */
    category: CalculateFeeDtoCategoryEnum;
    /**
     * حجم الغرض
     * @type {string}
     * @memberof CalculateFeeDto
     */
    size: CalculateFeeDtoSizeEnum;
    /**
     * الوزن بالكيلوجرام
     * @type {number}
     * @memberof CalculateFeeDto
     */
    weightKg?: number;
    /**
     * نقطة الاستلام
     * @type {PointDto}
     * @memberof CalculateFeeDto
     */
    pickup: PointDto;
    /**
     * نقطة التسليم
     * @type {PointDto}
     * @memberof CalculateFeeDto
     */
    dropoff: PointDto;
    /**
     * البقشيش
     * @type {number}
     * @memberof CalculateFeeDto
     */
    tip?: number;
}


/**
 * @export
 */
export const CalculateFeeDtoCategoryEnum = {
    Docs: 'docs',
    Parcel: 'parcel',
    Groceries: 'groceries',
    Carton: 'carton',
    Food: 'food',
    Fragile: 'fragile',
    Other: 'other'
} as const;
export type CalculateFeeDtoCategoryEnum = typeof CalculateFeeDtoCategoryEnum[keyof typeof CalculateFeeDtoCategoryEnum];

/**
 * @export
 */
export const CalculateFeeDtoSizeEnum = {
    Small: 'small',
    Medium: 'medium',
    Large: 'large'
} as const;
export type CalculateFeeDtoSizeEnum = typeof CalculateFeeDtoSizeEnum[keyof typeof CalculateFeeDtoSizeEnum];


/**
 * Check if a given object implements the CalculateFeeDto interface.
 */
export function instanceOfCalculateFeeDto(value: object): value is CalculateFeeDto {
    if (!('category' in value) || value['category'] === undefined) return false;
    if (!('size' in value) || value['size'] === undefined) return false;
    if (!('pickup' in value) || value['pickup'] === undefined) return false;
    if (!('dropoff' in value) || value['dropoff'] === undefined) return false;
    return true;
}

export function CalculateFeeDtoFromJSON(json: any): CalculateFeeDto {
    return CalculateFeeDtoFromJSONTyped(json, false);
}

export function CalculateFeeDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): CalculateFeeDto {
    if (json == null) {
        return json;
    }
    return {
        
        'category': json['category'],
        'size': json['size'],
        'weightKg': json['weightKg'] == null ? undefined : json['weightKg'],
        'pickup': PointDtoFromJSON(json['pickup']),
        'dropoff': PointDtoFromJSON(json['dropoff']),
        'tip': json['tip'] == null ? undefined : json['tip'],
    };
}

export function CalculateFeeDtoToJSON(json: any): CalculateFeeDto {
    return CalculateFeeDtoToJSONTyped(json, false);
}

export function CalculateFeeDtoToJSONTyped(value?: CalculateFeeDto | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'category': value['category'],
        'size': value['size'],
        'weightKg': value['weightKg'],
        'pickup': PointDtoToJSON(value['pickup']),
        'dropoff': PointDtoToJSON(value['dropoff']),
        'tip': value['tip'],
    };
}

