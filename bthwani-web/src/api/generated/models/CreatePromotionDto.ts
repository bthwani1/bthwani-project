/* tslint:disable */
/* eslint-disable */
/**
 * Bthwani API v2
 * NestJS API Documentation - نظام إدارة الطلبات والتجارة
 *
 * The version of the OpenAPI document: 2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface CreatePromotionDto
 */
export interface CreatePromotionDto {
    /**
     * العنوان
     * @type {string}
     * @memberof CreatePromotionDto
     */
    title?: string;
    /**
     * الوصف
     * @type {string}
     * @memberof CreatePromotionDto
     */
    description?: string;
    /**
     * الصورة
     * @type {string}
     * @memberof CreatePromotionDto
     */
    image?: string;
    /**
     * الرابط
     * @type {string}
     * @memberof CreatePromotionDto
     */
    link?: string;
    /**
     * الهدف
     * @type {string}
     * @memberof CreatePromotionDto
     */
    target: CreatePromotionDtoTargetEnum;
    /**
     * القيمة
     * @type {number}
     * @memberof CreatePromotionDto
     */
    value?: number;
    /**
     * نوع القيمة
     * @type {string}
     * @memberof CreatePromotionDto
     */
    valueType?: CreatePromotionDtoValueTypeEnum;
    /**
     * معرف المنتج
     * @type {string}
     * @memberof CreatePromotionDto
     */
    product?: string;
    /**
     * معرف المتجر
     * @type {string}
     * @memberof CreatePromotionDto
     */
    store?: string;
    /**
     * معرف الفئة
     * @type {string}
     * @memberof CreatePromotionDto
     */
    category?: string;
    /**
     * المواضع
     * @type {Array<string>}
     * @memberof CreatePromotionDto
     */
    placements: Array<CreatePromotionDtoPlacementsEnum>;
    /**
     * المدن
     * @type {Array<string>}
     * @memberof CreatePromotionDto
     */
    cities?: Array<string>;
    /**
     * القنوات
     * @type {Array<string>}
     * @memberof CreatePromotionDto
     */
    channels?: Array<string>;
    /**
     * قاعدة التكديس
     * @type {string}
     * @memberof CreatePromotionDto
     */
    stacking?: CreatePromotionDtoStackingEnum;
    /**
     * الحد الأدنى للكمية
     * @type {number}
     * @memberof CreatePromotionDto
     */
    minQty?: number;
    /**
     * الحد الأدنى لقيمة الطلب
     * @type {number}
     * @memberof CreatePromotionDto
     */
    minOrderSubtotal?: number;
    /**
     * الحد الأقصى للخصم
     * @type {number}
     * @memberof CreatePromotionDto
     */
    maxDiscountAmount?: number;
    /**
     * الترتيب
     * @type {number}
     * @memberof CreatePromotionDto
     */
    order?: number;
    /**
     * تاريخ البداية
     * @type {Date}
     * @memberof CreatePromotionDto
     */
    startDate: Date;
    /**
     * تاريخ النهاية
     * @type {Date}
     * @memberof CreatePromotionDto
     */
    endDate: Date;
    /**
     * حالة النشاط
     * @type {boolean}
     * @memberof CreatePromotionDto
     */
    isActive: boolean;
}


/**
 * @export
 */
export const CreatePromotionDtoTargetEnum = {
    Product: 'product',
    Store: 'store',
    Category: 'category'
} as const;
export type CreatePromotionDtoTargetEnum = typeof CreatePromotionDtoTargetEnum[keyof typeof CreatePromotionDtoTargetEnum];

/**
 * @export
 */
export const CreatePromotionDtoValueTypeEnum = {
    Percentage: 'percentage',
    Fixed: 'fixed'
} as const;
export type CreatePromotionDtoValueTypeEnum = typeof CreatePromotionDtoValueTypeEnum[keyof typeof CreatePromotionDtoValueTypeEnum];

/**
 * @export
 */
export const CreatePromotionDtoPlacementsEnum = {
    HomeHero: 'home_hero',
    HomeStrip: 'home_strip',
    CategoryHeader: 'category_header',
    CategoryFeed: 'category_feed',
    StoreHeader: 'store_header',
    SearchBanner: 'search_banner',
    Cart: 'cart',
    Checkout: 'checkout'
} as const;
export type CreatePromotionDtoPlacementsEnum = typeof CreatePromotionDtoPlacementsEnum[keyof typeof CreatePromotionDtoPlacementsEnum];

/**
 * @export
 */
export const CreatePromotionDtoStackingEnum = {
    None: 'none',
    Best: 'best',
    StackSameTarget: 'stack_same_target'
} as const;
export type CreatePromotionDtoStackingEnum = typeof CreatePromotionDtoStackingEnum[keyof typeof CreatePromotionDtoStackingEnum];


/**
 * Check if a given object implements the CreatePromotionDto interface.
 */
export function instanceOfCreatePromotionDto(value: object): value is CreatePromotionDto {
    if (!('target' in value) || value['target'] === undefined) return false;
    if (!('placements' in value) || value['placements'] === undefined) return false;
    if (!('startDate' in value) || value['startDate'] === undefined) return false;
    if (!('endDate' in value) || value['endDate'] === undefined) return false;
    if (!('isActive' in value) || value['isActive'] === undefined) return false;
    return true;
}

export function CreatePromotionDtoFromJSON(json: any): CreatePromotionDto {
    return CreatePromotionDtoFromJSONTyped(json, false);
}

export function CreatePromotionDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): CreatePromotionDto {
    if (json == null) {
        return json;
    }
    return {
        
        'title': json['title'] == null ? undefined : json['title'],
        'description': json['description'] == null ? undefined : json['description'],
        'image': json['image'] == null ? undefined : json['image'],
        'link': json['link'] == null ? undefined : json['link'],
        'target': json['target'],
        'value': json['value'] == null ? undefined : json['value'],
        'valueType': json['valueType'] == null ? undefined : json['valueType'],
        'product': json['product'] == null ? undefined : json['product'],
        'store': json['store'] == null ? undefined : json['store'],
        'category': json['category'] == null ? undefined : json['category'],
        'placements': json['placements'],
        'cities': json['cities'] == null ? undefined : json['cities'],
        'channels': json['channels'] == null ? undefined : json['channels'],
        'stacking': json['stacking'] == null ? undefined : json['stacking'],
        'minQty': json['minQty'] == null ? undefined : json['minQty'],
        'minOrderSubtotal': json['minOrderSubtotal'] == null ? undefined : json['minOrderSubtotal'],
        'maxDiscountAmount': json['maxDiscountAmount'] == null ? undefined : json['maxDiscountAmount'],
        'order': json['order'] == null ? undefined : json['order'],
        'startDate': (new Date(json['startDate'])),
        'endDate': (new Date(json['endDate'])),
        'isActive': json['isActive'],
    };
}

export function CreatePromotionDtoToJSON(json: any): CreatePromotionDto {
    return CreatePromotionDtoToJSONTyped(json, false);
}

export function CreatePromotionDtoToJSONTyped(value?: CreatePromotionDto | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'title': value['title'],
        'description': value['description'],
        'image': value['image'],
        'link': value['link'],
        'target': value['target'],
        'value': value['value'],
        'valueType': value['valueType'],
        'product': value['product'],
        'store': value['store'],
        'category': value['category'],
        'placements': value['placements'],
        'cities': value['cities'],
        'channels': value['channels'],
        'stacking': value['stacking'],
        'minQty': value['minQty'],
        'minOrderSubtotal': value['minOrderSubtotal'],
        'maxDiscountAmount': value['maxDiscountAmount'],
        'order': value['order'],
        'startDate': value['startDate'].toISOString(),
        'endDate': value['endDate'].toISOString(),
        'isActive': value['isActive'],
    };
}

