/* tslint:disable */
/* eslint-disable */
/**
 * Bthwani API v2
 * NestJS API Documentation - نظام إدارة الطلبات والتجارة
 *
 * The version of the OpenAPI document: 2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface ConsentDto
 */
export interface ConsentDto {
    /**
     * نوع الموافقة
     * @type {string}
     * @memberof ConsentDto
     */
    consentType: ConsentDtoConsentTypeEnum;
    /**
     * حالة الموافقة (موافق/غير موافق)
     * @type {boolean}
     * @memberof ConsentDto
     */
    granted: boolean;
    /**
     * نسخة السياسة أو الشروط
     * @type {string}
     * @memberof ConsentDto
     */
    version: string;
    /**
     * ملاحظات إضافية
     * @type {string}
     * @memberof ConsentDto
     */
    notes?: string;
}


/**
 * @export
 */
export const ConsentDtoConsentTypeEnum = {
    PrivacyPolicy: 'privacy_policy',
    TermsOfService: 'terms_of_service',
    Marketing: 'marketing',
    DataProcessing: 'data_processing'
} as const;
export type ConsentDtoConsentTypeEnum = typeof ConsentDtoConsentTypeEnum[keyof typeof ConsentDtoConsentTypeEnum];


/**
 * Check if a given object implements the ConsentDto interface.
 */
export function instanceOfConsentDto(value: object): value is ConsentDto {
    if (!('consentType' in value) || value['consentType'] === undefined) return false;
    if (!('granted' in value) || value['granted'] === undefined) return false;
    if (!('version' in value) || value['version'] === undefined) return false;
    return true;
}

export function ConsentDtoFromJSON(json: any): ConsentDto {
    return ConsentDtoFromJSONTyped(json, false);
}

export function ConsentDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): ConsentDto {
    if (json == null) {
        return json;
    }
    return {
        
        'consentType': json['consentType'],
        'granted': json['granted'],
        'version': json['version'],
        'notes': json['notes'] == null ? undefined : json['notes'],
    };
}

export function ConsentDtoToJSON(json: any): ConsentDto {
    return ConsentDtoToJSONTyped(json, false);
}

export function ConsentDtoToJSONTyped(value?: ConsentDto | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'consentType': value['consentType'],
        'granted': value['granted'],
        'version': value['version'],
        'notes': value['notes'],
    };
}

