/* tslint:disable */
/* eslint-disable */
/**
 * Bthwani API v2
 * NestJS API Documentation - نظام إدارة الطلبات والتجارة
 *
 * The version of the OpenAPI document: 2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface CreateStoreSectionDto
 */
export interface CreateStoreSectionDto {
    /**
     * معرف المتجر
     * @type {string}
     * @memberof CreateStoreSectionDto
     */
    store: string;
    /**
     * الاسم
     * @type {string}
     * @memberof CreateStoreSectionDto
     */
    name: string;
    /**
     * الاسم بالعربية
     * @type {string}
     * @memberof CreateStoreSectionDto
     */
    nameAr?: string;
    /**
     * الوصف
     * @type {string}
     * @memberof CreateStoreSectionDto
     */
    description?: string;
    /**
     * الأيقونة
     * @type {string}
     * @memberof CreateStoreSectionDto
     */
    icon?: string;
    /**
     * نوع الاستخدام
     * @type {string}
     * @memberof CreateStoreSectionDto
     */
    usageType: CreateStoreSectionDtoUsageTypeEnum;
    /**
     * الترتيب
     * @type {number}
     * @memberof CreateStoreSectionDto
     */
    order: number;
}


/**
 * @export
 */
export const CreateStoreSectionDtoUsageTypeEnum = {
    Grocery: 'grocery',
    Restaurant: 'restaurant',
    Retail: 'retail'
} as const;
export type CreateStoreSectionDtoUsageTypeEnum = typeof CreateStoreSectionDtoUsageTypeEnum[keyof typeof CreateStoreSectionDtoUsageTypeEnum];


/**
 * Check if a given object implements the CreateStoreSectionDto interface.
 */
export function instanceOfCreateStoreSectionDto(value: object): value is CreateStoreSectionDto {
    if (!('store' in value) || value['store'] === undefined) return false;
    if (!('name' in value) || value['name'] === undefined) return false;
    if (!('usageType' in value) || value['usageType'] === undefined) return false;
    if (!('order' in value) || value['order'] === undefined) return false;
    return true;
}

export function CreateStoreSectionDtoFromJSON(json: any): CreateStoreSectionDto {
    return CreateStoreSectionDtoFromJSONTyped(json, false);
}

export function CreateStoreSectionDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): CreateStoreSectionDto {
    if (json == null) {
        return json;
    }
    return {
        
        'store': json['store'],
        'name': json['name'],
        'nameAr': json['nameAr'] == null ? undefined : json['nameAr'],
        'description': json['description'] == null ? undefined : json['description'],
        'icon': json['icon'] == null ? undefined : json['icon'],
        'usageType': json['usageType'],
        'order': json['order'],
    };
}

export function CreateStoreSectionDtoToJSON(json: any): CreateStoreSectionDto {
    return CreateStoreSectionDtoToJSONTyped(json, false);
}

export function CreateStoreSectionDtoToJSONTyped(value?: CreateStoreSectionDto | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'store': value['store'],
        'name': value['name'],
        'nameAr': value['nameAr'],
        'description': value['description'],
        'icon': value['icon'],
        'usageType': value['usageType'],
        'order': value['order'],
    };
}

