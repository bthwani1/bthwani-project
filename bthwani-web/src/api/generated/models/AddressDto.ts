/* tslint:disable */
/* eslint-disable */
/**
 * Bthwani API v2
 * NestJS API Documentation - نظام إدارة الطلبات والتجارة
 *
 * The version of the OpenAPI document: 2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface AddressDto
 */
export interface AddressDto {
    /**
     * 
     * @type {string}
     * @memberof AddressDto
     */
    label: string;
    /**
     * 
     * @type {string}
     * @memberof AddressDto
     */
    street: string;
    /**
     * 
     * @type {string}
     * @memberof AddressDto
     */
    city: string;
    /**
     * 
     * @type {object}
     * @memberof AddressDto
     */
    location: object;
}

/**
 * Check if a given object implements the AddressDto interface.
 */
export function instanceOfAddressDto(value: object): value is AddressDto {
    if (!('label' in value) || value['label'] === undefined) return false;
    if (!('street' in value) || value['street'] === undefined) return false;
    if (!('city' in value) || value['city'] === undefined) return false;
    if (!('location' in value) || value['location'] === undefined) return false;
    return true;
}

export function AddressDtoFromJSON(json: any): AddressDto {
    return AddressDtoFromJSONTyped(json, false);
}

export function AddressDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): AddressDto {
    if (json == null) {
        return json;
    }
    return {
        
        'label': json['label'],
        'street': json['street'],
        'city': json['city'],
        'location': json['location'],
    };
}

export function AddressDtoToJSON(json: any): AddressDto {
    return AddressDtoToJSONTyped(json, false);
}

export function AddressDtoToJSONTyped(value?: AddressDto | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'label': value['label'],
        'street': value['street'],
        'city': value['city'],
        'location': value['location'],
    };
}

