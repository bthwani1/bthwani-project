/* tslint:disable */
/* eslint-disable */
/**
 * Bthwani API v2
 * NestJS API Documentation - نظام إدارة الطلبات والتجارة
 *
 * The version of the OpenAPI document: 2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { JournalLineDto } from './JournalLineDto';
import {
    JournalLineDtoFromJSON,
    JournalLineDtoFromJSONTyped,
    JournalLineDtoToJSON,
    JournalLineDtoToJSONTyped,
} from './JournalLineDto';

/**
 * 
 * @export
 * @interface CreateJournalEntryDto
 */
export interface CreateJournalEntryDto {
    /**
     * تاريخ القيد
     * @type {string}
     * @memberof CreateJournalEntryDto
     */
    date: string;
    /**
     * وصف القيد
     * @type {string}
     * @memberof CreateJournalEntryDto
     */
    description: string;
    /**
     * سطور القيد
     * @type {Array<JournalLineDto>}
     * @memberof CreateJournalEntryDto
     */
    lines: Array<JournalLineDto>;
    /**
     * نوع القيد
     * @type {string}
     * @memberof CreateJournalEntryDto
     */
    type: CreateJournalEntryDtoTypeEnum;
    /**
     * المرجع الخارجي
     * @type {string}
     * @memberof CreateJournalEntryDto
     */
    reference?: string;
    /**
     * الكيان المرتبط
     * @type {string}
     * @memberof CreateJournalEntryDto
     */
    relatedEntity?: string;
    /**
     * نوع الكيان المرتبط
     * @type {string}
     * @memberof CreateJournalEntryDto
     */
    relatedEntityModel?: string;
    /**
     * ملاحظات إضافية
     * @type {string}
     * @memberof CreateJournalEntryDto
     */
    notes?: string;
}


/**
 * @export
 */
export const CreateJournalEntryDtoTypeEnum = {
    General: 'general',
    Sales: 'sales',
    Purchase: 'purchase',
    Payment: 'payment',
    Receipt: 'receipt',
    Adjustment: 'adjustment'
} as const;
export type CreateJournalEntryDtoTypeEnum = typeof CreateJournalEntryDtoTypeEnum[keyof typeof CreateJournalEntryDtoTypeEnum];


/**
 * Check if a given object implements the CreateJournalEntryDto interface.
 */
export function instanceOfCreateJournalEntryDto(value: object): value is CreateJournalEntryDto {
    if (!('date' in value) || value['date'] === undefined) return false;
    if (!('description' in value) || value['description'] === undefined) return false;
    if (!('lines' in value) || value['lines'] === undefined) return false;
    if (!('type' in value) || value['type'] === undefined) return false;
    return true;
}

export function CreateJournalEntryDtoFromJSON(json: any): CreateJournalEntryDto {
    return CreateJournalEntryDtoFromJSONTyped(json, false);
}

export function CreateJournalEntryDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): CreateJournalEntryDto {
    if (json == null) {
        return json;
    }
    return {
        
        'date': json['date'],
        'description': json['description'],
        'lines': ((json['lines'] as Array<any>).map(JournalLineDtoFromJSON)),
        'type': json['type'],
        'reference': json['reference'] == null ? undefined : json['reference'],
        'relatedEntity': json['relatedEntity'] == null ? undefined : json['relatedEntity'],
        'relatedEntityModel': json['relatedEntityModel'] == null ? undefined : json['relatedEntityModel'],
        'notes': json['notes'] == null ? undefined : json['notes'],
    };
}

export function CreateJournalEntryDtoToJSON(json: any): CreateJournalEntryDto {
    return CreateJournalEntryDtoToJSONTyped(json, false);
}

export function CreateJournalEntryDtoToJSONTyped(value?: CreateJournalEntryDto | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'date': value['date'],
        'description': value['description'],
        'lines': ((value['lines'] as Array<any>).map(JournalLineDtoToJSON)),
        'type': value['type'],
        'reference': value['reference'],
        'relatedEntity': value['relatedEntity'],
        'relatedEntityModel': value['relatedEntityModel'],
        'notes': value['notes'],
    };
}

