/* tslint:disable */
/* eslint-disable */
/**
 * Bthwani API v2
 * NestJS API Documentation - نظام إدارة الطلبات والتجارة
 *
 * The version of the OpenAPI document: 2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface CreateFinancialCouponDto
 */
export interface CreateFinancialCouponDto {
    /**
     * كود الكوبون
     * @type {string}
     * @memberof CreateFinancialCouponDto
     */
    code: string;
    /**
     * الوصف
     * @type {string}
     * @memberof CreateFinancialCouponDto
     */
    description: string;
    /**
     * نوع الخصم
     * @type {string}
     * @memberof CreateFinancialCouponDto
     */
    discountType: CreateFinancialCouponDtoDiscountTypeEnum;
    /**
     * قيمة الخصم
     * @type {number}
     * @memberof CreateFinancialCouponDto
     */
    discountValue: number;
    /**
     * الحد الأقصى للخصم
     * @type {number}
     * @memberof CreateFinancialCouponDto
     */
    maxDiscountAmount?: number;
    /**
     * الحد الأدنى لقيمة الطلب
     * @type {number}
     * @memberof CreateFinancialCouponDto
     */
    minOrderAmount?: number;
    /**
     * الحد الأقصى للاستخدام
     * @type {number}
     * @memberof CreateFinancialCouponDto
     */
    maxUsage: number;
    /**
     * الحد الأقصى للاستخدام لكل مستخدم
     * @type {number}
     * @memberof CreateFinancialCouponDto
     */
    maxUsagePerUser: number;
    /**
     * تاريخ البداية
     * @type {Date}
     * @memberof CreateFinancialCouponDto
     */
    startDate: Date;
    /**
     * تاريخ النهاية
     * @type {Date}
     * @memberof CreateFinancialCouponDto
     */
    endDate: Date;
    /**
     * حالة النشاط
     * @type {boolean}
     * @memberof CreateFinancialCouponDto
     */
    isActive: boolean;
}


/**
 * @export
 */
export const CreateFinancialCouponDtoDiscountTypeEnum = {
    Percentage: 'percentage',
    Fixed: 'fixed'
} as const;
export type CreateFinancialCouponDtoDiscountTypeEnum = typeof CreateFinancialCouponDtoDiscountTypeEnum[keyof typeof CreateFinancialCouponDtoDiscountTypeEnum];


/**
 * Check if a given object implements the CreateFinancialCouponDto interface.
 */
export function instanceOfCreateFinancialCouponDto(value: object): value is CreateFinancialCouponDto {
    if (!('code' in value) || value['code'] === undefined) return false;
    if (!('description' in value) || value['description'] === undefined) return false;
    if (!('discountType' in value) || value['discountType'] === undefined) return false;
    if (!('discountValue' in value) || value['discountValue'] === undefined) return false;
    if (!('maxUsage' in value) || value['maxUsage'] === undefined) return false;
    if (!('maxUsagePerUser' in value) || value['maxUsagePerUser'] === undefined) return false;
    if (!('startDate' in value) || value['startDate'] === undefined) return false;
    if (!('endDate' in value) || value['endDate'] === undefined) return false;
    if (!('isActive' in value) || value['isActive'] === undefined) return false;
    return true;
}

export function CreateFinancialCouponDtoFromJSON(json: any): CreateFinancialCouponDto {
    return CreateFinancialCouponDtoFromJSONTyped(json, false);
}

export function CreateFinancialCouponDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): CreateFinancialCouponDto {
    if (json == null) {
        return json;
    }
    return {
        
        'code': json['code'],
        'description': json['description'],
        'discountType': json['discountType'],
        'discountValue': json['discountValue'],
        'maxDiscountAmount': json['maxDiscountAmount'] == null ? undefined : json['maxDiscountAmount'],
        'minOrderAmount': json['minOrderAmount'] == null ? undefined : json['minOrderAmount'],
        'maxUsage': json['maxUsage'],
        'maxUsagePerUser': json['maxUsagePerUser'],
        'startDate': (new Date(json['startDate'])),
        'endDate': (new Date(json['endDate'])),
        'isActive': json['isActive'],
    };
}

export function CreateFinancialCouponDtoToJSON(json: any): CreateFinancialCouponDto {
    return CreateFinancialCouponDtoToJSONTyped(json, false);
}

export function CreateFinancialCouponDtoToJSONTyped(value?: CreateFinancialCouponDto | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'code': value['code'],
        'description': value['description'],
        'discountType': value['discountType'],
        'discountValue': value['discountValue'],
        'maxDiscountAmount': value['maxDiscountAmount'],
        'minOrderAmount': value['minOrderAmount'],
        'maxUsage': value['maxUsage'],
        'maxUsagePerUser': value['maxUsagePerUser'],
        'startDate': value['startDate'].toISOString(),
        'endDate': value['endDate'].toISOString(),
        'isActive': value['isActive'],
    };
}

