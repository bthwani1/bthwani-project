/* tslint:disable */
/* eslint-disable */
/**
 * Bthwani API v2
 * NestJS API Documentation - نظام إدارة الطلبات والتجارة
 *
 * The version of the OpenAPI document: 2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface CreateChartAccountDto
 */
export interface CreateChartAccountDto {
    /**
     * رمز الحساب
     * @type {string}
     * @memberof CreateChartAccountDto
     */
    accountCode: string;
    /**
     * اسم الحساب
     * @type {string}
     * @memberof CreateChartAccountDto
     */
    accountName: string;
    /**
     * الاسم بالعربية
     * @type {string}
     * @memberof CreateChartAccountDto
     */
    accountNameAr?: string;
    /**
     * نوع الحساب
     * @type {string}
     * @memberof CreateChartAccountDto
     */
    accountType: CreateChartAccountDtoAccountTypeEnum;
    /**
     * الطبيعة الطبيعية للحساب
     * @type {string}
     * @memberof CreateChartAccountDto
     */
    normalBalance: CreateChartAccountDtoNormalBalanceEnum;
    /**
     * الحساب الأب
     * @type {string}
     * @memberof CreateChartAccountDto
     */
    parent?: string;
    /**
     * وصف الحساب
     * @type {string}
     * @memberof CreateChartAccountDto
     */
    description?: string;
}


/**
 * @export
 */
export const CreateChartAccountDtoAccountTypeEnum = {
    Asset: 'asset',
    Liability: 'liability',
    Equity: 'equity',
    Revenue: 'revenue',
    Expense: 'expense'
} as const;
export type CreateChartAccountDtoAccountTypeEnum = typeof CreateChartAccountDtoAccountTypeEnum[keyof typeof CreateChartAccountDtoAccountTypeEnum];

/**
 * @export
 */
export const CreateChartAccountDtoNormalBalanceEnum = {
    Debit: 'debit',
    Credit: 'credit'
} as const;
export type CreateChartAccountDtoNormalBalanceEnum = typeof CreateChartAccountDtoNormalBalanceEnum[keyof typeof CreateChartAccountDtoNormalBalanceEnum];


/**
 * Check if a given object implements the CreateChartAccountDto interface.
 */
export function instanceOfCreateChartAccountDto(value: object): value is CreateChartAccountDto {
    if (!('accountCode' in value) || value['accountCode'] === undefined) return false;
    if (!('accountName' in value) || value['accountName'] === undefined) return false;
    if (!('accountType' in value) || value['accountType'] === undefined) return false;
    if (!('normalBalance' in value) || value['normalBalance'] === undefined) return false;
    return true;
}

export function CreateChartAccountDtoFromJSON(json: any): CreateChartAccountDto {
    return CreateChartAccountDtoFromJSONTyped(json, false);
}

export function CreateChartAccountDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): CreateChartAccountDto {
    if (json == null) {
        return json;
    }
    return {
        
        'accountCode': json['accountCode'],
        'accountName': json['accountName'],
        'accountNameAr': json['accountNameAr'] == null ? undefined : json['accountNameAr'],
        'accountType': json['accountType'],
        'normalBalance': json['normalBalance'],
        'parent': json['parent'] == null ? undefined : json['parent'],
        'description': json['description'] == null ? undefined : json['description'],
    };
}

export function CreateChartAccountDtoToJSON(json: any): CreateChartAccountDto {
    return CreateChartAccountDtoToJSONTyped(json, false);
}

export function CreateChartAccountDtoToJSONTyped(value?: CreateChartAccountDto | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'accountCode': value['accountCode'],
        'accountName': value['accountName'],
        'accountNameAr': value['accountNameAr'],
        'accountType': value['accountType'],
        'normalBalance': value['normalBalance'],
        'parent': value['parent'],
        'description': value['description'],
    };
}

