تمام — راجعت كل ما سبق في المحادثة (الهيكلة، الكود، القيود التقنية، وما اتفقنا عليه بخصوص axios وBox/Flex وZod والـTZ) وطلّعت لك نسخة منقّحة ومشدودة لقائمة التنفيذ الخاصة بتبويب التسويق داخل لوحة التحكم الرئيسية. أضفت تصحيحات دقيقة، بنود مفقودة (حرس التشغيل، مراقبة الإرسال، تعريفات الأحداث)، مع “معايير قبول” قصيرة لكل جزء علشان الإقفال يكون واضح.

✅ تبويب التسويق — قائمة تنفيذ منقّحة (Rev 2.1)
0) الأساس والتضبيط

 المنطقة الزمنية: توحيد Asia/Aden في كل التجميعات ($dateTrunc/كرونات/تقارير).

قبول: استعلام ROAS يوم واحد يطابق يوم التقويم المحلي.

 المعرفات: اعتماد store: ObjectId عبر جميع الجداول (تجنّب storeId النصّي).

قبول: أي API داخلي لا يقبل store من العميل إن كان في التوكن.

 RBAC: marketing:read, marketing:write, segments:*, messages:send.

قبول: مستخدم بلا صلاحية marketing:read يرى 403.

 Feature-Flag: تشغيل/إيقاف تبويب “التسويق” دون نشر.

قبول: قلب العلم يظهر/يخفي التبويب فورًا.

1) نماذج البيانات + الفهارس (Mongo/Mongoose)

 MarketingEvent { userId, type, props, utm{}, referrer, ts }

فهارس: {userId, ts}, {type, ts}, { 'utm.campaign': 1, ts: -1 }

قبول: إدراج 10k حدث يظل الاستعلام ≤ 200ms على فلاتر الزمن/الحملة.

 AdSpend { date, source, campaignId, adsetId?, impressions, clicks, conversions, cost }

فريد: {date, source, campaignId}

قبول: upsert للصف نفسه لا يصنع ازدواجية.

 RoasDaily { day, source, campaign, revenue, conversions, cost, roas, cpa, updatedAt }

فريد: {day, source, campaign}

 Segment { name, rules(json), dynamic, lastSyncedAt }

 SegmentMember { segmentId, userId, addedAt } (فريد مركّب)

 Message { channel, title, body, segmentId?, userIds?, scheduleAt?, status, createdBy, sentAt }

 MessageMetric { userId, messageId, channel, event('sent'|'delivered'|'opened'|'clicked'|'converted'), ts }

 MessagingPrefs { userId, pushOptIn, smsOptIn, inappOptIn, quietHours?, caps?{daily,weekly,monthly} }

 Orders (قائمة حالية): فهارس {'store._id':1, createdAt:1} و {'store._id':1, status:1, createdAt:-1}

 syncIndexes() + validate() عند الإقلاع.

قبول: جميع الموديلات ترفع فهارسها بنجاح بدون تحذيرات.

تصحيح مُهم: إزالة استخدام AnyZodObject، واستخدام ZodTypeAny.
CSV Import “unknown”: عرِّف الصف بـ Record<string,string> واحسب الحقول عبر helper get() (تم وصفه سابقًا).

2) طبقة الـAPI (Express + TS + Zod + axios-friendly)

 Middleware validate بـZod (مصَحَّح) + Error JSON موحّد {message, code?, errors?[]}.

 Helmet + CORS + Rate-Limit لمسارات الكتابة/الإرسال/تسجيل الدخول.

 منع IDOR: تجاهُل أي store/userId يأتي من العميل لو موجود بالـclaims.

2.1 تحليلات عامة

 POST /api/v1/marketing/events — استقبال الأحداث (Zod + queue عند الضغط).

 GET /api/v1/marketing/kpis?from&to — newUsers, firstOrders, spend, revenue.

 GET /api/v1/marketing/roas?from&to&groupBy=source|campaign

 GET /api/v1/marketing/funnels?from&to — install→register→first_order.

 GET /api/v1/marketing/retention?cohort=month|week&from&to

قبول: كل endpoints ترجع ≤ 1.5s على نطاق 30 يوم ببيانات Seed.

2.2 الإنفاق الإعلاني

 POST /api/v1/marketing/adspend/upload — رفع CSV (مؤقّتًا).

قبول: ملفّ Google/Meta/TikTok بعمود date/campaign/Spend يُستورد بدون أخطاء.

2.3 الشرائح (Segments)

 POST /api/v1/segments — إنشاء/تحديث قواعد (Zod).

 POST /api/v1/segments/:id/preview — عيّنة 20–50 مستخدمًا.

 POST /api/v1/segments/:id/sync — حفظ الأعضاء في SegmentMember.

 GET /api/v1/segments — لائحة الشرائح.

قبول: فرق <10% بين preview وsync على نفس القاعدة لعينة ثابتة.

2.4 الرسائل (مع Frequency-Cap)

 POST /api/v1/messages/send — إرسال/جدولة إلى segmentId أو userIds.

 GET /api/v1/messages/:id/metrics — sent/delivered/opened/clicked/converted.

 احترام Caps & QuietHours & Opt-In قبل الإرسال.

قبول: cap 1 Push/يوم/مستخدم يُمنع التكرار خلال 24h ويُسجّل metric.

3) الكرونات والتجميع (TZ: Asia/Aden)

 ROAS Daily: يدمج Orders (delivered/paid) + AdSpend (نفس اليوم/المصدر/الحملة) → upsert إلى RoasDaily.

 Segments Sync: تحديث الشرائح الديناميكية دوريًا (أو عند الطلب).

 Retention Matrix: تجميع مسبق اختياري (للأداء).

 Top/Lowest Products لكل متجر (اختياري): تجميع يومي لخدمة الواجهات بسرعة.

قبول: تنفيذ roasDaily لليوم السابق يُنتج نفس الأرقام عند إعادة التشغيل (Idempotent).

4) خدمات الإرسال (Messages)

 filterByCap(channel, window) للترشيح حسب القناة (push/sms/inapp).

 pushSender (Expo/FCM) أولًا؛ SMS لاحقًا؛ In-App بسيط.

 MessageMetric يُكتب عند sent/delivered/open/click.

 MessagingPrefs: opt-in/out + quietHours (TZ-aware).

قبول: إرسال تجريبي لمستخدمين مع/بدون Opt-in يحترم التفضيلات وساعات الهدوء.

5) واجهة الويب (React + TS + axios + Box/Flex، RTL)

مهم: الالتزام بـ axios فقط (لا fetch)، وبـ Box/Flex (لا Grid).

 عميل axiosWeb موحّد + interceptor للتوكن/الأخطاء.

 /marketing/overview

بطاقات KPI (7/30/مخصّص)، Mini-trend للـROAS، أفضل القنوات.

 /marketing/roas

اختيار التاريخ + GroupBy (source/campaign)، مخططات Cost/Revenue/ROAS.

 /marketing/segments

لائحة، إنشاء/تحرير قواعد، Preview & Sync.

 /marketing/messages

إنشاء رسالة (channel/title/body/segment/schedule)، تحذير Cap، تقدير Reach، جدول النتائج.

 /marketing/funnels

معدلات التحويل عبر الخطوات وبحسب المصدر.

 /marketing/retention

خريطة Cohort أسبوعية/شهرية.

 /marketing/adspend

رفع CSV + سجل الاستيراد/الأخطاء.

 /marketing/ops-guard (اختياري)

فحص السعة (السائقين/المتاجر) قبل إطلاق حملة كبيرة: OK/Warn/Block.

قبول: صفحات تُظهر Loading/Empty/Error بشكل متماسك؛ الرسم البياني يعرض بيانات حقيقية Seed.

6) قياس تطبيق الجوال (Expo / RN)

 Hook لإرسال MarketingEvent عبر axios (مع طابور Offline).

 تمرير UTM/referrer عند أول فتح/تسجيل.

 Endpoint لتسجيل Push Token للمستخدم (لاستخدام Push لاحقًا).

قبول: إطفاء الشبكة/تشغيلها لا يُفقد الأحداث (يُعاد إرسالها).

7) الأمان والحوكمة

 حواجز RBAC على مسارات التسويق.

 IDOR: تجاهل store/userId من العميل إذا موجود بالتوكن.

 Helmet/CORS/Rate-Limit فعّالة.

 AuditLog: إرسال رسالة، تغيير شريحة، تشغيل Cron يدويًا، تنزيل/تعديل مستند.

 PII: عدم تسجيل بيانات حسّاسة في اللوغ؛ إخفاء (Mask) ما يلزم.

قبول: محاولة كسر RBAC أو تمرير store يدويًا تفشل باختبارات أمنية.

8) الرصد والجودة

 Sentry + لوغ منظّم (API/كرونات).

 Health endpoints للكرونات (آخر تشغيل وعدد upserts).

 Seed scripts: بيانات أحداث/إنفاق/شرائح/رسائل.

 اختبارات:

ROAS يطابق حسابًا يدويًا لعينة.

Funnel/Retention منطقية مقابل أرقام Seed.

Caps تمنع >1 Push/24h.

Preview ≈ Sync لنفس القاعدة.

CSV importer يتعامل مع رؤوس مختلفة/فواصل أرقام.

قبول: كل اختبارات الدخان خضراء في CI.

9) الإطلاق والتشغيل

 Backfill آخر 60–90 يومًا من Events/AdSpend → بناء RoasDaily.

 تفعيل التبويب لبيتا داخلي.

 Runbook: إعادة فهارس، إعادة بناء ROAS لتاريخ محدد، تدوير المفاتيح، Kill-switch لإيقاف الإرسال.

 مراقبة: زمن تحميل < 1.5ث، زمن كرون، معدلات خطأ.

قبول: موافقة البيتا + مؤشرات داخل SLO.

10) تحسينات لاحقة (Phase-2)

 سحب تلقائي من Google/Meta/TikTok APIs.

 نماذج عزو (Time-Decay / U-Shaped) + Holdout/Incrementality.

 فلتر Partner/Store لعرض ROAS لكل شريك.

 تجارب A/B للرسائل وربط التحويل بالطلب.

ملخص التصحيحات المضافة مقارنة بالنسخة السابقة

✅ تثبيت axios فقط (لا fetch) في كل الطبقات.

✅ تصحيح Zod (ZodTypeAny بدل AnyZodObject).

✅ تصحيح مستورد CSV (typing + حقول بديلة) لتفادي أخطاء unknown.

✅ توحيد store: ObjectId ومنع IDOR.

✅ إضافة Kill-switch وOps-Guard قبل الحملات الكبيرة.

✅ معايير قبول لكل خطوة لتسهيل الإقفال والمراجعة.