0) التحضير والضوابط

 ضبط المنطقة الزمنية TZ=Asia/Aden على السيرفر والكرونات
تم عندما: نتائج يوم واحد تطابق يوم التقويم المحلي.

 توحيد المعرفات: استخدام store: ObjectId في جميع الموديلات والمسارات
تم عندما: لا يوجد حقل نصّي storeId في أي API/Model جديد.

 تفعيل Feature Flag لتبويب “الشراكات” في الواجهة
تم عندما: يمكن إخفاء/إظهار التبويب بدون نشر جديد.

 تحديد صلاحيات RBAC: partnerships:read, partnerships:write, partnerships:contracts, partnerships:messages
تم عندما: مستخدم بلا صلاحية يرى 403 للمسارات المحمية.

1) الموديلات والفهارس (Mongo/Mongoose)

 PartnerProfile: store(ObjectId, unique), lifecycle, tier, commissionPct, settlementCycle, bank{}, docs[], contract{start,end,status}, healthScore, timestamps
فهارس: store, lifecycle, tier, healthScore, contract.end

 PartnerContract: store, version, status, start, end, terms{commissionPct,notes}, files[], history[]
فهارس: {store,version}(unique), end, status

 PartnerPerformanceDaily: store, day, orders, gmv, cancels, avgPrepMin, complaints
فهارس: {store,day}(unique)

 تشغيل syncIndexes() بعد الاتصال + تفعيل validate() للحقول الحرجة
تم عندما: بناء الفهارس يمر بدون تحذيرات، وعمليات upsert لا تُنتج ازدواجية.

2) الوسطيات (Middleware)

 validate (Zod): استخدام ZodTypeAny، شكل أخطاء موحّد {message, errors[]}
تم عندما: أي POST/PATCH غير صالح يُعيد 400 بقائمة أخطاء واضحة.

 requireRole: يتحقق من الـscopes
تم عندما: الوصول لمسارات الشراكات ينجح/يفشل حسب الصلاحية.

 requirePartner (لاحقًا لبوابة الشريك): يعتمد على claims/JWT ويحقن req.partner.store
تم عندما: لا يمكن تمرير store يدويًا (منع IDOR).

3) مسارات الـAPI (Express + TS + axios-friendly)

 GET /api/v1/partners

استعلامات: q, lifecycle, tier, contractStatus, page, limit<=200

ترتيب افتراضي: updatedAt: -1
تم عندما: يعيد القائمة مع الترقيم والحساب الكلي.

 POST /api/v1/partners/upsert

Zod: { store(24)، lifecycle?, tier?, commissionPct?, settlementCycle? }
تم عندما: ينشئ أو يحدّث البروفايل ويُرجع الوثيقة.

 GET /api/v1/partners/contracts/expiring?days=30
تم عندما: يعرض عقودًا بحالة signed|active تنتهي خلال النافذة.

 GET /api/v1/partners/:store/performance?from&to
تم عندما: يُرجع سلسلة الأداء اليومي مرتبة زمنيًا.

 (اختياري) GET /api/v1/partners/contracts/export/csv
تم عندما: ينزّل ملف CSV صحيح الترميز والرؤوس.

حماية عامة: Helmet + CORS + Rate-Limit لمسارات الكتابة
تم عندما: تجاوز الحد يُرجع 429، والـCORS مضبوط.

4) كرونات وتجميعات

 buildPartnerDaily(day): يبني PartnerPerformanceDaily من أوامر اليوم (delivered/paid، إلغاءات، تحضير، شكاوى)
تم عندما: upsert لكل متجر/يوم بدون ازدواجية (unique index).

 جدولة يومية 01:00 (TZ: Asia/Aden)
تم عندما: تشغيل تلقائي مُسجّل مع عدد الوثائق المحدثة.

5) الواجهة (React + TS + axios + Box/Flex، RTL)

مهم: الاعتماد على axios فقط، واستخدام Box/Flex (بدون Grid).

 عميل axiosWeb موحّد + interceptor للتوكن/الأخطاء
تم عندما: كل النداءات تمر من axiosWeb فقط.

 صفحة قائمة الشراكات /partners

مرشّحات: بحث، lifecycle، tier، contractStatus

جدول أعمدة: store، lifecycle، tier، commission%، health، contractEnd

ترقيم صفحات، حالات: Loading/Empty/Error
تم عندما: تغيير المرشّحات يُعيد التحميل ويظهر نتائج صحيحة.

 ودجت العقود المقتربة من الانتهاء أعلى القائمة
تم عندما: يظهر عدد وقائمة العقود ضمن نافذة الأيام.

 صفحة تفاصيل الشريك /partners/:store

بطاقة نظرة عامة (حالة/فئة/عمولة)

ملخّص آخر 30 يوم (طلبات/GMV)

جدول الأداء اليومي (day, orders, gmv, cancels, avgPrep)

زر إجراءات سريعة: تغيير lifecycle/tier/commissionPct (يستدعي upsert)
تم عندما: تعديل قيمة ينعكس فورًا بالواجهة وبالـAPI.

6) الملفات والمستندات (Contracts & Docs)

 ربط ملفات العقد (URL للتخزين) ضمن PartnerContract.files[]

 إدارة حالات: draft/signed/active/expired/terminated

 تاريخ/سجل تعديلات history[] (من/متى/فرق diff)

 (اختياري) رفع مباشر عبر Presigned URL (Bunny/S3)
تم عندما: يمكن إرفاق/تحديث ملف، ويظهر شريط تحذير عند اقتراب الانتهاء.

7) الأمان والحوكمة

 منع IDOR: تجاهل store القادم من العميل حيث يمكن استخلاصه من التوكن
تم عندما: محاولة تغيير store يدويًا تُرفض.

 Audit Log لتغييرات حسّاسة: حالة العقد، تعديل العمولة/الفئة، تنزيل مستندات
تم عندما: كل عملية حساسة تُسجّل بـ(من/متى/ماذا).

 إخفاء بيانات البنك في الواجهة (Mask)
تم عندما: لا تظهر IBAN كاملة في أي جدول/لوج.

8) الرصد وضمان الجودة

 Sentry + لوغ منظّم للـAPI والكرونات
تم عندما: الأخطاء تُجمع وتظهر مع سياق الطلب.

 مسار Health للكرون: آخر تشغيل/عدد تحديثات/مدة
تم عندما: يمكن التأكد سريعًا من حالة التجميع.

 سكريبت Seed: متاجر متنوّعة، عقود بحالات مختلفة، أداء أيام متعددة
تم عندما: تشغيل الـSeed يجعل الواجهة تُظهر بيانات واقعية.

 اختبارات قبول:

 GET /partners ≤ 1s عند 10k بروفايل مع فهارس

 contracts/expiring يعرض نتائج ضمن النافذة بدقة

 upsert لا يصنع duplication (unique مفعل)

 تعديل عمولة/فئة ينعكس فورًا

 RTL وحالات: تحميل/لا بيانات/خطأ متّسقة

9) الإطلاق والتشغيل

 Backfill لأداء آخر 60–90 يومًا (PartnerPerformanceDaily)
تم عندما: تظهر سلسلة زمنية متّصلة في صفحة التفاصيل.

 تفعيل تبويب الشراكات (بيتا داخلي)
تم عندما: فرق الحسابات/المبيعات يوقّعون على صحة البيانات.

 Runbook: إعادة فهارس، إعادة بناء يوم محدد، تدوير مفاتيح، تعطيل التبويب/الكرون
تم عندما: وثيقة تشغيل جاهزة ومُجرّبة.

10) تحسينات لاحقة (Phase-2)

 Partner Tickets: تذاكر دعم لكل متجر (open/in_review/resolved/closed) + سلسلة رسائل

 Partner Promotions: CRUD بسيط للحملات المشتركة وربطها بتحليلات التسويق

 Partner Payouts: دورات سداد، Net = GMV − Commission − Fees − Refunds، Workflow: pending→approved→paid، تصدير CSV/PDF

 Health Score متقدم: أوزان قابلة للضبط، وتنبيهات حسب tier

 بوابة الشريك /partner-portal/*: صفحات Overview/Performance/Contracts/Promotions/Payouts/Tickets مع requirePartner

ملفات مقترحة للتعديل (دليل سريع)

Backend

models/PartnerProfile.ts, models/PartnerContract.ts, models/PartnerPerformanceDaily.ts

middleware/{validate.ts, rbac.ts, partner.ts}

routes/partners.ts (+ routes/partners.export.ts اختياري)

crons/partners/dailyPerformance.ts

app.ts (تسجيل الراوتر/الكرون)

Frontend

src/utils/api/axiosWeb.ts

src/pages/partners/PartnersList.tsx

src/pages/partners/ContractsWidget.tsx

src/pages/partners/PartnerDetails.tsx

(تسجيل المسارات في الـRouter الرئيسي)