name: 🧪 Tests & Coverage

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    name: 🚀 Run Tests
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x, 20.x]

    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4

    - name: 📦 Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'

    - name: 📲 Install dependencies
      run: npm ci

    - name: 🔍 Type checking
      run: npm run typecheck

    - name: 🧹 Linting
      run: npm run lint

    - name: 🧪 Run tests
      run: npm test -- --coverage --watchAll=false

    - name: 📊 Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage/lcov.info
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false

    - name: 📈 Coverage Comment
      uses: romeovs/lcov-reporter-action@v0.3.1
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        lcov-file: ./coverage/lcov.info
        delete-old-comments: true
      if: github.event_name == 'pull_request'

  test-e2e:
    name: 🎭 E2E Tests
    runs-on: ubuntu-latest
    needs: test

    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4

    - name: 📦 Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18.x'
        cache: 'npm'

    - name: 📲 Install dependencies
      run: npm ci

    # E2E tests placeholder
    - name: 🎭 Run E2E tests (placeholder)
      run: echo "E2E tests will be implemented here"

  security:
    name: 🔒 Security Audit
    runs-on: ubuntu-latest

    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4

    - name: 📦 Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18.x'
        cache: 'npm'

    - name: 📲 Install dependencies
      run: npm ci

    - name: 🔍 Security audit
      run: npm audit --audit-level moderate

    - name: 🔒 License check
      run: npx license-checker --summary

  performance:
    name: ⚡ Performance Tests
    runs-on: ubuntu-latest
    needs: test

    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4

    - name: 📦 Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18.x'
        cache: 'npm'

    - name: 📲 Install dependencies
      run: npm ci

    - name: ⚡ Run performance tests
      run: npm test -- --testPathPattern="performance"

  notify:
    name: 📢 Notifications
    runs-on: ubuntu-latest
    needs: [test, security, performance]
    if: always()

    steps:
    - name: 📢 Notify on success
      if: needs.test.result == 'success'
      run: echo "✅ All tests passed!"

    - name: 📢 Notify on failure  
      if: needs.test.result == 'failure'
      run: echo "❌ Tests failed!"
