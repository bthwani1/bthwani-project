# BTW-OBS-004: Observability Stack
# Prometheus + Grafana + OpenTelemetry Collector + Alertmanager

version: '3.8'

services:
  # Prometheus - Metrics storage and querying
  prometheus:
    image: prom/prometheus:latest
    container_name: bthwani-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./backend-nest/ops/prometheus.yml:/etc/prometheus/prometheus.yml
      - ./backend-nest/ops/alerts:/etc/prometheus/alerts
      - prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
      - '--web.enable-lifecycle'
    networks:
      - observability
    restart: unless-stopped

  # Grafana - Metrics visualization
  grafana:
    image: grafana/grafana:latest
    container_name: bthwani-grafana
    ports:
      - "3001:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_INSTALL_PLUGINS=grafana-clock-panel,grafana-simple-json-datasource
    volumes:
      - grafana-data:/var/lib/grafana
      - ./backend-nest/ops/grafana-dashboard.json:/etc/grafana/provisioning/dashboards/bthwani.json
    networks:
      - observability
    depends_on:
      - prometheus
    restart: unless-stopped

  # OpenTelemetry Collector - Traces and metrics collection
  otel-collector:
    image: otel/opentelemetry-collector-contrib:latest
    container_name: bthwani-otel-collector
    ports:
      - "4317:4317"  # OTLP gRPC
      - "4318:4318"  # OTLP HTTP
      - "9464:9464"  # Prometheus exporter
      - "8888:8888"  # Metrics endpoint
    volumes:
      - ./backend-nest/ops/otel-collector-config.yml:/etc/otel-collector-config.yml
    command: ["--config=/etc/otel-collector-config.yml"]
    networks:
      - observability
    restart: unless-stopped

  # Alertmanager - Alert routing and grouping
  alertmanager:
    image: prom/alertmanager:latest
    container_name: bthwani-alertmanager
    ports:
      - "9093:9093"
    volumes:
      - ./backend-nest/ops/alertmanager.yml:/etc/alertmanager/alertmanager.yml
      - alertmanager-data:/alertmanager
    command:
      - '--config.file=/etc/alertmanager/alertmanager.yml'
      - '--storage.path=/alertmanager'
    networks:
      - observability
    restart: unless-stopped

  # Node Exporter - System metrics
  node-exporter:
    image: prom/node-exporter:latest
    container_name: bthwani-node-exporter
    ports:
      - "9100:9100"
    command:
      - '--path.rootfs=/host'
    volumes:
      - /:/host:ro,rslave
    networks:
      - observability
    restart: unless-stopped

  # MongoDB Exporter - MongoDB metrics
  mongodb-exporter:
    image: percona/mongodb_exporter:latest
    container_name: bthwani-mongodb-exporter
    ports:
      - "9216:9216"
    environment:
      - MONGODB_URI=mongodb://admin:password@mongodb:27017
    networks:
      - observability
    restart: unless-stopped

  # Redis Exporter - Redis metrics
  redis-exporter:
    image: oliver006/redis_exporter:latest
    container_name: bthwani-redis-exporter
    ports:
      - "9121:9121"
    environment:
      - REDIS_ADDR=redis:6379
    networks:
      - observability
    restart: unless-stopped

  # Jaeger - Distributed tracing UI
  jaeger:
    image: jaegertracing/all-in-one:latest
    container_name: bthwani-jaeger
    ports:
      - "5775:5775/udp"
      - "6831:6831/udp"
      - "6832:6832/udp"
      - "5778:5778"
      - "16686:16686"  # UI
      - "14268:14268"
      - "14250:14250"
      - "9411:9411"
    environment:
      - COLLECTOR_OTLP_ENABLED=true
    networks:
      - observability
    restart: unless-stopped

volumes:
  prometheus-data:
  grafana-data:
  alertmanager-data:

networks:
  observability:
    driver: bridge

