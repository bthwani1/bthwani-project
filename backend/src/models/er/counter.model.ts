// models/er/counter.model.ts
import { Schema, model } from 'mongoose';

const CounterSchema = new Schema({
  key:  { type: String, required: true, unique: true }, // Ù…Ø«Ù„Ø§: JV-2025
  year: { type: Number, required: true },
  seq:  { type: Number, required: true, default: 0 },
}, { timestamps: true });

export const Counter = model('ERCounter', CounterSchema);

// ÙŠØ¹ÙŠØ¯ Ø§Ù„Ø±Ù‚Ù… Ø§Ù„ØªØ§Ù„ÙŠ Ù…Ø«Ù„: JV-2025-000001
export async function nextVoucherNo() {
  const yyyy = new Date().getFullYear();
  const key  = `JV-${yyyy}`;

  const doc = await Counter.findOneAndUpdate(
    { key },
    { $inc: { seq: 1 }, $setOnInsert: { year: yyyy } },  // ðŸ‘ˆ Ù…Ù…Ù†ÙˆØ¹ Ù„Ù…Ø³ seq Ù‡Ù†Ø§
    { new: true, upsert: true /*, setDefaultsOnInsert: false*/ }
  );

  const seqStr = String(doc!.seq).padStart(6, '0');
  return `${key}-${seqStr}`;
}

// Ù‚Ø±Ø§Ø¡Ø© Ø±Ù‚Ù… Ø§Ù„Ù‚ÙŠØ¯ Ø§Ù„Ù‚Ø§Ø¯Ù… Ø¨Ø¯ÙˆÙ† Ø²ÙŠØ§Ø¯Ø©
export async function peekNextVoucherNo() {
  const yyyy = new Date().getFullYear();
  const key  = `JV-${yyyy}`;
  const doc  = await Counter.findOne({ key });
  const next = (doc?.seq ?? 0) + 1;
  return `${key}-${String(next).padStart(6,'0')}`;
}
