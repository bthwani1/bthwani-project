{
  "info": {
    "name": "Bthwani API Collection",
    "description": "Complete API collection for Bthwani platform covering Authentication, Orders, Wallet, Vendors, Drivers, and Accounting",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "version": "1.0.0"
  },
  "auth": {
    "type": "bearer",
    "bearer": [
      {
        "key": "token",
        "value": "{{accessToken}}",
        "type": "string"
      }
    ]
  },
  "variable": [
    {
      "key": "baseUrl",
      "value": "http://localhost:3000",
      "type": "string"
    },
    {
      "key": "accessToken",
      "value": "",
      "type": "string"
    },
    {
      "key": "refreshToken",
      "value": "",
      "type": "string"
    },
    {
      "key": "userId",
      "value": "",
      "type": "string"
    }
  ],
  "item": [
    {
      "name": "Authentication",
      "item": [
        {
          "name": "Login",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"user@example.com\",\n  \"password\": \"password123\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/v1/auth/login",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "v1",
                "auth",
                "login"
              ]
            },
            "description": "User login endpoint"
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    const response = pm.response.json();",
                  "    pm.collectionVariables.set('accessToken', response.accessToken);",
                  "    pm.collectionVariables.set('refreshToken', response.refreshToken);",
                  "    pm.collectionVariables.set('userId', response.user.id);",
                  "    console.log('Login successful, tokens saved');",
                  "}"
                ]
              }
            }
          ]
        },
        {
          "name": "Register",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"fullName\": \"John Doe\",\n  \"email\": \"john@example.com\",\n  \"phone\": \"+967123456789\",\n  \"password\": \"password123\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/v1/auth/register",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "v1",
                "auth",
                "register"
              ]
            },
            "description": "User registration endpoint"
          }
        },
        {
          "name": "Refresh Token",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"refreshToken\": \"{{refreshToken}}\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/v1/auth/refresh",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "v1",
                "auth",
                "refresh"
              ]
            },
            "description": "Refresh access token using refresh token"
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    const response = pm.response.json();",
                  "    pm.collectionVariables.set('accessToken', response.accessToken);",
                  "    pm.collectionVariables.set('refreshToken', response.refreshToken);",
                  "    console.log('Token refreshed successfully');",
                  "}"
                ]
              }
            }
          ]
        },
        {
          "name": "Logout",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{accessToken}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"refreshToken\": \"{{refreshToken}}\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/v1/auth/logout",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "v1",
                "auth",
                "logout"
              ]
            },
            "description": "Logout and blacklist tokens"
          }
        }
      ],
      "description": "Authentication endpoints for login, register, token refresh, and logout"
    },
    {
      "name": "Orders",
      "item": [
        {
          "name": "Create Order",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{accessToken}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"items\": [\n    {\n      \"productId\": \"507f1f77bcf86cd799439011\",\n      \"productType\": \"deliveryProduct\",\n      \"store\": \"507f1f77bcf86cd799439012\",\n      \"quantity\": 2,\n      \"unitPrice\": 1500\n    }\n  ],\n  \"address\": {\n    \"label\": \"Home\",\n    \"street\": \"Main Street\",\n    \"city\": \"Sana'a\",\n    \"location\": {\n      \"lat\": 15.3694,\n      \"lng\": 44.1910\n    }\n  },\n  \"deliveryMode\": \"split\",\n  \"paymentMethod\": \"wallet\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/v1/delivery/order",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "v1",
                "delivery",
                "order"
              ]
            },
            "description": "Create a new delivery order"
          }
        },
        {
          "name": "Get User Orders",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{accessToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/v1/delivery/order?user={{userId}}&page=1&limit=10",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "v1",
                "delivery",
                "order"
              ],
              "query": [
                {
                  "key": "user",
                  "value": "{{userId}}"
                },
                {
                  "key": "page",
                  "value": "1"
                },
                {
                  "key": "limit",
                  "value": "10"
                }
              ]
            },
            "description": "Get orders for current user with pagination"
          }
        },
        {
          "name": "Get Order Details",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{accessToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/v1/delivery/order/507f1f77bcf86cd799439011",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "v1",
                "delivery",
                "order",
                "507f1f77bcf86cd799439011"
              ]
            },
            "description": "Get detailed information about a specific order"
          }
        },
        {
          "name": "Update Order Status",
          "request": {
            "method": "PATCH",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{accessToken}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"status\": \"preparing\",\n  \"notes\": \"Order is being prepared\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/v1/delivery/order/507f1f77bcf86cd799439011/status",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "v1",
                "delivery",
                "order",
                "507f1f77bcf86cd799439011",
                "status"
              ]
            },
            "description": "Update order status (for admin/store use)"
          }
        }
      ],
      "description": "Order management endpoints for creating, viewing, and updating orders"
    },
    {
      "name": "Wallet",
      "item": [
        {
          "name": "Get Wallet Balance",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{accessToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/v1/wallet/balance",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "v1",
                "wallet",
                "balance"
              ]
            },
            "description": "Get current wallet balance and transaction history"
          }
        },
        {
          "name": "Top Up Wallet",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{accessToken}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"amount\": 10000,\n  \"method\": \"card\",\n  \"paymentDetails\": {\n    \"cardToken\": \"tok_visa\"\n  }\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/v1/wallet/topup",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "v1",
                "wallet",
                "topup"
              ]
            },
            "description": "Add money to wallet using various payment methods"
          }
        },
        {
          "name": "Request Withdrawal",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{accessToken}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"amount\": 5000,\n  \"method\": \"bank_transfer\",\n  \"bankDetails\": {\n    \"accountNumber\": \"1234567890\",\n    \"bankName\": \"Bank of Yemen\"\n  }\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/v1/wallet/withdrawal",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "v1",
                "wallet",
                "withdrawal"
              ]
            },
            "description": "Request money withdrawal from wallet"
          }
        }
      ],
      "description": "Wallet management endpoints for balance, top-up, and withdrawal"
    },
    {
      "name": "Vendors & Stores",
      "item": [
        {
          "name": "Search Stores",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{accessToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/v1/delivery/stores/search?q=restaurant&page=1&limit=10&lat=15.3694&lng=44.1910",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "v1",
                "delivery",
                "stores",
                "search"
              ],
              "query": [
                {
                  "key": "q",
                  "value": "restaurant"
                },
                {
                  "key": "page",
                  "value": "1"
                },
                {
                  "key": "limit",
                  "value": "10"
                },
                {
                  "key": "lat",
                  "value": "15.3694"
                },
                {
                  "key": "lng",
                  "value": "44.1910"
                }
              ]
            },
            "description": "Search for stores with text query and location-based results"
          }
        },
        {
          "name": "Get Store Details",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{accessToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/v1/delivery/stores/507f1f77bcf86cd799439012",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "v1",
                "delivery",
                "stores",
                "507f1f77bcf86cd799439012"
              ]
            },
            "description": "Get detailed information about a specific store"
          }
        },
        {
          "name": "Get Store Products",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{accessToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/v1/delivery/stores/507f1f77bcf86cd799439012/products?page=1&limit=20",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "v1",
                "delivery",
                "stores",
                "507f1f77bcf86cd799439012",
                "products"
              ],
              "query": [
                {
                  "key": "page",
                  "value": "1"
                },
                {
                  "key": "limit",
                  "value": "20"
                }
              ]
            },
            "description": "Get products available in a specific store"
          }
        }
      ],
      "description": "Store and vendor management endpoints"
    },
    {
      "name": "Drivers",
      "item": [
        {
          "name": "Get Available Drivers",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{accessToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/v1/admin/drivers?status=available&page=1&limit=10",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "v1",
                "admin",
                "drivers"
              ],
              "query": [
                {
                  "key": "status",
                  "value": "available"
                },
                {
                  "key": "page",
                  "value": "1"
                },
                {
                  "key": "limit",
                  "value": "10"
                }
              ]
            },
            "description": "Get list of available drivers for order assignment"
          }
        },
        {
          "name": "Assign Driver to Order",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{accessToken}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"driverId\": \"507f1f77bcf86cd799439013\",\n  \"orderId\": \"507f1f77bcf86cd799439011\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/v1/admin/drivers/assign",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "v1",
                "admin",
                "drivers",
                "assign"
              ]
            },
            "description": "Assign a driver to an order (admin only)"
          }
        },
        {
          "name": "Get Driver Performance",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{accessToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/v1/admin/drivers/507f1f77bcf86cd799439013/performance",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "v1",
                "admin",
                "drivers",
                "507f1f77bcf86cd799439013",
                "performance"
              ]
            },
            "description": "Get driver performance metrics and statistics"
          }
        }
      ],
      "description": "Driver management and assignment endpoints"
    },
    {
      "name": "Accounting",
      "item": [
        {
          "name": "Get Chart of Accounts",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{accessToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/v1/er/chart-accounts?page=1&limit=50",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "v1",
                "er",
                "chart-accounts"
              ],
              "query": [
                {
                  "key": "page",
                  "value": "1"
                },
                {
                  "key": "limit",
                  "value": "50"
                }
              ]
            },
            "description": "Get chart of accounts for accounting system"
          }
        },
        {
          "name": "Create Journal Entry",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{accessToken}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"voucherNo\": \"JV-2024-001\",\n  \"date\": \"2024-01-15\",\n  \"description\": \"Sales revenue from order #123\",\n  \"reference\": \"Order #123\",\n  \"lines\": [\n    {\n      \"account\": \"507f1f77bcf86cd799439014\",\n      \"debit\": 1000,\n      \"credit\": 0,\n      \"desc\": \"Sales Revenue\"\n    },\n    {\n      \"account\": \"507f1f77bcf86cd799439015\",\n      \"debit\": 0,\n      \"credit\": 1000,\n      \"desc\": \"Accounts Receivable\"\n    }\n  ]\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/v1/er/journal-entries",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "v1",
                "er",
                "journal-entries"
              ]
            },
            "description": "Create a new journal entry for accounting"
          }
        },
        {
          "name": "Get Journal Entries",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{accessToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/v1/er/journal-entries?date_from=2024-01-01&date_to=2024-01-31&page=1&limit=20",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "v1",
                "er",
                "journal-entries"
              ],
              "query": [
                {
                  "key": "date_from",
                  "value": "2024-01-01"
                },
                {
                  "key": "date_to",
                  "value": "2024-01-31"
                },
                {
                  "key": "page",
                  "value": "1"
                },
                {
                  "key": "limit",
                  "value": "20"
                }
              ]
            },
            "description": "Get journal entries with date filtering and pagination"
          }
        },
        {
          "name": "Get Financial Reports",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{accessToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/v1/er/reports/financial?period=monthly&year=2024&month=1",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "v1",
                "er",
                "reports",
                "financial"
              ],
              "query": [
                {
                  "key": "period",
                  "value": "monthly"
                },
                {
                  "key": "year",
                  "value": "2024"
                },
                {
                  "key": "month",
                  "value": "1"
                }
              ]
            },
            "description": "Get financial reports including P&L, Balance Sheet, etc."
          }
        }
      ],
      "description": "Accounting and financial management endpoints"
    },
    {
      "name": "Admin Dashboard",
      "item": [
        {
          "name": "Get Dashboard Overview",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{accessToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/v1/admin/dashboard/overview",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "v1",
                "admin",
                "dashboard",
                "overview"
              ]
            },
            "description": "Get admin dashboard overview with key metrics"
          }
        },
        {
          "name": "Get System Settings",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{accessToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/v1/admin/settings",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "v1",
                "admin",
                "settings"
              ]
            },
            "description": "Get system settings and configuration"
          }
        },
        {
          "name": "Update System Settings",
          "request": {
            "method": "PATCH",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{accessToken}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"deliveryFee\": 500,\n  \"minOrderAmount\": 1000,\n  \"maxCashOnDelivery\": 5000\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/v1/admin/settings",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "v1",
                "admin",
                "settings"
              ]
            },
            "description": "Update system settings and configuration"
          }
        }
      ],
      "description": "Admin dashboard and system management endpoints"
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [
          "// Check if baseUrl variable is set",
          "if (!pm.variables.get('baseUrl')) {",
          "    console.log('baseUrl not set, using default localhost');",
          "    pm.variables.set('baseUrl', 'http://localhost:3000');",
          "}",
          "",
          "// Set environment based on baseUrl",
          "if (pm.variables.get('baseUrl').includes('localhost')) {",
          "    console.log('Using local environment');",
          "} else if (pm.variables.get('baseUrl').includes('staging')) {",
          "    console.log('Using staging environment');",
          "} else {",
          "    console.log('Using production environment');",
          "}"
        ]
      }
    },
    {
      "listen": "test",
      "script": {
        "type": "text/javascript",
        "exec": [
          "// Global test script for all requests",
          "pm.test('Status code is not 5xx', function () {",
          "    pm.response.to.not.have.status(500);",
          "    pm.response.to.not.have.status(502);",
          "    pm.response.to.not.have.status(503);",
          "    pm.response.to.not.have.status(504);",
          "});",
          "",
          "if (pm.response.code >= 200 && pm.response.code < 300) {",
          "    console.log('✅ Request successful:', pm.response.code);",
          "} else {",
          "    console.log('❌ Request failed:', pm.response.code, pm.response.json().message || '');",
          "}"
        ]
      }
    }
  ]
}
