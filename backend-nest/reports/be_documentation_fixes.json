{
  "timestamp": "2025-10-18T15:08:24.689Z",
  "totalUndocumented": 475,
  "byModule": {
    "store": 25,
    "auth": 7,
    "content": 25,
    "cart": 27,
    "merchant": 23,
    "notification": 13,
    "promotion": 8,
    "user": 14,
    "utility": 21,
    "unknown": 1,
    "admin": 72,
    "akhdimni": 9,
    "analytics": 30,
    "order": 32,
    "driver": 15,
    "er": 20,
    "finance": 32,
    "health": 8,
    "legal": 12,
    "marketer": 23,
    "metrics": 2,
    "onboarding": 8,
    "shift": 6,
    "support": 9,
    "vendor": 13,
    "wallet": 20
  },
  "byMethod": {
    "DELETE": 24,
    "GET": 242,
    "PATCH": 76,
    "POST": 133
  },
  "fixes": [
    {
      "endpoint": {
        "method": "DELETE",
        "normalized_path": "/admin/stores/{param}",
        "path": "/admin/stores/:id",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/store/store.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/store/store.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Delete stores' })",
        "@ApiTags('store')",
        "@ApiParam({ name: 'param', description: 'param ID' })",
        "@ApiResponse({ status: 200, description: 'Deleted' })",
        "@ApiResponse({ status: 404, description: 'Not found' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "StoresDto"
      ],
      "priority": "HIGH",
      "module": "store"
    },
    {
      "endpoint": {
        "method": "DELETE",
        "normalized_path": "/auth/consent/{param}",
        "path": "/auth/consent/:type",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/auth/auth.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/auth/auth.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Delete consent' })",
        "@ApiTags('auth')",
        "@ApiParam({ name: 'param', description: 'param ID' })",
        "@ApiResponse({ status: 200, description: 'Deleted' })",
        "@ApiResponse({ status: 404, description: 'Not found' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "ConsentDto"
      ],
      "priority": "HIGH",
      "module": "auth"
    },
    {
      "endpoint": {
        "method": "DELETE",
        "normalized_path": "/content/admin/faqs/{param}",
        "path": "/content/admin/faqs/:id",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/content/content.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/content/content.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Delete faqs' })",
        "@ApiTags('content')",
        "@ApiParam({ name: 'param', description: 'param ID' })",
        "@ApiResponse({ status: 200, description: 'Deleted' })",
        "@ApiResponse({ status: 404, description: 'Not found' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "FaqsDto"
      ],
      "priority": "HIGH",
      "module": "content"
    },
    {
      "endpoint": {
        "method": "DELETE",
        "normalized_path": "/content/banners/{param}",
        "path": "/content/banners/:id",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/content/content.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/content/content.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Delete banners' })",
        "@ApiTags('content')",
        "@ApiParam({ name: 'param', description: 'param ID' })",
        "@ApiResponse({ status: 200, description: 'Deleted' })",
        "@ApiResponse({ status: 404, description: 'Not found' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "BannersDto"
      ],
      "priority": "LOW",
      "module": "content"
    },
    {
      "endpoint": {
        "method": "DELETE",
        "normalized_path": "/content/sections/{param}",
        "path": "/content/sections/:id",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/content/content.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/content/content.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Delete sections' })",
        "@ApiTags('content')",
        "@ApiParam({ name: 'param', description: 'param ID' })",
        "@ApiResponse({ status: 200, description: 'Deleted' })",
        "@ApiResponse({ status: 404, description: 'Not found' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "SectionsDto"
      ],
      "priority": "LOW",
      "module": "content"
    },
    {
      "endpoint": {
        "method": "DELETE",
        "normalized_path": "/delivery/cart",
        "path": "/delivery/cart",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/cart/cart.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/cart/cart.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Delete cart' })",
        "@ApiTags('cart')",
        "@ApiResponse({ status: 200, description: 'Deleted' })",
        "@ApiResponse({ status: 404, description: 'Not found' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "CartDto"
      ],
      "priority": "LOW",
      "module": "cart"
    },
    {
      "endpoint": {
        "method": "DELETE",
        "normalized_path": "/delivery/cart/combined/clear-all",
        "path": "/delivery/cart/combined/clear-all",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/cart/cart.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/cart/cart.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Delete clear-all' })",
        "@ApiTags('cart')",
        "@ApiResponse({ status: 200, description: 'Deleted' })",
        "@ApiResponse({ status: 404, description: 'Not found' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "Clear-allDto"
      ],
      "priority": "LOW",
      "module": "cart"
    },
    {
      "endpoint": {
        "method": "DELETE",
        "normalized_path": "/delivery/cart/items/{param}",
        "path": "/delivery/cart/items/:productId",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/cart/cart.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/cart/cart.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Delete items' })",
        "@ApiTags('cart')",
        "@ApiParam({ name: 'param', description: 'param ID' })",
        "@ApiResponse({ status: 200, description: 'Deleted' })",
        "@ApiResponse({ status: 404, description: 'Not found' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "ItemsDto"
      ],
      "priority": "LOW",
      "module": "cart"
    },
    {
      "endpoint": {
        "method": "DELETE",
        "normalized_path": "/delivery/cart/shein",
        "path": "/delivery/cart/shein",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/cart/cart.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/cart/cart.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Delete shein' })",
        "@ApiTags('cart')",
        "@ApiResponse({ status: 200, description: 'Deleted' })",
        "@ApiResponse({ status: 404, description: 'Not found' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "SheinDto"
      ],
      "priority": "LOW",
      "module": "cart"
    },
    {
      "endpoint": {
        "method": "DELETE",
        "normalized_path": "/delivery/cart/shein/items/{param}",
        "path": "/delivery/cart/shein/items/:sheinProductId",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/cart/cart.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/cart/cart.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Delete items' })",
        "@ApiTags('cart')",
        "@ApiParam({ name: 'param', description: 'param ID' })",
        "@ApiResponse({ status: 200, description: 'Deleted' })",
        "@ApiResponse({ status: 404, description: 'Not found' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "ItemsDto"
      ],
      "priority": "LOW",
      "module": "cart"
    },
    {
      "endpoint": {
        "method": "DELETE",
        "normalized_path": "/delivery/cart/{param}",
        "path": "/delivery/cart/:productId",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/cart/cart.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/cart/cart.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Delete cart' })",
        "@ApiTags('cart')",
        "@ApiParam({ name: 'param', description: 'param ID' })",
        "@ApiResponse({ status: 200, description: 'Deleted' })",
        "@ApiResponse({ status: 404, description: 'Not found' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "CartDto"
      ],
      "priority": "LOW",
      "module": "cart"
    },
    {
      "endpoint": {
        "method": "DELETE",
        "normalized_path": "/delivery/cart/{param}/items/{param}",
        "path": "/delivery/cart/:cartId/items/:productId",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/cart/cart.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/cart/cart.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Delete items' })",
        "@ApiTags('cart')",
        "@ApiParam({ name: 'param', description: 'param ID' })",
        "@ApiParam({ name: 'param', description: 'param ID' })",
        "@ApiResponse({ status: 200, description: 'Deleted' })",
        "@ApiResponse({ status: 404, description: 'Not found' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "ItemsDto"
      ],
      "priority": "LOW",
      "module": "cart"
    },
    {
      "endpoint": {
        "method": "DELETE",
        "normalized_path": "/merchant/products/{param}",
        "path": "/merchant/products/:id",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/merchant/merchant.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/merchant/merchant.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Delete products' })",
        "@ApiTags('merchant')",
        "@ApiParam({ name: 'param', description: 'param ID' })",
        "@ApiResponse({ status: 200, description: 'Deleted' })",
        "@ApiResponse({ status: 404, description: 'Not found' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "ProductsDto"
      ],
      "priority": "LOW",
      "module": "merchant"
    },
    {
      "endpoint": {
        "method": "DELETE",
        "normalized_path": "/merchant/{param}",
        "path": "/merchant/:id",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/merchant/merchant.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/merchant/merchant.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Delete merchant' })",
        "@ApiTags('merchant')",
        "@ApiParam({ name: 'param', description: 'param ID' })",
        "@ApiResponse({ status: 200, description: 'Deleted' })",
        "@ApiResponse({ status: 404, description: 'Not found' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "MerchantDto"
      ],
      "priority": "LOW",
      "module": "merchant"
    },
    {
      "endpoint": {
        "method": "DELETE",
        "normalized_path": "/notifications/suppression/channel/{param}",
        "path": "/notifications/suppression/channel/:channel",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/notification/notification.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/notification/notification.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Delete channel' })",
        "@ApiTags('notification')",
        "@ApiParam({ name: 'param', description: 'param ID' })",
        "@ApiResponse({ status: 200, description: 'Deleted' })",
        "@ApiResponse({ status: 404, description: 'Not found' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "ChannelDto"
      ],
      "priority": "LOW",
      "module": "notification"
    },
    {
      "endpoint": {
        "method": "DELETE",
        "normalized_path": "/notifications/suppression/{param}",
        "path": "/notifications/suppression/:id",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/notification/notification.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/notification/notification.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Delete suppression' })",
        "@ApiTags('notification')",
        "@ApiParam({ name: 'param', description: 'param ID' })",
        "@ApiResponse({ status: 200, description: 'Deleted' })",
        "@ApiResponse({ status: 404, description: 'Not found' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "SuppressionDto"
      ],
      "priority": "LOW",
      "module": "notification"
    },
    {
      "endpoint": {
        "method": "DELETE",
        "normalized_path": "/notifications/{param}",
        "path": "/notifications/:id",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/notification/notification.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/notification/notification.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Delete notifications' })",
        "@ApiTags('notification')",
        "@ApiParam({ name: 'param', description: 'param ID' })",
        "@ApiResponse({ status: 200, description: 'Deleted' })",
        "@ApiResponse({ status: 404, description: 'Not found' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "NotificationsDto"
      ],
      "priority": "LOW",
      "module": "notification"
    },
    {
      "endpoint": {
        "method": "DELETE",
        "normalized_path": "/promotions/{param}",
        "path": "/promotions/:id",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/promotion/promotion.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/promotion/promotion.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Delete promotions' })",
        "@ApiTags('promotion')",
        "@ApiParam({ name: 'param', description: 'param ID' })",
        "@ApiResponse({ status: 200, description: 'Deleted' })",
        "@ApiResponse({ status: 404, description: 'Not found' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "PromotionsDto"
      ],
      "priority": "LOW",
      "module": "promotion"
    },
    {
      "endpoint": {
        "method": "DELETE",
        "normalized_path": "/users/addresses/{param}",
        "path": "/users/addresses/:addressId",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/user/user.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/user/user.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Delete addresses' })",
        "@ApiTags('user')",
        "@ApiParam({ name: 'param', description: 'param ID' })",
        "@ApiResponse({ status: 200, description: 'Deleted' })",
        "@ApiResponse({ status: 404, description: 'Not found' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "AddressesDto"
      ],
      "priority": "MEDIUM",
      "module": "user"
    },
    {
      "endpoint": {
        "method": "DELETE",
        "normalized_path": "/users/deactivate",
        "path": "/users/deactivate",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/user/user.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/user/user.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Delete deactivate' })",
        "@ApiTags('user')",
        "@ApiResponse({ status: 200, description: 'Deleted' })",
        "@ApiResponse({ status: 404, description: 'Not found' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "DeactivateDto"
      ],
      "priority": "MEDIUM",
      "module": "user"
    },
    {
      "endpoint": {
        "method": "DELETE",
        "normalized_path": "/users/pin/reset/{param}",
        "path": "/users/pin/reset/:userId",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/user/user.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/user/user.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Delete reset' })",
        "@ApiTags('user')",
        "@ApiParam({ name: 'param', description: 'param ID' })",
        "@ApiResponse({ status: 200, description: 'Deleted' })",
        "@ApiResponse({ status: 404, description: 'Not found' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "ResetDto"
      ],
      "priority": "MEDIUM",
      "module": "user"
    },
    {
      "endpoint": {
        "method": "DELETE",
        "normalized_path": "/utility/daily",
        "path": "/utility/daily",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/utility/utility.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/utility/utility.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Delete daily' })",
        "@ApiTags('utility')",
        "@ApiResponse({ status: 200, description: 'Deleted' })",
        "@ApiResponse({ status: 404, description: 'Not found' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "DailyDto"
      ],
      "priority": "LOW",
      "module": "utility"
    },
    {
      "endpoint": {
        "method": "DELETE",
        "normalized_path": "/utility/daily/{param}",
        "path": "/utility/daily/:id",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/utility/utility.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/utility/utility.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Delete daily' })",
        "@ApiTags('utility')",
        "@ApiParam({ name: 'param', description: 'param ID' })",
        "@ApiResponse({ status: 200, description: 'Deleted' })",
        "@ApiResponse({ status: 404, description: 'Not found' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "DailyDto"
      ],
      "priority": "LOW",
      "module": "utility"
    },
    {
      "endpoint": {
        "method": "DELETE",
        "normalized_path": "/utility/pricing/{param}",
        "path": "/utility/pricing/:city",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/utility/utility.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/utility/utility.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Delete pricing' })",
        "@ApiTags('utility')",
        "@ApiParam({ name: 'param', description: 'param ID' })",
        "@ApiResponse({ status: 200, description: 'Deleted' })",
        "@ApiResponse({ status: 404, description: 'Not found' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "PricingDto"
      ],
      "priority": "LOW",
      "module": "utility"
    },
    {
      "endpoint": {
        "method": "GET",
        "normalized_path": "/",
        "path": "/",
        "controller_file": "bthwani-project-main/backend-nest/src/app.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/app.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Get resource' })",
        "@ApiTags('unknown')",
        "@ApiResponse({ status: 200, description: 'Success', type: ResponseDto })",
        "@ApiResponse({ status: 404, description: 'Not found' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "ResponseDto"
      ],
      "priority": "LOW",
      "module": "unknown"
    },
    {
      "endpoint": {
        "method": "GET",
        "normalized_path": "/admin/audit-logs",
        "path": "/admin/audit-logs",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/admin/admin.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/admin/admin.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Get audit-logs' })",
        "@ApiTags('admin')",
        "@ApiResponse({ status: 200, description: 'Success', type: Audit-logsDto })",
        "@ApiResponse({ status: 404, description: 'Not found' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "Audit-logsDto"
      ],
      "priority": "HIGH",
      "module": "admin"
    },
    {
      "endpoint": {
        "method": "GET",
        "normalized_path": "/admin/audit-logs/{param}",
        "path": "/admin/audit-logs/:id",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/admin/admin.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/admin/admin.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Get audit-logs' })",
        "@ApiTags('admin')",
        "@ApiParam({ name: 'param', description: 'param ID' })",
        "@ApiResponse({ status: 200, description: 'Success', type: Audit-logsDto })",
        "@ApiResponse({ status: 404, description: 'Not found' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "Audit-logsDto"
      ],
      "priority": "HIGH",
      "module": "admin"
    },
    {
      "endpoint": {
        "method": "GET",
        "normalized_path": "/admin/backup/list",
        "path": "/admin/backup/list",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/admin/admin.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/admin/admin.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Get list' })",
        "@ApiTags('admin')",
        "@ApiResponse({ status: 200, description: 'Success', type: ListDto })",
        "@ApiResponse({ status: 404, description: 'Not found' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "ListDto"
      ],
      "priority": "HIGH",
      "module": "admin"
    },
    {
      "endpoint": {
        "method": "GET",
        "normalized_path": "/admin/backup/{param}/download",
        "path": "/admin/backup/:id/download",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/admin/admin.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/admin/admin.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Get download' })",
        "@ApiTags('admin')",
        "@ApiParam({ name: 'param', description: 'param ID' })",
        "@ApiResponse({ status: 200, description: 'Success', type: DownloadDto })",
        "@ApiResponse({ status: 404, description: 'Not found' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "DownloadDto"
      ],
      "priority": "HIGH",
      "module": "admin"
    },
    {
      "endpoint": {
        "method": "GET",
        "normalized_path": "/admin/cache/stats",
        "path": "/admin/cache/stats",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/admin/admin.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/admin/admin.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Get stats' })",
        "@ApiTags('admin')",
        "@ApiResponse({ status: 200, description: 'Success', type: StatsDto })",
        "@ApiResponse({ status: 404, description: 'Not found' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "StatsDto"
      ],
      "priority": "HIGH",
      "module": "admin"
    },
    {
      "endpoint": {
        "method": "GET",
        "normalized_path": "/admin/dashboard",
        "path": "/admin/dashboard",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/admin/admin.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/admin/admin.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Get dashboard' })",
        "@ApiTags('admin')",
        "@ApiResponse({ status: 200, description: 'Success', type: DashboardDto })",
        "@ApiResponse({ status: 404, description: 'Not found' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "DashboardDto"
      ],
      "priority": "HIGH",
      "module": "admin"
    },
    {
      "endpoint": {
        "method": "GET",
        "normalized_path": "/admin/dashboard/live-metrics",
        "path": "/admin/dashboard/live-metrics",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/admin/admin.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/admin/admin.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Get live-metrics' })",
        "@ApiTags('admin')",
        "@ApiResponse({ status: 200, description: 'Success', type: Live-metricsDto })",
        "@ApiResponse({ status: 404, description: 'Not found' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "Live-metricsDto"
      ],
      "priority": "HIGH",
      "module": "admin"
    },
    {
      "endpoint": {
        "method": "GET",
        "normalized_path": "/admin/dashboard/orders-by-status",
        "path": "/admin/dashboard/orders-by-status",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/admin/admin.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/admin/admin.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Get orders-by-status' })",
        "@ApiTags('admin')",
        "@ApiResponse({ status: 200, description: 'Success', type: Orders-by-statusDto })",
        "@ApiResponse({ status: 404, description: 'Not found' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "Orders-by-statusDto"
      ],
      "priority": "HIGH",
      "module": "admin"
    },
    {
      "endpoint": {
        "method": "GET",
        "normalized_path": "/admin/dashboard/revenue",
        "path": "/admin/dashboard/revenue",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/admin/admin.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/admin/admin.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Get revenue' })",
        "@ApiTags('admin')",
        "@ApiResponse({ status: 200, description: 'Success', type: RevenueDto })",
        "@ApiResponse({ status: 404, description: 'Not found' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "RevenueDto"
      ],
      "priority": "HIGH",
      "module": "admin"
    },
    {
      "endpoint": {
        "method": "GET",
        "normalized_path": "/admin/data-deletion/requests",
        "path": "/admin/data-deletion/requests",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/admin/admin.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/admin/admin.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Get requests' })",
        "@ApiTags('admin')",
        "@ApiResponse({ status: 200, description: 'Success', type: RequestsDto })",
        "@ApiResponse({ status: 404, description: 'Not found' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "RequestsDto"
      ],
      "priority": "HIGH",
      "module": "admin"
    },
    {
      "endpoint": {
        "method": "GET",
        "normalized_path": "/admin/database/stats",
        "path": "/admin/database/stats",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/admin/admin.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/admin/admin.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Get stats' })",
        "@ApiTags('admin')",
        "@ApiResponse({ status: 200, description: 'Success', type: StatsDto })",
        "@ApiResponse({ status: 404, description: 'Not found' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "StatsDto"
      ],
      "priority": "HIGH",
      "module": "admin"
    },
    {
      "endpoint": {
        "method": "GET",
        "normalized_path": "/admin/drivers/attendance/summary",
        "path": "/admin/drivers/attendance/summary",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/admin/admin.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/admin/admin.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Get summary' })",
        "@ApiTags('admin')",
        "@ApiResponse({ status: 200, description: 'Success', type: SummaryDto })",
        "@ApiResponse({ status: 404, description: 'Not found' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "SummaryDto"
      ],
      "priority": "HIGH",
      "module": "admin"
    },
    {
      "endpoint": {
        "method": "GET",
        "normalized_path": "/admin/drivers/leave-requests",
        "path": "/admin/drivers/leave-requests",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/admin/admin.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/admin/admin.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Get leave-requests' })",
        "@ApiTags('admin')",
        "@ApiResponse({ status: 200, description: 'Success', type: Leave-requestsDto })",
        "@ApiResponse({ status: 404, description: 'Not found' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "Leave-requestsDto"
      ],
      "priority": "HIGH",
      "module": "admin"
    },
    {
      "endpoint": {
        "method": "GET",
        "normalized_path": "/admin/drivers/stats/by-status",
        "path": "/admin/drivers/stats/by-status",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/admin/admin.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/admin/admin.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Get by-status' })",
        "@ApiTags('admin')",
        "@ApiResponse({ status: 200, description: 'Success', type: By-statusDto })",
        "@ApiResponse({ status: 404, description: 'Not found' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "By-statusDto"
      ],
      "priority": "HIGH",
      "module": "admin"
    },
    {
      "endpoint": {
        "method": "GET",
        "normalized_path": "/admin/drivers/{param}",
        "path": "/admin/drivers/:id",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/admin/admin.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/admin/admin.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Get drivers' })",
        "@ApiTags('admin')",
        "@ApiParam({ name: 'param', description: 'param ID' })",
        "@ApiResponse({ status: 200, description: 'Success', type: DriversDto })",
        "@ApiResponse({ status: 404, description: 'Not found' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "DriversDto"
      ],
      "priority": "HIGH",
      "module": "admin"
    },
    {
      "endpoint": {
        "method": "GET",
        "normalized_path": "/admin/drivers/{param}/attendance",
        "path": "/admin/drivers/:id/attendance",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/admin/admin.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/admin/admin.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Get attendance' })",
        "@ApiTags('admin')",
        "@ApiParam({ name: 'param', description: 'param ID' })",
        "@ApiResponse({ status: 200, description: 'Success', type: AttendanceDto })",
        "@ApiResponse({ status: 404, description: 'Not found' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "AttendanceDto"
      ],
      "priority": "HIGH",
      "module": "admin"
    },
    {
      "endpoint": {
        "method": "GET",
        "normalized_path": "/admin/drivers/{param}/financials",
        "path": "/admin/drivers/:id/financials",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/admin/admin.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/admin/admin.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Get financials' })",
        "@ApiTags('admin')",
        "@ApiParam({ name: 'param', description: 'param ID' })",
        "@ApiResponse({ status: 200, description: 'Success', type: FinancialsDto })",
        "@ApiResponse({ status: 404, description: 'Not found' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "FinancialsDto"
      ],
      "priority": "HIGH",
      "module": "admin"
    },
    {
      "endpoint": {
        "method": "GET",
        "normalized_path": "/admin/drivers/{param}/leave-balance",
        "path": "/admin/drivers/:id/leave-balance",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/admin/admin.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/admin/admin.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Get leave-balance' })",
        "@ApiTags('admin')",
        "@ApiParam({ name: 'param', description: 'param ID' })",
        "@ApiResponse({ status: 200, description: 'Success', type: Leave-balanceDto })",
        "@ApiResponse({ status: 404, description: 'Not found' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "Leave-balanceDto"
      ],
      "priority": "HIGH",
      "module": "admin"
    },
    {
      "endpoint": {
        "method": "GET",
        "normalized_path": "/admin/drivers/{param}/performance",
        "path": "/admin/drivers/:id/performance",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/admin/admin.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/admin/admin.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Get performance' })",
        "@ApiTags('admin')",
        "@ApiParam({ name: 'param', description: 'param ID' })",
        "@ApiResponse({ status: 200, description: 'Success', type: PerformanceDto })",
        "@ApiResponse({ status: 404, description: 'Not found' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "PerformanceDto"
      ],
      "priority": "HIGH",
      "module": "admin"
    },
    {
      "endpoint": {
        "method": "GET",
        "normalized_path": "/admin/marketers",
        "path": "/admin/marketers",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/admin/admin.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/admin/admin.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Get marketers' })",
        "@ApiTags('admin')",
        "@ApiResponse({ status: 200, description: 'Success', type: MarketersDto })",
        "@ApiResponse({ status: 404, description: 'Not found' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "MarketersDto"
      ],
      "priority": "HIGH",
      "module": "admin"
    },
    {
      "endpoint": {
        "method": "GET",
        "normalized_path": "/admin/marketers/export",
        "path": "/admin/marketers/export",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/admin/admin.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/admin/admin.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Get export' })",
        "@ApiTags('admin')",
        "@ApiResponse({ status: 200, description: 'Success', type: ExportDto })",
        "@ApiResponse({ status: 404, description: 'Not found' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "ExportDto"
      ],
      "priority": "HIGH",
      "module": "admin"
    },
    {
      "endpoint": {
        "method": "GET",
        "normalized_path": "/admin/marketers/statistics",
        "path": "/admin/marketers/statistics",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/admin/admin.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/admin/admin.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Get statistics' })",
        "@ApiTags('admin')",
        "@ApiResponse({ status: 200, description: 'Success', type: StatisticsDto })",
        "@ApiResponse({ status: 404, description: 'Not found' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "StatisticsDto"
      ],
      "priority": "HIGH",
      "module": "admin"
    },
    {
      "endpoint": {
        "method": "GET",
        "normalized_path": "/admin/marketers/{param}",
        "path": "/admin/marketers/:id",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/admin/admin.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/admin/admin.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Get marketers' })",
        "@ApiTags('admin')",
        "@ApiParam({ name: 'param', description: 'param ID' })",
        "@ApiResponse({ status: 200, description: 'Success', type: MarketersDto })",
        "@ApiResponse({ status: 404, description: 'Not found' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "MarketersDto"
      ],
      "priority": "HIGH",
      "module": "admin"
    },
    {
      "endpoint": {
        "method": "GET",
        "normalized_path": "/admin/marketers/{param}/performance",
        "path": "/admin/marketers/:id/performance",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/admin/admin.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/admin/admin.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Get performance' })",
        "@ApiTags('admin')",
        "@ApiParam({ name: 'param', description: 'param ID' })",
        "@ApiResponse({ status: 200, description: 'Success', type: PerformanceDto })",
        "@ApiResponse({ status: 404, description: 'Not found' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "PerformanceDto"
      ],
      "priority": "HIGH",
      "module": "admin"
    },
    {
      "endpoint": {
        "method": "GET",
        "normalized_path": "/admin/marketers/{param}/stores",
        "path": "/admin/marketers/:id/stores",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/admin/admin.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/admin/admin.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Get stores' })",
        "@ApiTags('admin')",
        "@ApiParam({ name: 'param', description: 'param ID' })",
        "@ApiResponse({ status: 200, description: 'Success', type: StoresDto })",
        "@ApiResponse({ status: 404, description: 'Not found' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "StoresDto"
      ],
      "priority": "HIGH",
      "module": "admin"
    },
    {
      "endpoint": {
        "method": "GET",
        "normalized_path": "/admin/orders/stats/by-city",
        "path": "/admin/orders/stats/by-city",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/admin/admin.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/admin/admin.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Get by-city' })",
        "@ApiTags('admin')",
        "@ApiResponse({ status: 200, description: 'Success', type: By-cityDto })",
        "@ApiResponse({ status: 404, description: 'Not found' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "By-cityDto"
      ],
      "priority": "HIGH",
      "module": "admin"
    },
    {
      "endpoint": {
        "method": "GET",
        "normalized_path": "/admin/orders/stats/by-payment-method",
        "path": "/admin/orders/stats/by-payment-method",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/admin/admin.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/admin/admin.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Get by-payment-method' })",
        "@ApiTags('admin')",
        "@ApiResponse({ status: 200, description: 'Success', type: By-payment-methodDto })",
        "@ApiResponse({ status: 404, description: 'Not found' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "By-payment-methodDto"
      ],
      "priority": "HIGH",
      "module": "admin"
    },
    {
      "endpoint": {
        "method": "GET",
        "normalized_path": "/admin/quality/metrics",
        "path": "/admin/quality/metrics",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/admin/admin.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/admin/admin.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Get metrics' })",
        "@ApiTags('admin')",
        "@ApiResponse({ status: 200, description: 'Success', type: MetricsDto })",
        "@ApiResponse({ status: 404, description: 'Not found' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "MetricsDto"
      ],
      "priority": "HIGH",
      "module": "admin"
    },
    {
      "endpoint": {
        "method": "GET",
        "normalized_path": "/admin/reports/daily",
        "path": "/admin/reports/daily",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/admin/admin.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/admin/admin.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Get daily' })",
        "@ApiTags('admin')",
        "@ApiResponse({ status: 200, description: 'Success', type: DailyDto })",
        "@ApiResponse({ status: 404, description: 'Not found' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "DailyDto"
      ],
      "priority": "HIGH",
      "module": "admin"
    },
    {
      "endpoint": {
        "method": "GET",
        "normalized_path": "/admin/roles",
        "path": "/admin/roles",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/admin/admin.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/admin/admin.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Get roles' })",
        "@ApiTags('admin')",
        "@ApiResponse({ status: 200, description: 'Success', type: RolesDto })",
        "@ApiResponse({ status: 404, description: 'Not found' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "RolesDto"
      ],
      "priority": "HIGH",
      "module": "admin"
    },
    {
      "endpoint": {
        "method": "GET",
        "normalized_path": "/admin/security/password-attempts",
        "path": "/admin/security/password-attempts",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/admin/admin.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/admin/admin.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Get password-attempts' })",
        "@ApiTags('admin')",
        "@ApiResponse({ status: 200, description: 'Success', type: Password-attemptsDto })",
        "@ApiResponse({ status: 404, description: 'Not found' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "Password-attemptsDto"
      ],
      "priority": "HIGH",
      "module": "admin"
    },
    {
      "endpoint": {
        "method": "GET",
        "normalized_path": "/admin/settings",
        "path": "/admin/settings",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/admin/admin.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/admin/admin.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Get settings' })",
        "@ApiTags('admin')",
        "@ApiResponse({ status: 200, description: 'Success', type: SettingsDto })",
        "@ApiResponse({ status: 404, description: 'Not found' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "SettingsDto"
      ],
      "priority": "HIGH",
      "module": "admin"
    },
    {
      "endpoint": {
        "method": "GET",
        "normalized_path": "/admin/settings/feature-flags",
        "path": "/admin/settings/feature-flags",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/admin/admin.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/admin/admin.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Get feature-flags' })",
        "@ApiTags('admin')",
        "@ApiResponse({ status: 200, description: 'Success', type: Feature-flagsDto })",
        "@ApiResponse({ status: 404, description: 'Not found' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "Feature-flagsDto"
      ],
      "priority": "HIGH",
      "module": "admin"
    },
    {
      "endpoint": {
        "method": "GET",
        "normalized_path": "/admin/stats/financial",
        "path": "/admin/stats/financial",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/admin/admin.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/admin/admin.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Get financial' })",
        "@ApiTags('admin')",
        "@ApiResponse({ status: 200, description: 'Success', type: FinancialDto })",
        "@ApiResponse({ status: 404, description: 'Not found' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "FinancialDto"
      ],
      "priority": "HIGH",
      "module": "admin"
    },
    {
      "endpoint": {
        "method": "GET",
        "normalized_path": "/admin/stats/today",
        "path": "/admin/stats/today",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/admin/admin.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/admin/admin.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Get today' })",
        "@ApiTags('admin')",
        "@ApiResponse({ status: 200, description: 'Success', type: TodayDto })",
        "@ApiResponse({ status: 404, description: 'Not found' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "TodayDto"
      ],
      "priority": "HIGH",
      "module": "admin"
    },
    {
      "endpoint": {
        "method": "GET",
        "normalized_path": "/admin/stores",
        "path": "/admin/stores",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/store/store.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/store/store.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Get stores' })",
        "@ApiTags('store')",
        "@ApiResponse({ status: 200, description: 'Success', type: StoresDto })",
        "@ApiResponse({ status: 404, description: 'Not found' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "StoresDto"
      ],
      "priority": "HIGH",
      "module": "store"
    },
    {
      "endpoint": {
        "method": "GET",
        "normalized_path": "/admin/stores/pending",
        "path": "/admin/stores/pending",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/store/store.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/store/store.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Get pending' })",
        "@ApiTags('store')",
        "@ApiResponse({ status: 200, description: 'Success', type: PendingDto })",
        "@ApiResponse({ status: 404, description: 'Not found' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "PendingDto"
      ],
      "priority": "HIGH",
      "module": "store"
    },
    {
      "endpoint": {
        "method": "GET",
        "normalized_path": "/admin/stores/products/{param}/variants",
        "path": "/admin/stores/products/:id/variants",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/store/store.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/store/store.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Get variants' })",
        "@ApiTags('store')",
        "@ApiParam({ name: 'param', description: 'param ID' })",
        "@ApiResponse({ status: 200, description: 'Success', type: VariantsDto })",
        "@ApiResponse({ status: 404, description: 'Not found' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "VariantsDto"
      ],
      "priority": "HIGH",
      "module": "store"
    },
    {
      "endpoint": {
        "method": "GET",
        "normalized_path": "/admin/stores/{param}",
        "path": "/admin/stores/:id",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/store/store.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/store/store.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Get stores' })",
        "@ApiTags('store')",
        "@ApiParam({ name: 'param', description: 'param ID' })",
        "@ApiResponse({ status: 200, description: 'Success', type: StoresDto })",
        "@ApiResponse({ status: 404, description: 'Not found' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "StoresDto"
      ],
      "priority": "HIGH",
      "module": "store"
    },
    {
      "endpoint": {
        "method": "GET",
        "normalized_path": "/admin/stores/{param}/analytics",
        "path": "/admin/stores/:id/analytics",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/store/store.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/store/store.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Get analytics' })",
        "@ApiTags('store')",
        "@ApiParam({ name: 'param', description: 'param ID' })",
        "@ApiResponse({ status: 200, description: 'Success', type: AnalyticsDto })",
        "@ApiResponse({ status: 404, description: 'Not found' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "AnalyticsDto"
      ],
      "priority": "HIGH",
      "module": "store"
    },
    {
      "endpoint": {
        "method": "GET",
        "normalized_path": "/admin/stores/{param}/inventory",
        "path": "/admin/stores/:id/inventory",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/store/store.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/store/store.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Get inventory' })",
        "@ApiTags('store')",
        "@ApiParam({ name: 'param', description: 'param ID' })",
        "@ApiResponse({ status: 200, description: 'Success', type: InventoryDto })",
        "@ApiResponse({ status: 404, description: 'Not found' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "InventoryDto"
      ],
      "priority": "HIGH",
      "module": "store"
    },
    {
      "endpoint": {
        "method": "GET",
        "normalized_path": "/admin/stores/{param}/products",
        "path": "/admin/stores/:id/products",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/store/store.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/store/store.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Get products' })",
        "@ApiTags('store')",
        "@ApiParam({ name: 'param', description: 'param ID' })",
        "@ApiResponse({ status: 200, description: 'Success', type: ProductsDto })",
        "@ApiResponse({ status: 404, description: 'Not found' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "ProductsDto"
      ],
      "priority": "HIGH",
      "module": "store"
    },
    {
      "endpoint": {
        "method": "GET",
        "normalized_path": "/admin/system/health",
        "path": "/admin/system/health",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/admin/admin.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/admin/admin.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Get health' })",
        "@ApiTags('admin')",
        "@ApiResponse({ status: 200, description: 'Success', type: HealthDto })",
        "@ApiResponse({ status: 404, description: 'Not found' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "HealthDto"
      ],
      "priority": "HIGH",
      "module": "admin"
    },
    {
      "endpoint": {
        "method": "GET",
        "normalized_path": "/admin/system/metrics",
        "path": "/admin/system/metrics",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/admin/admin.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/admin/admin.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Get metrics' })",
        "@ApiTags('admin')",
        "@ApiResponse({ status: 200, description: 'Success', type: MetricsDto })",
        "@ApiResponse({ status: 404, description: 'Not found' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "MetricsDto"
      ],
      "priority": "HIGH",
      "module": "admin"
    },
    {
      "endpoint": {
        "method": "GET",
        "normalized_path": "/admin/users",
        "path": "/admin/users",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/admin/admin.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/admin/admin.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Get users' })",
        "@ApiTags('admin')",
        "@ApiResponse({ status: 200, description: 'Success', type: UsersDto })",
        "@ApiResponse({ status: 404, description: 'Not found' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "UsersDto"
      ],
      "priority": "HIGH",
      "module": "admin"
    },
    {
      "endpoint": {
        "method": "GET",
        "normalized_path": "/admin/users/{param}",
        "path": "/admin/users/:id",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/admin/admin.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/admin/admin.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Get users' })",
        "@ApiTags('admin')",
        "@ApiParam({ name: 'param', description: 'param ID' })",
        "@ApiResponse({ status: 200, description: 'Success', type: UsersDto })",
        "@ApiResponse({ status: 404, description: 'Not found' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "UsersDto"
      ],
      "priority": "HIGH",
      "module": "admin"
    },
    {
      "endpoint": {
        "method": "GET",
        "normalized_path": "/admin/users/{param}/orders-history",
        "path": "/admin/users/:id/orders-history",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/admin/admin.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/admin/admin.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Get orders-history' })",
        "@ApiTags('admin')",
        "@ApiParam({ name: 'param', description: 'param ID' })",
        "@ApiResponse({ status: 200, description: 'Success', type: Orders-historyDto })",
        "@ApiResponse({ status: 404, description: 'Not found' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "Orders-historyDto"
      ],
      "priority": "HIGH",
      "module": "admin"
    },
    {
      "endpoint": {
        "method": "GET",
        "normalized_path": "/admin/vendors/pending",
        "path": "/admin/vendors/pending",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/admin/admin.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/admin/admin.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Get pending' })",
        "@ApiTags('admin')",
        "@ApiResponse({ status: 200, description: 'Success', type: PendingDto })",
        "@ApiResponse({ status: 404, description: 'Not found' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "PendingDto"
      ],
      "priority": "HIGH",
      "module": "admin"
    },
    {
      "endpoint": {
        "method": "GET",
        "normalized_path": "/admin/withdrawals",
        "path": "/admin/withdrawals",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/admin/admin.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/admin/admin.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Get withdrawals' })",
        "@ApiTags('admin')",
        "@ApiResponse({ status: 200, description: 'Success', type: WithdrawalsDto })",
        "@ApiResponse({ status: 404, description: 'Not found' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "WithdrawalsDto"
      ],
      "priority": "HIGH",
      "module": "admin"
    },
    {
      "endpoint": {
        "method": "GET",
        "normalized_path": "/admin/withdrawals/pending",
        "path": "/admin/withdrawals/pending",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/admin/admin.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/admin/admin.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Get pending' })",
        "@ApiTags('admin')",
        "@ApiResponse({ status: 200, description: 'Success', type: PendingDto })",
        "@ApiResponse({ status: 404, description: 'Not found' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "PendingDto"
      ],
      "priority": "HIGH",
      "module": "admin"
    },
    {
      "endpoint": {
        "method": "GET",
        "normalized_path": "/akhdimni/admin/errands",
        "path": "/akhdimni/admin/errands",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/akhdimni/akhdimni.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/akhdimni/akhdimni.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Get errands' })",
        "@ApiTags('akhdimni')",
        "@ApiResponse({ status: 200, description: 'Success', type: ErrandsDto })",
        "@ApiResponse({ status: 404, description: 'Not found' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "ErrandsDto"
      ],
      "priority": "HIGH",
      "module": "akhdimni"
    },
    {
      "endpoint": {
        "method": "GET",
        "normalized_path": "/akhdimni/errands/{param}",
        "path": "/akhdimni/errands/:id",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/akhdimni/akhdimni.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/akhdimni/akhdimni.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Get errands' })",
        "@ApiTags('akhdimni')",
        "@ApiParam({ name: 'param', description: 'param ID' })",
        "@ApiResponse({ status: 200, description: 'Success', type: ErrandsDto })",
        "@ApiResponse({ status: 404, description: 'Not found' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "ErrandsDto"
      ],
      "priority": "LOW",
      "module": "akhdimni"
    },
    {
      "endpoint": {
        "method": "GET",
        "normalized_path": "/akhdimni/my-errands",
        "path": "/akhdimni/my-errands",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/akhdimni/akhdimni.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/akhdimni/akhdimni.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Get my-errands' })",
        "@ApiTags('akhdimni')",
        "@ApiResponse({ status: 200, description: 'Success', type: My-errandsDto })",
        "@ApiResponse({ status: 404, description: 'Not found' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "My-errandsDto"
      ],
      "priority": "LOW",
      "module": "akhdimni"
    },
    {
      "endpoint": {
        "method": "GET",
        "normalized_path": "/analytics/adspend",
        "path": "/analytics/adspend",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/analytics/analytics.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/analytics/analytics.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Get adspend' })",
        "@ApiTags('analytics')",
        "@ApiResponse({ status: 200, description: 'Success', type: AdspendDto })",
        "@ApiResponse({ status: 404, description: 'Not found' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "AdspendDto"
      ],
      "priority": "LOW",
      "module": "analytics"
    },
    {
      "endpoint": {
        "method": "GET",
        "normalized_path": "/analytics/adspend/summary",
        "path": "/analytics/adspend/summary",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/analytics/analytics.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/analytics/analytics.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Get summary' })",
        "@ApiTags('analytics')",
        "@ApiResponse({ status: 200, description: 'Success', type: SummaryDto })",
        "@ApiResponse({ status: 404, description: 'Not found' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "SummaryDto"
      ],
      "priority": "LOW",
      "module": "analytics"
    },
    {
      "endpoint": {
        "method": "GET",
        "normalized_path": "/analytics/advanced/churn-rate",
        "path": "/analytics/advanced/churn-rate",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/analytics/analytics.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/analytics/analytics.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Get churn-rate' })",
        "@ApiTags('analytics')",
        "@ApiResponse({ status: 200, description: 'Success', type: Churn-rateDto })",
        "@ApiResponse({ status: 404, description: 'Not found' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "Churn-rateDto"
      ],
      "priority": "LOW",
      "module": "analytics"
    },
    {
      "endpoint": {
        "method": "GET",
        "normalized_path": "/analytics/advanced/cohort-analysis-advanced",
        "path": "/analytics/advanced/cohort-analysis-advanced",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/analytics/analytics.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/analytics/analytics.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Get cohort-analysis-advanced' })",
        "@ApiTags('analytics')",
        "@ApiResponse({ status: 200, description: 'Success', type: Cohort-analysis-advancedDto })",
        "@ApiResponse({ status: 404, description: 'Not found' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "Cohort-analysis-advancedDto"
      ],
      "priority": "LOW",
      "module": "analytics"
    },
    {
      "endpoint": {
        "method": "GET",
        "normalized_path": "/analytics/advanced/dashboard-overview",
        "path": "/analytics/advanced/dashboard-overview",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/analytics/analytics.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/analytics/analytics.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Get dashboard-overview' })",
        "@ApiTags('analytics')",
        "@ApiResponse({ status: 200, description: 'Success', type: Dashboard-overviewDto })",
        "@ApiResponse({ status: 404, description: 'Not found' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "Dashboard-overviewDto"
      ],
      "priority": "LOW",
      "module": "analytics"
    },
    {
      "endpoint": {
        "method": "GET",
        "normalized_path": "/analytics/advanced/driver-performance",
        "path": "/analytics/advanced/driver-performance",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/analytics/analytics.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/analytics/analytics.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Get driver-performance' })",
        "@ApiTags('analytics')",
        "@ApiResponse({ status: 200, description: 'Success', type: Driver-performanceDto })",
        "@ApiResponse({ status: 404, description: 'Not found' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "Driver-performanceDto"
      ],
      "priority": "MEDIUM",
      "module": "analytics"
    },
    {
      "endpoint": {
        "method": "GET",
        "normalized_path": "/analytics/advanced/funnel-analysis",
        "path": "/analytics/advanced/funnel-analysis",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/analytics/analytics.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/analytics/analytics.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Get funnel-analysis' })",
        "@ApiTags('analytics')",
        "@ApiResponse({ status: 200, description: 'Success', type: Funnel-analysisDto })",
        "@ApiResponse({ status: 404, description: 'Not found' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "Funnel-analysisDto"
      ],
      "priority": "LOW",
      "module": "analytics"
    },
    {
      "endpoint": {
        "method": "GET",
        "normalized_path": "/analytics/advanced/geographic-distribution",
        "path": "/analytics/advanced/geographic-distribution",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/analytics/analytics.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/analytics/analytics.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Get geographic-distribution' })",
        "@ApiTags('analytics')",
        "@ApiResponse({ status: 200, description: 'Success', type: Geographic-distributionDto })",
        "@ApiResponse({ status: 404, description: 'Not found' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "Geographic-distributionDto"
      ],
      "priority": "LOW",
      "module": "analytics"
    },
    {
      "endpoint": {
        "method": "GET",
        "normalized_path": "/analytics/advanced/ltv",
        "path": "/analytics/advanced/ltv",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/analytics/analytics.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/analytics/analytics.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Get ltv' })",
        "@ApiTags('analytics')",
        "@ApiResponse({ status: 200, description: 'Success', type: LtvDto })",
        "@ApiResponse({ status: 404, description: 'Not found' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "LtvDto"
      ],
      "priority": "LOW",
      "module": "analytics"
    },
    {
      "endpoint": {
        "method": "GET",
        "normalized_path": "/analytics/advanced/peak-hours",
        "path": "/analytics/advanced/peak-hours",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/analytics/analytics.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/analytics/analytics.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Get peak-hours' })",
        "@ApiTags('analytics')",
        "@ApiResponse({ status: 200, description: 'Success', type: Peak-hoursDto })",
        "@ApiResponse({ status: 404, description: 'Not found' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "Peak-hoursDto"
      ],
      "priority": "LOW",
      "module": "analytics"
    },
    {
      "endpoint": {
        "method": "GET",
        "normalized_path": "/analytics/advanced/product-performance",
        "path": "/analytics/advanced/product-performance",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/analytics/analytics.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/analytics/analytics.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Get product-performance' })",
        "@ApiTags('analytics')",
        "@ApiResponse({ status: 200, description: 'Success', type: Product-performanceDto })",
        "@ApiResponse({ status: 404, description: 'Not found' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "Product-performanceDto"
      ],
      "priority": "LOW",
      "module": "analytics"
    },
    {
      "endpoint": {
        "method": "GET",
        "normalized_path": "/analytics/advanced/retention",
        "path": "/analytics/advanced/retention",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/analytics/analytics.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/analytics/analytics.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Get retention' })",
        "@ApiTags('analytics')",
        "@ApiResponse({ status: 200, description: 'Success', type: RetentionDto })",
        "@ApiResponse({ status: 404, description: 'Not found' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "RetentionDto"
      ],
      "priority": "LOW",
      "module": "analytics"
    },
    {
      "endpoint": {
        "method": "GET",
        "normalized_path": "/analytics/events",
        "path": "/analytics/events",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/analytics/analytics.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/analytics/analytics.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Get events' })",
        "@ApiTags('analytics')",
        "@ApiResponse({ status: 200, description: 'Success', type: EventsDto })",
        "@ApiResponse({ status: 404, description: 'Not found' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "EventsDto"
      ],
      "priority": "LOW",
      "module": "analytics"
    },
    {
      "endpoint": {
        "method": "GET",
        "normalized_path": "/analytics/events/summary",
        "path": "/analytics/events/summary",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/analytics/analytics.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/analytics/analytics.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Get summary' })",
        "@ApiTags('analytics')",
        "@ApiResponse({ status: 200, description: 'Success', type: SummaryDto })",
        "@ApiResponse({ status: 404, description: 'Not found' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "SummaryDto"
      ],
      "priority": "LOW",
      "module": "analytics"
    },
    {
      "endpoint": {
        "method": "GET",
        "normalized_path": "/analytics/funnel/conversion",
        "path": "/analytics/funnel/conversion",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/analytics/analytics.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/analytics/analytics.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Get conversion' })",
        "@ApiTags('analytics')",
        "@ApiResponse({ status: 200, description: 'Success', type: ConversionDto })",
        "@ApiResponse({ status: 404, description: 'Not found' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "ConversionDto"
      ],
      "priority": "LOW",
      "module": "analytics"
    },
    {
      "endpoint": {
        "method": "GET",
        "normalized_path": "/analytics/funnel/drop-off",
        "path": "/analytics/funnel/drop-off",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/analytics/analytics.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/analytics/analytics.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Get drop-off' })",
        "@ApiTags('analytics')",
        "@ApiResponse({ status: 200, description: 'Success', type: Drop-offDto })",
        "@ApiResponse({ status: 404, description: 'Not found' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "Drop-offDto"
      ],
      "priority": "LOW",
      "module": "analytics"
    },
    {
      "endpoint": {
        "method": "GET",
        "normalized_path": "/analytics/kpis",
        "path": "/analytics/kpis",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/analytics/analytics.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/analytics/analytics.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Get kpis' })",
        "@ApiTags('analytics')",
        "@ApiResponse({ status: 200, description: 'Success', type: KpisDto })",
        "@ApiResponse({ status: 404, description: 'Not found' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "KpisDto"
      ],
      "priority": "LOW",
      "module": "analytics"
    },
    {
      "endpoint": {
        "method": "GET",
        "normalized_path": "/analytics/kpis/real-time",
        "path": "/analytics/kpis/real-time",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/analytics/analytics.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/analytics/analytics.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Get real-time' })",
        "@ApiTags('analytics')",
        "@ApiResponse({ status: 200, description: 'Success', type: Real-timeDto })",
        "@ApiResponse({ status: 404, description: 'Not found' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "Real-timeDto"
      ],
      "priority": "LOW",
      "module": "analytics"
    },
    {
      "endpoint": {
        "method": "GET",
        "normalized_path": "/analytics/kpis/trends",
        "path": "/analytics/kpis/trends",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/analytics/analytics.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/analytics/analytics.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Get trends' })",
        "@ApiTags('analytics')",
        "@ApiResponse({ status: 200, description: 'Success', type: TrendsDto })",
        "@ApiResponse({ status: 404, description: 'Not found' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "TrendsDto"
      ],
      "priority": "LOW",
      "module": "analytics"
    },
    {
      "endpoint": {
        "method": "GET",
        "normalized_path": "/analytics/revenue/breakdown",
        "path": "/analytics/revenue/breakdown",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/analytics/analytics.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/analytics/analytics.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Get breakdown' })",
        "@ApiTags('analytics')",
        "@ApiResponse({ status: 200, description: 'Success', type: BreakdownDto })",
        "@ApiResponse({ status: 404, description: 'Not found' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "BreakdownDto"
      ],
      "priority": "LOW",
      "module": "analytics"
    },
    {
      "endpoint": {
        "method": "GET",
        "normalized_path": "/analytics/revenue/forecast",
        "path": "/analytics/revenue/forecast",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/analytics/analytics.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/analytics/analytics.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Get forecast' })",
        "@ApiTags('analytics')",
        "@ApiResponse({ status: 200, description: 'Success', type: ForecastDto })",
        "@ApiResponse({ status: 404, description: 'Not found' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "ForecastDto"
      ],
      "priority": "LOW",
      "module": "analytics"
    },
    {
      "endpoint": {
        "method": "GET",
        "normalized_path": "/analytics/roas/by-platform",
        "path": "/analytics/roas/by-platform",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/analytics/analytics.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/analytics/analytics.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Get by-platform' })",
        "@ApiTags('analytics')",
        "@ApiResponse({ status: 200, description: 'Success', type: By-platformDto })",
        "@ApiResponse({ status: 404, description: 'Not found' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "By-platformDto"
      ],
      "priority": "LOW",
      "module": "analytics"
    },
    {
      "endpoint": {
        "method": "GET",
        "normalized_path": "/analytics/roas/daily",
        "path": "/analytics/roas/daily",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/analytics/analytics.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/analytics/analytics.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Get daily' })",
        "@ApiTags('analytics')",
        "@ApiResponse({ status: 200, description: 'Success', type: DailyDto })",
        "@ApiResponse({ status: 404, description: 'Not found' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "DailyDto"
      ],
      "priority": "LOW",
      "module": "analytics"
    },
    {
      "endpoint": {
        "method": "GET",
        "normalized_path": "/analytics/roas/summary",
        "path": "/analytics/roas/summary",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/analytics/analytics.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/analytics/analytics.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Get summary' })",
        "@ApiTags('analytics')",
        "@ApiResponse({ status: 200, description: 'Success', type: SummaryDto })",
        "@ApiResponse({ status: 404, description: 'Not found' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "SummaryDto"
      ],
      "priority": "LOW",
      "module": "analytics"
    },
    {
      "endpoint": {
        "method": "GET",
        "normalized_path": "/analytics/users/cohort",
        "path": "/analytics/users/cohort",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/analytics/analytics.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/analytics/analytics.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Get cohort' })",
        "@ApiTags('analytics')",
        "@ApiResponse({ status: 200, description: 'Success', type: CohortDto })",
        "@ApiResponse({ status: 404, description: 'Not found' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "CohortDto"
      ],
      "priority": "MEDIUM",
      "module": "analytics"
    },
    {
      "endpoint": {
        "method": "GET",
        "normalized_path": "/analytics/users/growth",
        "path": "/analytics/users/growth",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/analytics/analytics.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/analytics/analytics.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Get growth' })",
        "@ApiTags('analytics')",
        "@ApiResponse({ status: 200, description: 'Success', type: GrowthDto })",
        "@ApiResponse({ status: 404, description: 'Not found' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "GrowthDto"
      ],
      "priority": "MEDIUM",
      "module": "analytics"
    },
    {
      "endpoint": {
        "method": "GET",
        "normalized_path": "/analytics/users/retention",
        "path": "/analytics/users/retention",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/analytics/analytics.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/analytics/analytics.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Get retention' })",
        "@ApiTags('analytics')",
        "@ApiResponse({ status: 200, description: 'Success', type: RetentionDto })",
        "@ApiResponse({ status: 404, description: 'Not found' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "RetentionDto"
      ],
      "priority": "MEDIUM",
      "module": "analytics"
    },
    {
      "endpoint": {
        "method": "GET",
        "normalized_path": "/auth/consent/check/{param}",
        "path": "/auth/consent/check/:type",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/auth/auth.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/auth/auth.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Get check' })",
        "@ApiTags('auth')",
        "@ApiParam({ name: 'param', description: 'param ID' })",
        "@ApiResponse({ status: 200, description: 'Success', type: CheckDto })",
        "@ApiResponse({ status: 404, description: 'Not found' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "CheckDto"
      ],
      "priority": "HIGH",
      "module": "auth"
    },
    {
      "endpoint": {
        "method": "GET",
        "normalized_path": "/auth/consent/history",
        "path": "/auth/consent/history",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/auth/auth.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/auth/auth.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Get history' })",
        "@ApiTags('auth')",
        "@ApiResponse({ status: 200, description: 'Success', type: HistoryDto })",
        "@ApiResponse({ status: 404, description: 'Not found' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "HistoryDto"
      ],
      "priority": "HIGH",
      "module": "auth"
    },
    {
      "endpoint": {
        "method": "GET",
        "normalized_path": "/auth/consent/summary",
        "path": "/auth/consent/summary",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/auth/auth.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/auth/auth.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Get summary' })",
        "@ApiTags('auth')",
        "@ApiResponse({ status: 200, description: 'Success', type: SummaryDto })",
        "@ApiResponse({ status: 404, description: 'Not found' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "SummaryDto"
      ],
      "priority": "HIGH",
      "module": "auth"
    },
    {
      "endpoint": {
        "method": "GET",
        "normalized_path": "/content/admin/banners",
        "path": "/content/admin/banners",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/content/content.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/content/content.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Get banners' })",
        "@ApiTags('content')",
        "@ApiResponse({ status: 200, description: 'Success', type: BannersDto })",
        "@ApiResponse({ status: 404, description: 'Not found' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "BannersDto"
      ],
      "priority": "HIGH",
      "module": "content"
    },
    {
      "endpoint": {
        "method": "GET",
        "normalized_path": "/content/app-settings",
        "path": "/content/app-settings",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/content/content.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/content/content.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Get app-settings' })",
        "@ApiTags('content')",
        "@ApiResponse({ status: 200, description: 'Success', type: App-settingsDto })",
        "@ApiResponse({ status: 404, description: 'Not found' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "App-settingsDto"
      ],
      "priority": "LOW",
      "module": "content"
    },
    {
      "endpoint": {
        "method": "GET",
        "normalized_path": "/content/banners",
        "path": "/content/banners",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/content/content.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/content/content.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Get banners' })",
        "@ApiTags('content')",
        "@ApiResponse({ status: 200, description: 'Success', type: BannersDto })",
        "@ApiResponse({ status: 404, description: 'Not found' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "BannersDto"
      ],
      "priority": "LOW",
      "module": "content"
    },
    {
      "endpoint": {
        "method": "GET",
        "normalized_path": "/content/faqs",
        "path": "/content/faqs",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/content/content.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/content/content.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Get faqs' })",
        "@ApiTags('content')",
        "@ApiResponse({ status: 200, description: 'Success', type: FaqsDto })",
        "@ApiResponse({ status: 404, description: 'Not found' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "FaqsDto"
      ],
      "priority": "LOW",
      "module": "content"
    },
    {
      "endpoint": {
        "method": "GET",
        "normalized_path": "/content/my-subscription",
        "path": "/content/my-subscription",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/content/content.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/content/content.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Get my-subscription' })",
        "@ApiTags('content')",
        "@ApiResponse({ status: 200, description: 'Success', type: My-subscriptionDto })",
        "@ApiResponse({ status: 404, description: 'Not found' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "My-subscriptionDto"
      ],
      "priority": "LOW",
      "module": "content"
    },
    {
      "endpoint": {
        "method": "GET",
        "normalized_path": "/content/pages",
        "path": "/content/pages",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/content/content.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/content/content.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Get pages' })",
        "@ApiTags('content')",
        "@ApiResponse({ status: 200, description: 'Success', type: PagesDto })",
        "@ApiResponse({ status: 404, description: 'Not found' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "PagesDto"
      ],
      "priority": "LOW",
      "module": "content"
    },
    {
      "endpoint": {
        "method": "GET",
        "normalized_path": "/content/pages/{param}",
        "path": "/content/pages/:slug",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/content/content.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/content/content.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Get pages' })",
        "@ApiTags('content')",
        "@ApiParam({ name: 'param', description: 'param ID' })",
        "@ApiResponse({ status: 200, description: 'Success', type: PagesDto })",
        "@ApiResponse({ status: 404, description: 'Not found' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "PagesDto"
      ],
      "priority": "LOW",
      "module": "content"
    },
    {
      "endpoint": {
        "method": "GET",
        "normalized_path": "/content/stores/{param}/sections",
        "path": "/content/stores/:storeId/sections",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/content/content.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/content/content.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Get sections' })",
        "@ApiTags('content')",
        "@ApiParam({ name: 'param', description: 'param ID' })",
        "@ApiResponse({ status: 200, description: 'Success', type: SectionsDto })",
        "@ApiResponse({ status: 404, description: 'Not found' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "SectionsDto"
      ],
      "priority": "LOW",
      "module": "content"
    },
    {
      "endpoint": {
        "method": "GET",
        "normalized_path": "/content/subscription-plans",
        "path": "/content/subscription-plans",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/content/content.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/content/content.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Get subscription-plans' })",
        "@ApiTags('content')",
        "@ApiResponse({ status: 200, description: 'Success', type: Subscription-plansDto })",
        "@ApiResponse({ status: 404, description: 'Not found' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "Subscription-plansDto"
      ],
      "priority": "LOW",
      "module": "content"
    },
    {
      "endpoint": {
        "method": "GET",
        "normalized_path": "/delivery/cart",
        "path": "/delivery/cart",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/cart/cart.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/cart/cart.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Get cart' })",
        "@ApiTags('cart')",
        "@ApiResponse({ status: 200, description: 'Success', type: CartDto })",
        "@ApiResponse({ status: 404, description: 'Not found' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "CartDto"
      ],
      "priority": "LOW",
      "module": "cart"
    },
    {
      "endpoint": {
        "method": "GET",
        "normalized_path": "/delivery/cart/abandoned",
        "path": "/delivery/cart/abandoned",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/cart/cart.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/cart/cart.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Get abandoned' })",
        "@ApiTags('cart')",
        "@ApiResponse({ status: 200, description: 'Success', type: AbandonedDto })",
        "@ApiResponse({ status: 404, description: 'Not found' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "AbandonedDto"
      ],
      "priority": "LOW",
      "module": "cart"
    },
    {
      "endpoint": {
        "method": "GET",
        "normalized_path": "/delivery/cart/combined",
        "path": "/delivery/cart/combined",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/cart/cart.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/cart/cart.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Get combined' })",
        "@ApiTags('cart')",
        "@ApiResponse({ status: 200, description: 'Success', type: CombinedDto })",
        "@ApiResponse({ status: 404, description: 'Not found' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "CombinedDto"
      ],
      "priority": "LOW",
      "module": "cart"
    },
    {
      "endpoint": {
        "method": "GET",
        "normalized_path": "/delivery/cart/count",
        "path": "/delivery/cart/count",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/cart/cart.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/cart/cart.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Get count' })",
        "@ApiTags('cart')",
        "@ApiResponse({ status: 200, description: 'Success', type: CountDto })",
        "@ApiResponse({ status: 404, description: 'Not found' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "CountDto"
      ],
      "priority": "LOW",
      "module": "cart"
    },
    {
      "endpoint": {
        "method": "GET",
        "normalized_path": "/delivery/cart/fee",
        "path": "/delivery/cart/fee",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/cart/cart.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/cart/cart.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Get fee' })",
        "@ApiTags('cart')",
        "@ApiResponse({ status: 200, description: 'Success', type: FeeDto })",
        "@ApiResponse({ status: 404, description: 'Not found' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "FeeDto"
      ],
      "priority": "LOW",
      "module": "cart"
    },
    {
      "endpoint": {
        "method": "GET",
        "normalized_path": "/delivery/cart/shein",
        "path": "/delivery/cart/shein",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/cart/cart.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/cart/cart.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Get shein' })",
        "@ApiTags('cart')",
        "@ApiResponse({ status: 200, description: 'Success', type: SheinDto })",
        "@ApiResponse({ status: 404, description: 'Not found' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "SheinDto"
      ],
      "priority": "LOW",
      "module": "cart"
    },
    {
      "endpoint": {
        "method": "GET",
        "normalized_path": "/delivery/cart/user/{param}",
        "path": "/delivery/cart/user/:userId",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/cart/cart.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/cart/cart.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Get user' })",
        "@ApiTags('cart')",
        "@ApiParam({ name: 'param', description: 'param ID' })",
        "@ApiResponse({ status: 200, description: 'Success', type: UserDto })",
        "@ApiResponse({ status: 404, description: 'Not found' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "UserDto"
      ],
      "priority": "MEDIUM",
      "module": "cart"
    },
    {
      "endpoint": {
        "method": "GET",
        "normalized_path": "/delivery/cart/{param}",
        "path": "/delivery/cart/:cartId",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/cart/cart.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/cart/cart.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Get cart' })",
        "@ApiTags('cart')",
        "@ApiParam({ name: 'param', description: 'param ID' })",
        "@ApiResponse({ status: 200, description: 'Success', type: CartDto })",
        "@ApiResponse({ status: 404, description: 'Not found' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "CartDto"
      ],
      "priority": "LOW",
      "module": "cart"
    },
    {
      "endpoint": {
        "method": "GET",
        "normalized_path": "/delivery/order/export",
        "path": "/delivery/order/export",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/order/order.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/order/order.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Get export' })",
        "@ApiTags('order')",
        "@ApiResponse({ status: 200, description: 'Success', type: ExportDto })",
        "@ApiResponse({ status: 404, description: 'Not found' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "ExportDto"
      ],
      "priority": "HIGH",
      "module": "order"
    },
    {
      "endpoint": {
        "method": "GET",
        "normalized_path": "/delivery/order/my-orders",
        "path": "/delivery/order/my-orders",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/order/order.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/order/order.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Get my-orders' })",
        "@ApiTags('order')",
        "@ApiResponse({ status: 200, description: 'Success', type: My-ordersDto })",
        "@ApiResponse({ status: 404, description: 'Not found' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "My-ordersDto"
      ],
      "priority": "HIGH",
      "module": "order"
    },
    {
      "endpoint": {
        "method": "GET",
        "normalized_path": "/delivery/order/public/{param}/status",
        "path": "/delivery/order/public/:id/status",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/order/order.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/order/order.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Get status' })",
        "@ApiTags('order')",
        "@ApiParam({ name: 'param', description: 'param ID' })",
        "@ApiResponse({ status: 200, description: 'Success', type: StatusDto })",
        "@ApiResponse({ status: 404, description: 'Not found' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "StatusDto"
      ],
      "priority": "HIGH",
      "module": "order"
    },
    {
      "endpoint": {
        "method": "GET",
        "normalized_path": "/delivery/order/user/{param}",
        "path": "/delivery/order/user/:userId",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/order/order.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/order/order.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Get user' })",
        "@ApiTags('order')",
        "@ApiParam({ name: 'param', description: 'param ID' })",
        "@ApiResponse({ status: 200, description: 'Success', type: UserDto })",
        "@ApiResponse({ status: 404, description: 'Not found' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "UserDto"
      ],
      "priority": "HIGH",
      "module": "order"
    },
    {
      "endpoint": {
        "method": "GET",
        "normalized_path": "/delivery/order/vendor/orders",
        "path": "/delivery/order/vendor/orders",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/order/order.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/order/order.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Get orders' })",
        "@ApiTags('order')",
        "@ApiResponse({ status: 200, description: 'Success', type: OrdersDto })",
        "@ApiResponse({ status: 404, description: 'Not found' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "OrdersDto"
      ],
      "priority": "HIGH",
      "module": "order"
    },
    {
      "endpoint": {
        "method": "GET",
        "normalized_path": "/delivery/order/{param}",
        "path": "/delivery/order/:id",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/order/order.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/order/order.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Get order' })",
        "@ApiTags('order')",
        "@ApiParam({ name: 'param', description: 'param ID' })",
        "@ApiResponse({ status: 200, description: 'Success', type: OrderDto })",
        "@ApiResponse({ status: 404, description: 'Not found' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "OrderDto"
      ],
      "priority": "HIGH",
      "module": "order"
    },
    {
      "endpoint": {
        "method": "GET",
        "normalized_path": "/delivery/order/{param}/delivery-timeline",
        "path": "/delivery/order/:id/delivery-timeline",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/order/order.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/order/order.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Get delivery-timeline' })",
        "@ApiTags('order')",
        "@ApiParam({ name: 'param', description: 'param ID' })",
        "@ApiResponse({ status: 200, description: 'Success', type: Delivery-timelineDto })",
        "@ApiResponse({ status: 404, description: 'Not found' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "Delivery-timelineDto"
      ],
      "priority": "HIGH",
      "module": "order"
    },
    {
      "endpoint": {
        "method": "GET",
        "normalized_path": "/delivery/order/{param}/driver-eta",
        "path": "/delivery/order/:id/driver-eta",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/order/order.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/order/order.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Get driver-eta' })",
        "@ApiTags('order')",
        "@ApiParam({ name: 'param', description: 'param ID' })",
        "@ApiResponse({ status: 200, description: 'Success', type: Driver-etaDto })",
        "@ApiResponse({ status: 404, description: 'Not found' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "Driver-etaDto"
      ],
      "priority": "HIGH",
      "module": "order"
    },
    {
      "endpoint": {
        "method": "GET",
        "normalized_path": "/delivery/order/{param}/live-tracking",
        "path": "/delivery/order/:id/live-tracking",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/order/order.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/order/order.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Get live-tracking' })",
        "@ApiTags('order')",
        "@ApiParam({ name: 'param', description: 'param ID' })",
        "@ApiResponse({ status: 200, description: 'Success', type: Live-trackingDto })",
        "@ApiResponse({ status: 404, description: 'Not found' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "Live-trackingDto"
      ],
      "priority": "HIGH",
      "module": "order"
    },
    {
      "endpoint": {
        "method": "GET",
        "normalized_path": "/delivery/order/{param}/notes",
        "path": "/delivery/order/:id/notes",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/order/order.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/order/order.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Get notes' })",
        "@ApiTags('order')",
        "@ApiParam({ name: 'param', description: 'param ID' })",
        "@ApiResponse({ status: 200, description: 'Success', type: NotesDto })",
        "@ApiResponse({ status: 404, description: 'Not found' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "NotesDto"
      ],
      "priority": "HIGH",
      "module": "order"
    },
    {
      "endpoint": {
        "method": "GET",
        "normalized_path": "/delivery/order/{param}/pod",
        "path": "/delivery/order/:id/pod",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/order/order.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/order/order.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Get pod' })",
        "@ApiTags('order')",
        "@ApiParam({ name: 'param', description: 'param ID' })",
        "@ApiResponse({ status: 200, description: 'Success', type: PodDto })",
        "@ApiResponse({ status: 404, description: 'Not found' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "PodDto"
      ],
      "priority": "HIGH",
      "module": "order"
    },
    {
      "endpoint": {
        "method": "GET",
        "normalized_path": "/delivery/order/{param}/route-history",
        "path": "/delivery/order/:id/route-history",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/order/order.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/order/order.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Get route-history' })",
        "@ApiTags('order')",
        "@ApiParam({ name: 'param', description: 'param ID' })",
        "@ApiResponse({ status: 200, description: 'Success', type: Route-historyDto })",
        "@ApiResponse({ status: 404, description: 'Not found' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "Route-historyDto"
      ],
      "priority": "HIGH",
      "module": "order"
    },
    {
      "endpoint": {
        "method": "GET",
        "normalized_path": "/delivery/order/{param}/tracking",
        "path": "/delivery/order/:id/tracking",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/order/order.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/order/order.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Get tracking' })",
        "@ApiTags('order')",
        "@ApiParam({ name: 'param', description: 'param ID' })",
        "@ApiResponse({ status: 200, description: 'Success', type: TrackingDto })",
        "@ApiResponse({ status: 404, description: 'Not found' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "TrackingDto"
      ],
      "priority": "HIGH",
      "module": "order"
    },
    {
      "endpoint": {
        "method": "GET",
        "normalized_path": "/delivery/stores/search",
        "path": "/delivery/stores/search",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/store/delivery-store.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/store/delivery-store.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Get search' })",
        "@ApiTags('store')",
        "@ApiResponse({ status: 200, description: 'Success', type: SearchDto })",
        "@ApiResponse({ status: 404, description: 'Not found' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "SearchDto"
      ],
      "priority": "LOW",
      "module": "store"
    },
    {
      "endpoint": {
        "method": "GET",
        "normalized_path": "/delivery/stores/{param}",
        "path": "/delivery/stores/:id",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/store/delivery-store.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/store/delivery-store.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Get stores' })",
        "@ApiTags('store')",
        "@ApiParam({ name: 'param', description: 'param ID' })",
        "@ApiResponse({ status: 200, description: 'Success', type: StoresDto })",
        "@ApiResponse({ status: 404, description: 'Not found' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "StoresDto"
      ],
      "priority": "LOW",
      "module": "store"
    },
    {
      "endpoint": {
        "method": "GET",
        "normalized_path": "/delivery/stores/{param}/products",
        "path": "/delivery/stores/:id/products",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/store/delivery-store.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/store/delivery-store.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Get products' })",
        "@ApiTags('store')",
        "@ApiParam({ name: 'param', description: 'param ID' })",
        "@ApiResponse({ status: 200, description: 'Success', type: ProductsDto })",
        "@ApiResponse({ status: 404, description: 'Not found' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "ProductsDto"
      ],
      "priority": "LOW",
      "module": "store"
    },
    {
      "endpoint": {
        "method": "GET",
        "normalized_path": "/delivery/stores/{param}/reviews",
        "path": "/delivery/stores/:id/reviews",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/store/delivery-store.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/store/delivery-store.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Get reviews' })",
        "@ApiTags('store')",
        "@ApiParam({ name: 'param', description: 'param ID' })",
        "@ApiResponse({ status: 200, description: 'Success', type: ReviewsDto })",
        "@ApiResponse({ status: 404, description: 'Not found' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "ReviewsDto"
      ],
      "priority": "LOW",
      "module": "store"
    },
    {
      "endpoint": {
        "method": "GET",
        "normalized_path": "/delivery/stores/{param}/statistics",
        "path": "/delivery/stores/:id/statistics",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/store/delivery-store.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/store/delivery-store.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Get statistics' })",
        "@ApiTags('store')",
        "@ApiParam({ name: 'param', description: 'param ID' })",
        "@ApiResponse({ status: 200, description: 'Success', type: StatisticsDto })",
        "@ApiResponse({ status: 404, description: 'Not found' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "StatisticsDto"
      ],
      "priority": "LOW",
      "module": "store"
    },
    {
      "endpoint": {
        "method": "GET",
        "normalized_path": "/drivers/available",
        "path": "/drivers/available",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/driver/driver.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/driver/driver.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Get available' })",
        "@ApiTags('driver')",
        "@ApiResponse({ status: 200, description: 'Success', type: AvailableDto })",
        "@ApiResponse({ status: 404, description: 'Not found' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "AvailableDto"
      ],
      "priority": "MEDIUM",
      "module": "driver"
    },
    {
      "endpoint": {
        "method": "GET",
        "normalized_path": "/drivers/earnings/daily",
        "path": "/drivers/earnings/daily",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/driver/driver.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/driver/driver.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Get daily' })",
        "@ApiTags('driver')",
        "@ApiResponse({ status: 200, description: 'Success', type: DailyDto })",
        "@ApiResponse({ status: 404, description: 'Not found' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "DailyDto"
      ],
      "priority": "MEDIUM",
      "module": "driver"
    },
    {
      "endpoint": {
        "method": "GET",
        "normalized_path": "/drivers/earnings/weekly",
        "path": "/drivers/earnings/weekly",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/driver/driver.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/driver/driver.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Get weekly' })",
        "@ApiTags('driver')",
        "@ApiResponse({ status: 200, description: 'Success', type: WeeklyDto })",
        "@ApiResponse({ status: 404, description: 'Not found' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "WeeklyDto"
      ],
      "priority": "MEDIUM",
      "module": "driver"
    },
    {
      "endpoint": {
        "method": "GET",
        "normalized_path": "/drivers/orders/history",
        "path": "/drivers/orders/history",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/driver/driver.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/driver/driver.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Get history' })",
        "@ApiTags('driver')",
        "@ApiResponse({ status: 200, description: 'Success', type: HistoryDto })",
        "@ApiResponse({ status: 404, description: 'Not found' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "HistoryDto"
      ],
      "priority": "HIGH",
      "module": "driver"
    },
    {
      "endpoint": {
        "method": "GET",
        "normalized_path": "/drivers/vacations/my",
        "path": "/drivers/vacations/my",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/driver/driver.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/driver/driver.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Get my' })",
        "@ApiTags('driver')",
        "@ApiResponse({ status: 200, description: 'Success', type: MyDto })",
        "@ApiResponse({ status: 404, description: 'Not found' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "MyDto"
      ],
      "priority": "MEDIUM",
      "module": "driver"
    },
    {
      "endpoint": {
        "method": "GET",
        "normalized_path": "/drivers/vacations/policy",
        "path": "/drivers/vacations/policy",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/driver/driver.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/driver/driver.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Get policy' })",
        "@ApiTags('driver')",
        "@ApiResponse({ status: 200, description: 'Success', type: PolicyDto })",
        "@ApiResponse({ status: 404, description: 'Not found' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "PolicyDto"
      ],
      "priority": "MEDIUM",
      "module": "driver"
    },
    {
      "endpoint": {
        "method": "GET",
        "normalized_path": "/drivers/{param}",
        "path": "/drivers/:id",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/driver/driver.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/driver/driver.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Get drivers' })",
        "@ApiTags('driver')",
        "@ApiParam({ name: 'param', description: 'param ID' })",
        "@ApiResponse({ status: 200, description: 'Success', type: DriversDto })",
        "@ApiResponse({ status: 404, description: 'Not found' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "DriversDto"
      ],
      "priority": "MEDIUM",
      "module": "driver"
    },
    {
      "endpoint": {
        "method": "GET",
        "normalized_path": "/drivers/{param}/documents",
        "path": "/drivers/:driverId/documents",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/driver/driver.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/driver/driver.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Get documents' })",
        "@ApiTags('driver')",
        "@ApiParam({ name: 'param', description: 'param ID' })",
        "@ApiResponse({ status: 200, description: 'Success', type: DocumentsDto })",
        "@ApiResponse({ status: 404, description: 'Not found' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "DocumentsDto"
      ],
      "priority": "MEDIUM",
      "module": "driver"
    },
    {
      "endpoint": {
        "method": "GET",
        "normalized_path": "/er/accounts",
        "path": "/er/accounts",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/er/er.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/er/er.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Get accounts' })",
        "@ApiTags('er')",
        "@ApiResponse({ status: 200, description: 'Success', type: AccountsDto })",
        "@ApiResponse({ status: 404, description: 'Not found' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "AccountsDto"
      ],
      "priority": "LOW",
      "module": "er"
    },
    {
      "endpoint": {
        "method": "GET",
        "normalized_path": "/er/accounts/{param}",
        "path": "/er/accounts/:id",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/er/er.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/er/er.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Get accounts' })",
        "@ApiTags('er')",
        "@ApiParam({ name: 'param', description: 'param ID' })",
        "@ApiResponse({ status: 200, description: 'Success', type: AccountsDto })",
        "@ApiResponse({ status: 404, description: 'Not found' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "AccountsDto"
      ],
      "priority": "LOW",
      "module": "er"
    },
    {
      "endpoint": {
        "method": "GET",
        "normalized_path": "/er/attendance/{param}",
        "path": "/er/attendance/:employeeId",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/er/er.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/er/er.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Get attendance' })",
        "@ApiTags('er')",
        "@ApiParam({ name: 'param', description: 'param ID' })",
        "@ApiResponse({ status: 200, description: 'Success', type: AttendanceDto })",
        "@ApiResponse({ status: 404, description: 'Not found' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "AttendanceDto"
      ],
      "priority": "LOW",
      "module": "er"
    },
    {
      "endpoint": {
        "method": "GET",
        "normalized_path": "/er/employees",
        "path": "/er/employees",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/er/er.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/er/er.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Get employees' })",
        "@ApiTags('er')",
        "@ApiResponse({ status: 200, description: 'Success', type: EmployeesDto })",
        "@ApiResponse({ status: 404, description: 'Not found' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "EmployeesDto"
      ],
      "priority": "LOW",
      "module": "er"
    },
    {
      "endpoint": {
        "method": "GET",
        "normalized_path": "/er/employees/{param}",
        "path": "/er/employees/:id",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/er/er.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/er/er.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Get employees' })",
        "@ApiTags('er')",
        "@ApiParam({ name: 'param', description: 'param ID' })",
        "@ApiResponse({ status: 200, description: 'Success', type: EmployeesDto })",
        "@ApiResponse({ status: 404, description: 'Not found' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "EmployeesDto"
      ],
      "priority": "LOW",
      "module": "er"
    },
    {
      "endpoint": {
        "method": "GET",
        "normalized_path": "/er/journal-entries",
        "path": "/er/journal-entries",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/er/er.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/er/er.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Get journal-entries' })",
        "@ApiTags('er')",
        "@ApiResponse({ status: 200, description: 'Success', type: Journal-entriesDto })",
        "@ApiResponse({ status: 404, description: 'Not found' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "Journal-entriesDto"
      ],
      "priority": "LOW",
      "module": "er"
    },
    {
      "endpoint": {
        "method": "GET",
        "normalized_path": "/er/reports/trial-balance",
        "path": "/er/reports/trial-balance",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/er/er.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/er/er.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Get trial-balance' })",
        "@ApiTags('er')",
        "@ApiResponse({ status: 200, description: 'Success', type: Trial-balanceDto })",
        "@ApiResponse({ status: 404, description: 'Not found' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "Trial-balanceDto"
      ],
      "priority": "LOW",
      "module": "er"
    },
    {
      "endpoint": {
        "method": "GET",
        "normalized_path": "/finance/commission-plans",
        "path": "/finance/commission-plans",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/finance/finance.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/finance/finance.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Get commission-plans' })",
        "@ApiTags('finance')",
        "@ApiResponse({ status: 200, description: 'Success', type: Commission-plansDto })",
        "@ApiResponse({ status: 404, description: 'Not found' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "Commission-plansDto"
      ],
      "priority": "LOW",
      "module": "finance"
    },
    {
      "endpoint": {
        "method": "GET",
        "normalized_path": "/finance/commissions/my",
        "path": "/finance/commissions/my",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/finance/finance.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/finance/finance.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Get my' })",
        "@ApiTags('finance')",
        "@ApiResponse({ status: 200, description: 'Success', type: MyDto })",
        "@ApiResponse({ status: 404, description: 'Not found' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "MyDto"
      ],
      "priority": "LOW",
      "module": "finance"
    },
    {
      "endpoint": {
        "method": "GET",
        "normalized_path": "/finance/commissions/stats/my",
        "path": "/finance/commissions/stats/my",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/finance/finance.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/finance/finance.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Get my' })",
        "@ApiTags('finance')",
        "@ApiResponse({ status: 200, description: 'Success', type: MyDto })",
        "@ApiResponse({ status: 404, description: 'Not found' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "MyDto"
      ],
      "priority": "LOW",
      "module": "finance"
    },
    {
      "endpoint": {
        "method": "GET",
        "normalized_path": "/finance/coupons",
        "path": "/finance/coupons",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/finance/finance.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/finance/finance.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Get coupons' })",
        "@ApiTags('finance')",
        "@ApiResponse({ status: 200, description: 'Success', type: CouponsDto })",
        "@ApiResponse({ status: 404, description: 'Not found' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "CouponsDto"
      ],
      "priority": "LOW",
      "module": "finance"
    },
    {
      "endpoint": {
        "method": "GET",
        "normalized_path": "/finance/payouts/batches",
        "path": "/finance/payouts/batches",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/finance/finance.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/finance/finance.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Get batches' })",
        "@ApiTags('finance')",
        "@ApiResponse({ status: 200, description: 'Success', type: BatchesDto })",
        "@ApiResponse({ status: 404, description: 'Not found' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "BatchesDto"
      ],
      "priority": "LOW",
      "module": "finance"
    },
    {
      "endpoint": {
        "method": "GET",
        "normalized_path": "/finance/payouts/batches/{param}",
        "path": "/finance/payouts/batches/:id",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/finance/finance.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/finance/finance.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Get batches' })",
        "@ApiTags('finance')",
        "@ApiParam({ name: 'param', description: 'param ID' })",
        "@ApiResponse({ status: 200, description: 'Success', type: BatchesDto })",
        "@ApiResponse({ status: 404, description: 'Not found' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "BatchesDto"
      ],
      "priority": "LOW",
      "module": "finance"
    },
    {
      "endpoint": {
        "method": "GET",
        "normalized_path": "/finance/payouts/batches/{param}/items",
        "path": "/finance/payouts/batches/:id/items",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/finance/finance.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/finance/finance.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Get items' })",
        "@ApiTags('finance')",
        "@ApiParam({ name: 'param', description: 'param ID' })",
        "@ApiResponse({ status: 200, description: 'Success', type: ItemsDto })",
        "@ApiResponse({ status: 404, description: 'Not found' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "ItemsDto"
      ],
      "priority": "LOW",
      "module": "finance"
    },
    {
      "endpoint": {
        "method": "GET",
        "normalized_path": "/finance/reconciliations",
        "path": "/finance/reconciliations",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/finance/finance.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/finance/finance.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Get reconciliations' })",
        "@ApiTags('finance')",
        "@ApiResponse({ status: 200, description: 'Success', type: ReconciliationsDto })",
        "@ApiResponse({ status: 404, description: 'Not found' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "ReconciliationsDto"
      ],
      "priority": "LOW",
      "module": "finance"
    },
    {
      "endpoint": {
        "method": "GET",
        "normalized_path": "/finance/reconciliations/{param}",
        "path": "/finance/reconciliations/:id",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/finance/finance.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/finance/finance.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Get reconciliations' })",
        "@ApiTags('finance')",
        "@ApiParam({ name: 'param', description: 'param ID' })",
        "@ApiResponse({ status: 200, description: 'Success', type: ReconciliationsDto })",
        "@ApiResponse({ status: 404, description: 'Not found' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "ReconciliationsDto"
      ],
      "priority": "LOW",
      "module": "finance"
    },
    {
      "endpoint": {
        "method": "GET",
        "normalized_path": "/finance/reports",
        "path": "/finance/reports",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/finance/finance.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/finance/finance.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Get reports' })",
        "@ApiTags('finance')",
        "@ApiResponse({ status: 200, description: 'Success', type: ReportsDto })",
        "@ApiResponse({ status: 404, description: 'Not found' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "ReportsDto"
      ],
      "priority": "LOW",
      "module": "finance"
    },
    {
      "endpoint": {
        "method": "GET",
        "normalized_path": "/finance/reports/daily/{param}",
        "path": "/finance/reports/daily/:date",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/finance/finance.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/finance/finance.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Get daily' })",
        "@ApiTags('finance')",
        "@ApiParam({ name: 'param', description: 'param ID' })",
        "@ApiResponse({ status: 200, description: 'Success', type: DailyDto })",
        "@ApiResponse({ status: 404, description: 'Not found' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "DailyDto"
      ],
      "priority": "LOW",
      "module": "finance"
    },
    {
      "endpoint": {
        "method": "GET",
        "normalized_path": "/finance/settlements/entity/{param}",
        "path": "/finance/settlements/entity/:entityId",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/finance/finance.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/finance/finance.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Get entity' })",
        "@ApiTags('finance')",
        "@ApiParam({ name: 'param', description: 'param ID' })",
        "@ApiResponse({ status: 200, description: 'Success', type: EntityDto })",
        "@ApiResponse({ status: 404, description: 'Not found' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "EntityDto"
      ],
      "priority": "LOW",
      "module": "finance"
    },
    {
      "endpoint": {
        "method": "GET",
        "normalized_path": "/finance/settlements/{param}",
        "path": "/finance/settlements/:id",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/finance/finance.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/finance/finance.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Get settlements' })",
        "@ApiTags('finance')",
        "@ApiParam({ name: 'param', description: 'param ID' })",
        "@ApiResponse({ status: 200, description: 'Success', type: SettlementsDto })",
        "@ApiResponse({ status: 404, description: 'Not found' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "SettlementsDto"
      ],
      "priority": "LOW",
      "module": "finance"
    },
    {
      "endpoint": {
        "method": "GET",
        "normalized_path": "/health",
        "path": "/health",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/health/health.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/health/health.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Get health' })",
        "@ApiTags('health')",
        "@ApiResponse({ status: 200, description: 'Success', type: HealthDto })",
        "@ApiResponse({ status: 404, description: 'Not found' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "HealthDto"
      ],
      "priority": "LOW",
      "module": "health"
    },
    {
      "endpoint": {
        "method": "GET",
        "normalized_path": "/health/advanced",
        "path": "/health/advanced",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/health/health.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/health/health.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Get advanced' })",
        "@ApiTags('health')",
        "@ApiResponse({ status: 200, description: 'Success', type: AdvancedDto })",
        "@ApiResponse({ status: 404, description: 'Not found' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "AdvancedDto"
      ],
      "priority": "LOW",
      "module": "health"
    },
    {
      "endpoint": {
        "method": "GET",
        "normalized_path": "/health/detailed",
        "path": "/health/detailed",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/health/health.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/health/health.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Get detailed' })",
        "@ApiTags('health')",
        "@ApiResponse({ status: 200, description: 'Success', type: DetailedDto })",
        "@ApiResponse({ status: 404, description: 'Not found' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "DetailedDto"
      ],
      "priority": "LOW",
      "module": "health"
    },
    {
      "endpoint": {
        "method": "GET",
        "normalized_path": "/health/info",
        "path": "/health/info",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/health/health.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/health/health.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Get info' })",
        "@ApiTags('health')",
        "@ApiResponse({ status: 200, description: 'Success', type: InfoDto })",
        "@ApiResponse({ status: 404, description: 'Not found' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "InfoDto"
      ],
      "priority": "LOW",
      "module": "health"
    },
    {
      "endpoint": {
        "method": "GET",
        "normalized_path": "/health/liveness",
        "path": "/health/liveness",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/health/health.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/health/health.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Get liveness' })",
        "@ApiTags('health')",
        "@ApiResponse({ status: 200, description: 'Success', type: LivenessDto })",
        "@ApiResponse({ status: 404, description: 'Not found' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "LivenessDto"
      ],
      "priority": "LOW",
      "module": "health"
    },
    {
      "endpoint": {
        "method": "GET",
        "normalized_path": "/health/metrics",
        "path": "/health/metrics",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/health/health.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/health/health.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Get metrics' })",
        "@ApiTags('health')",
        "@ApiResponse({ status: 200, description: 'Success', type: MetricsDto })",
        "@ApiResponse({ status: 404, description: 'Not found' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "MetricsDto"
      ],
      "priority": "LOW",
      "module": "health"
    },
    {
      "endpoint": {
        "method": "GET",
        "normalized_path": "/health/readiness",
        "path": "/health/readiness",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/health/health.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/health/health.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Get readiness' })",
        "@ApiTags('health')",
        "@ApiResponse({ status: 200, description: 'Success', type: ReadinessDto })",
        "@ApiResponse({ status: 404, description: 'Not found' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "ReadinessDto"
      ],
      "priority": "LOW",
      "module": "health"
    },
    {
      "endpoint": {
        "method": "GET",
        "normalized_path": "/health/startup",
        "path": "/health/startup",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/health/health.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/health/health.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Get startup' })",
        "@ApiTags('health')",
        "@ApiResponse({ status: 200, description: 'Success', type: StartupDto })",
        "@ApiResponse({ status: 404, description: 'Not found' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "StartupDto"
      ],
      "priority": "LOW",
      "module": "health"
    },
    {
      "endpoint": {
        "method": "GET",
        "normalized_path": "/legal/admin/consent/statistics",
        "path": "/legal/admin/consent/statistics",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/legal/legal.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/legal/legal.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Get statistics' })",
        "@ApiTags('legal')",
        "@ApiResponse({ status: 200, description: 'Success', type: StatisticsDto })",
        "@ApiResponse({ status: 404, description: 'Not found' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "StatisticsDto"
      ],
      "priority": "HIGH",
      "module": "legal"
    },
    {
      "endpoint": {
        "method": "GET",
        "normalized_path": "/legal/admin/privacy-policies",
        "path": "/legal/admin/privacy-policies",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/legal/legal.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/legal/legal.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Get privacy-policies' })",
        "@ApiTags('legal')",
        "@ApiResponse({ status: 200, description: 'Success', type: Privacy-policiesDto })",
        "@ApiResponse({ status: 404, description: 'Not found' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "Privacy-policiesDto"
      ],
      "priority": "HIGH",
      "module": "legal"
    },
    {
      "endpoint": {
        "method": "GET",
        "normalized_path": "/legal/admin/terms-of-service",
        "path": "/legal/admin/terms-of-service",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/legal/legal.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/legal/legal.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Get terms-of-service' })",
        "@ApiTags('legal')",
        "@ApiResponse({ status: 200, description: 'Success', type: Terms-of-serviceDto })",
        "@ApiResponse({ status: 404, description: 'Not found' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "Terms-of-serviceDto"
      ],
      "priority": "HIGH",
      "module": "legal"
    },
    {
      "endpoint": {
        "method": "GET",
        "normalized_path": "/legal/consent/check/{param}",
        "path": "/legal/consent/check/:type",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/legal/legal.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/legal/legal.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Get check' })",
        "@ApiTags('legal')",
        "@ApiParam({ name: 'param', description: 'param ID' })",
        "@ApiResponse({ status: 200, description: 'Success', type: CheckDto })",
        "@ApiResponse({ status: 404, description: 'Not found' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "CheckDto"
      ],
      "priority": "LOW",
      "module": "legal"
    },
    {
      "endpoint": {
        "method": "GET",
        "normalized_path": "/legal/consent/my",
        "path": "/legal/consent/my",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/legal/legal.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/legal/legal.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Get my' })",
        "@ApiTags('legal')",
        "@ApiResponse({ status: 200, description: 'Success', type: MyDto })",
        "@ApiResponse({ status: 404, description: 'Not found' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "MyDto"
      ],
      "priority": "LOW",
      "module": "legal"
    },
    {
      "endpoint": {
        "method": "GET",
        "normalized_path": "/legal/privacy-policy",
        "path": "/legal/privacy-policy",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/legal/legal.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/legal/legal.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Get privacy-policy' })",
        "@ApiTags('legal')",
        "@ApiResponse({ status: 200, description: 'Success', type: Privacy-policyDto })",
        "@ApiResponse({ status: 404, description: 'Not found' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "Privacy-policyDto"
      ],
      "priority": "LOW",
      "module": "legal"
    },
    {
      "endpoint": {
        "method": "GET",
        "normalized_path": "/legal/terms-of-service",
        "path": "/legal/terms-of-service",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/legal/legal.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/legal/legal.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Get terms-of-service' })",
        "@ApiTags('legal')",
        "@ApiResponse({ status: 200, description: 'Success', type: Terms-of-serviceDto })",
        "@ApiResponse({ status: 404, description: 'Not found' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "Terms-of-serviceDto"
      ],
      "priority": "LOW",
      "module": "legal"
    },
    {
      "endpoint": {
        "method": "GET",
        "normalized_path": "/marketer/commissions/my",
        "path": "/marketer/commissions/my",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/marketer/marketer.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/marketer/marketer.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Get my' })",
        "@ApiTags('marketer')",
        "@ApiResponse({ status: 200, description: 'Success', type: MyDto })",
        "@ApiResponse({ status: 404, description: 'Not found' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "MyDto"
      ],
      "priority": "LOW",
      "module": "marketer"
    },
    {
      "endpoint": {
        "method": "GET",
        "normalized_path": "/marketer/commissions/pending",
        "path": "/marketer/commissions/pending",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/marketer/marketer.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/marketer/marketer.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Get pending' })",
        "@ApiTags('marketer')",
        "@ApiResponse({ status: 200, description: 'Success', type: PendingDto })",
        "@ApiResponse({ status: 404, description: 'Not found' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "PendingDto"
      ],
      "priority": "LOW",
      "module": "marketer"
    },
    {
      "endpoint": {
        "method": "GET",
        "normalized_path": "/marketer/commissions/statistics",
        "path": "/marketer/commissions/statistics",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/marketer/marketer.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/marketer/marketer.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Get statistics' })",
        "@ApiTags('marketer')",
        "@ApiResponse({ status: 200, description: 'Success', type: StatisticsDto })",
        "@ApiResponse({ status: 404, description: 'Not found' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "StatisticsDto"
      ],
      "priority": "LOW",
      "module": "marketer"
    },
    {
      "endpoint": {
        "method": "GET",
        "normalized_path": "/marketer/earnings",
        "path": "/marketer/earnings",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/marketer/marketer.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/marketer/marketer.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Get earnings' })",
        "@ApiTags('marketer')",
        "@ApiResponse({ status: 200, description: 'Success', type: EarningsDto })",
        "@ApiResponse({ status: 404, description: 'Not found' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "EarningsDto"
      ],
      "priority": "LOW",
      "module": "marketer"
    },
    {
      "endpoint": {
        "method": "GET",
        "normalized_path": "/marketer/earnings/breakdown",
        "path": "/marketer/earnings/breakdown",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/marketer/marketer.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/marketer/marketer.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Get breakdown' })",
        "@ApiTags('marketer')",
        "@ApiResponse({ status: 200, description: 'Success', type: BreakdownDto })",
        "@ApiResponse({ status: 404, description: 'Not found' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "BreakdownDto"
      ],
      "priority": "LOW",
      "module": "marketer"
    },
    {
      "endpoint": {
        "method": "GET",
        "normalized_path": "/marketer/files",
        "path": "/marketer/files",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/marketer/marketer.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/marketer/marketer.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Get files' })",
        "@ApiTags('marketer')",
        "@ApiResponse({ status: 200, description: 'Success', type: FilesDto })",
        "@ApiResponse({ status: 404, description: 'Not found' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "FilesDto"
      ],
      "priority": "LOW",
      "module": "marketer"
    },
    {
      "endpoint": {
        "method": "GET",
        "normalized_path": "/marketer/notifications",
        "path": "/marketer/notifications",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/marketer/marketer.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/marketer/marketer.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Get notifications' })",
        "@ApiTags('marketer')",
        "@ApiResponse({ status: 200, description: 'Success', type: NotificationsDto })",
        "@ApiResponse({ status: 404, description: 'Not found' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "NotificationsDto"
      ],
      "priority": "LOW",
      "module": "marketer"
    },
    {
      "endpoint": {
        "method": "GET",
        "normalized_path": "/marketer/overview",
        "path": "/marketer/overview",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/marketer/marketer.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/marketer/marketer.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Get overview' })",
        "@ApiTags('marketer')",
        "@ApiResponse({ status: 200, description: 'Success', type: OverviewDto })",
        "@ApiResponse({ status: 404, description: 'Not found' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "OverviewDto"
      ],
      "priority": "LOW",
      "module": "marketer"
    },
    {
      "endpoint": {
        "method": "GET",
        "normalized_path": "/marketer/profile",
        "path": "/marketer/profile",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/marketer/marketer.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/marketer/marketer.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Get profile' })",
        "@ApiTags('marketer')",
        "@ApiResponse({ status: 200, description: 'Success', type: ProfileDto })",
        "@ApiResponse({ status: 404, description: 'Not found' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "ProfileDto"
      ],
      "priority": "LOW",
      "module": "marketer"
    },
    {
      "endpoint": {
        "method": "GET",
        "normalized_path": "/marketer/referrals/my",
        "path": "/marketer/referrals/my",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/marketer/marketer.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/marketer/marketer.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Get my' })",
        "@ApiTags('marketer')",
        "@ApiResponse({ status: 200, description: 'Success', type: MyDto })",
        "@ApiResponse({ status: 404, description: 'Not found' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "MyDto"
      ],
      "priority": "LOW",
      "module": "marketer"
    },
    {
      "endpoint": {
        "method": "GET",
        "normalized_path": "/marketer/referrals/statistics",
        "path": "/marketer/referrals/statistics",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/marketer/marketer.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/marketer/marketer.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Get statistics' })",
        "@ApiTags('marketer')",
        "@ApiResponse({ status: 200, description: 'Success', type: StatisticsDto })",
        "@ApiResponse({ status: 404, description: 'Not found' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "StatisticsDto"
      ],
      "priority": "LOW",
      "module": "marketer"
    },
    {
      "endpoint": {
        "method": "GET",
        "normalized_path": "/marketer/statistics/month",
        "path": "/marketer/statistics/month",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/marketer/marketer.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/marketer/marketer.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Get month' })",
        "@ApiTags('marketer')",
        "@ApiResponse({ status: 200, description: 'Success', type: MonthDto })",
        "@ApiResponse({ status: 404, description: 'Not found' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "MonthDto"
      ],
      "priority": "LOW",
      "module": "marketer"
    },
    {
      "endpoint": {
        "method": "GET",
        "normalized_path": "/marketer/statistics/today",
        "path": "/marketer/statistics/today",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/marketer/marketer.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/marketer/marketer.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Get today' })",
        "@ApiTags('marketer')",
        "@ApiResponse({ status: 200, description: 'Success', type: TodayDto })",
        "@ApiResponse({ status: 404, description: 'Not found' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "TodayDto"
      ],
      "priority": "LOW",
      "module": "marketer"
    },
    {
      "endpoint": {
        "method": "GET",
        "normalized_path": "/marketer/stores/my",
        "path": "/marketer/stores/my",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/marketer/marketer.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/marketer/marketer.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Get my' })",
        "@ApiTags('marketer')",
        "@ApiResponse({ status: 200, description: 'Success', type: MyDto })",
        "@ApiResponse({ status: 404, description: 'Not found' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "MyDto"
      ],
      "priority": "LOW",
      "module": "marketer"
    },
    {
      "endpoint": {
        "method": "GET",
        "normalized_path": "/marketer/stores/{param}",
        "path": "/marketer/stores/:id",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/marketer/marketer.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/marketer/marketer.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Get stores' })",
        "@ApiTags('marketer')",
        "@ApiParam({ name: 'param', description: 'param ID' })",
        "@ApiResponse({ status: 200, description: 'Success', type: StoresDto })",
        "@ApiResponse({ status: 404, description: 'Not found' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "StoresDto"
      ],
      "priority": "LOW",
      "module": "marketer"
    },
    {
      "endpoint": {
        "method": "GET",
        "normalized_path": "/marketer/stores/{param}/performance",
        "path": "/marketer/stores/:id/performance",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/marketer/marketer.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/marketer/marketer.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Get performance' })",
        "@ApiTags('marketer')",
        "@ApiParam({ name: 'param', description: 'param ID' })",
        "@ApiResponse({ status: 200, description: 'Success', type: PerformanceDto })",
        "@ApiResponse({ status: 404, description: 'Not found' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "PerformanceDto"
      ],
      "priority": "LOW",
      "module": "marketer"
    },
    {
      "endpoint": {
        "method": "GET",
        "normalized_path": "/marketer/territory/stats",
        "path": "/marketer/territory/stats",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/marketer/marketer.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/marketer/marketer.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Get stats' })",
        "@ApiTags('marketer')",
        "@ApiResponse({ status: 200, description: 'Success', type: StatsDto })",
        "@ApiResponse({ status: 404, description: 'Not found' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "StatsDto"
      ],
      "priority": "LOW",
      "module": "marketer"
    },
    {
      "endpoint": {
        "method": "GET",
        "normalized_path": "/marketer/vendors/my",
        "path": "/marketer/vendors/my",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/marketer/marketer.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/marketer/marketer.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Get my' })",
        "@ApiTags('marketer')",
        "@ApiResponse({ status: 200, description: 'Success', type: MyDto })",
        "@ApiResponse({ status: 404, description: 'Not found' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "MyDto"
      ],
      "priority": "MEDIUM",
      "module": "marketer"
    },
    {
      "endpoint": {
        "method": "GET",
        "normalized_path": "/marketer/vendors/{param}",
        "path": "/marketer/vendors/:id",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/marketer/marketer.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/marketer/marketer.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Get vendors' })",
        "@ApiTags('marketer')",
        "@ApiParam({ name: 'param', description: 'param ID' })",
        "@ApiResponse({ status: 200, description: 'Success', type: VendorsDto })",
        "@ApiResponse({ status: 404, description: 'Not found' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "VendorsDto"
      ],
      "priority": "MEDIUM",
      "module": "marketer"
    },
    {
      "endpoint": {
        "method": "GET",
        "normalized_path": "/merchant",
        "path": "/merchant",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/merchant/merchant.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/merchant/merchant.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Get merchant' })",
        "@ApiTags('merchant')",
        "@ApiResponse({ status: 200, description: 'Success', type: MerchantDto })",
        "@ApiResponse({ status: 404, description: 'Not found' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "MerchantDto"
      ],
      "priority": "LOW",
      "module": "merchant"
    },
    {
      "endpoint": {
        "method": "GET",
        "normalized_path": "/merchant/attributes",
        "path": "/merchant/attributes",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/merchant/merchant.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/merchant/merchant.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Get attributes' })",
        "@ApiTags('merchant')",
        "@ApiResponse({ status: 200, description: 'Success', type: AttributesDto })",
        "@ApiResponse({ status: 404, description: 'Not found' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "AttributesDto"
      ],
      "priority": "LOW",
      "module": "merchant"
    },
    {
      "endpoint": {
        "method": "GET",
        "normalized_path": "/merchant/catalog/products",
        "path": "/merchant/catalog/products",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/merchant/merchant.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/merchant/merchant.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Get products' })",
        "@ApiTags('merchant')",
        "@ApiResponse({ status: 200, description: 'Success', type: ProductsDto })",
        "@ApiResponse({ status: 404, description: 'Not found' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "ProductsDto"
      ],
      "priority": "LOW",
      "module": "merchant"
    },
    {
      "endpoint": {
        "method": "GET",
        "normalized_path": "/merchant/catalog/products/{param}",
        "path": "/merchant/catalog/products/:id",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/merchant/merchant.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/merchant/merchant.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Get products' })",
        "@ApiTags('merchant')",
        "@ApiParam({ name: 'param', description: 'param ID' })",
        "@ApiResponse({ status: 200, description: 'Success', type: ProductsDto })",
        "@ApiResponse({ status: 404, description: 'Not found' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "ProductsDto"
      ],
      "priority": "LOW",
      "module": "merchant"
    },
    {
      "endpoint": {
        "method": "GET",
        "normalized_path": "/merchant/categories",
        "path": "/merchant/categories",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/merchant/merchant.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/merchant/merchant.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Get categories' })",
        "@ApiTags('merchant')",
        "@ApiResponse({ status: 200, description: 'Success', type: CategoriesDto })",
        "@ApiResponse({ status: 404, description: 'Not found' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "CategoriesDto"
      ],
      "priority": "LOW",
      "module": "merchant"
    },
    {
      "endpoint": {
        "method": "GET",
        "normalized_path": "/merchant/products",
        "path": "/merchant/products",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/merchant/merchant.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/merchant/merchant.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Get products' })",
        "@ApiTags('merchant')",
        "@ApiResponse({ status: 200, description: 'Success', type: ProductsDto })",
        "@ApiResponse({ status: 404, description: 'Not found' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "ProductsDto"
      ],
      "priority": "LOW",
      "module": "merchant"
    },
    {
      "endpoint": {
        "method": "GET",
        "normalized_path": "/merchant/products/{param}",
        "path": "/merchant/products/:id",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/merchant/merchant.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/merchant/merchant.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Get products' })",
        "@ApiTags('merchant')",
        "@ApiParam({ name: 'param', description: 'param ID' })",
        "@ApiResponse({ status: 200, description: 'Success', type: ProductsDto })",
        "@ApiResponse({ status: 404, description: 'Not found' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "ProductsDto"
      ],
      "priority": "LOW",
      "module": "merchant"
    },
    {
      "endpoint": {
        "method": "GET",
        "normalized_path": "/merchant/stores/{param}/products",
        "path": "/merchant/stores/:storeId/products",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/merchant/merchant.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/merchant/merchant.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Get products' })",
        "@ApiTags('merchant')",
        "@ApiParam({ name: 'param', description: 'param ID' })",
        "@ApiResponse({ status: 200, description: 'Success', type: ProductsDto })",
        "@ApiResponse({ status: 404, description: 'Not found' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "ProductsDto"
      ],
      "priority": "LOW",
      "module": "merchant"
    },
    {
      "endpoint": {
        "method": "GET",
        "normalized_path": "/merchant/{param}",
        "path": "/merchant/:id",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/merchant/merchant.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/merchant/merchant.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Get merchant' })",
        "@ApiTags('merchant')",
        "@ApiParam({ name: 'param', description: 'param ID' })",
        "@ApiResponse({ status: 200, description: 'Success', type: MerchantDto })",
        "@ApiResponse({ status: 404, description: 'Not found' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "MerchantDto"
      ],
      "priority": "LOW",
      "module": "merchant"
    },
    {
      "endpoint": {
        "method": "GET",
        "normalized_path": "/merchant/{param}/products",
        "path": "/merchant/:merchantId/products",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/merchant/merchant.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/merchant/merchant.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Get products' })",
        "@ApiTags('merchant')",
        "@ApiParam({ name: 'param', description: 'param ID' })",
        "@ApiResponse({ status: 200, description: 'Success', type: ProductsDto })",
        "@ApiResponse({ status: 404, description: 'Not found' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "ProductsDto"
      ],
      "priority": "LOW",
      "module": "merchant"
    },
    {
      "endpoint": {
        "method": "GET",
        "normalized_path": "/metrics",
        "path": "/metrics",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/metrics/metrics.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/metrics/metrics.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Get metrics' })",
        "@ApiTags('metrics')",
        "@ApiResponse({ status: 200, description: 'Success', type: MetricsDto })",
        "@ApiResponse({ status: 404, description: 'Not found' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "MetricsDto"
      ],
      "priority": "LOW",
      "module": "metrics"
    },
    {
      "endpoint": {
        "method": "GET",
        "normalized_path": "/metrics/json",
        "path": "/metrics/json",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/metrics/metrics.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/metrics/metrics.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Get json' })",
        "@ApiTags('metrics')",
        "@ApiResponse({ status: 200, description: 'Success', type: JsonDto })",
        "@ApiResponse({ status: 404, description: 'Not found' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "JsonDto"
      ],
      "priority": "LOW",
      "module": "metrics"
    },
    {
      "endpoint": {
        "method": "GET",
        "normalized_path": "/notifications/my",
        "path": "/notifications/my",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/notification/notification.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/notification/notification.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Get my' })",
        "@ApiTags('notification')",
        "@ApiResponse({ status: 200, description: 'Success', type: MyDto })",
        "@ApiResponse({ status: 404, description: 'Not found' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "MyDto"
      ],
      "priority": "LOW",
      "module": "notification"
    },
    {
      "endpoint": {
        "method": "GET",
        "normalized_path": "/notifications/suppression",
        "path": "/notifications/suppression",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/notification/notification.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/notification/notification.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Get suppression' })",
        "@ApiTags('notification')",
        "@ApiResponse({ status: 200, description: 'Success', type: SuppressionDto })",
        "@ApiResponse({ status: 404, description: 'Not found' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "SuppressionDto"
      ],
      "priority": "LOW",
      "module": "notification"
    },
    {
      "endpoint": {
        "method": "GET",
        "normalized_path": "/notifications/suppression/channels",
        "path": "/notifications/suppression/channels",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/notification/notification.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/notification/notification.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Get channels' })",
        "@ApiTags('notification')",
        "@ApiResponse({ status: 200, description: 'Success', type: ChannelsDto })",
        "@ApiResponse({ status: 404, description: 'Not found' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "ChannelsDto"
      ],
      "priority": "LOW",
      "module": "notification"
    },
    {
      "endpoint": {
        "method": "GET",
        "normalized_path": "/notifications/suppression/stats",
        "path": "/notifications/suppression/stats",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/notification/notification.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/notification/notification.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Get stats' })",
        "@ApiTags('notification')",
        "@ApiResponse({ status: 200, description: 'Success', type: StatsDto })",
        "@ApiResponse({ status: 404, description: 'Not found' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "StatsDto"
      ],
      "priority": "LOW",
      "module": "notification"
    },
    {
      "endpoint": {
        "method": "GET",
        "normalized_path": "/notifications/unread/count",
        "path": "/notifications/unread/count",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/notification/notification.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/notification/notification.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Get count' })",
        "@ApiTags('notification')",
        "@ApiResponse({ status: 200, description: 'Success', type: CountDto })",
        "@ApiResponse({ status: 404, description: 'Not found' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "CountDto"
      ],
      "priority": "LOW",
      "module": "notification"
    },
    {
      "endpoint": {
        "method": "GET",
        "normalized_path": "/onboarding/applications",
        "path": "/onboarding/applications",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/onboarding/onboarding.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/onboarding/onboarding.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Get applications' })",
        "@ApiTags('onboarding')",
        "@ApiResponse({ status: 200, description: 'Success', type: ApplicationsDto })",
        "@ApiResponse({ status: 404, description: 'Not found' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "ApplicationsDto"
      ],
      "priority": "LOW",
      "module": "onboarding"
    },
    {
      "endpoint": {
        "method": "GET",
        "normalized_path": "/onboarding/my",
        "path": "/onboarding/my",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/onboarding/onboarding.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/onboarding/onboarding.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Get my' })",
        "@ApiTags('onboarding')",
        "@ApiResponse({ status: 200, description: 'Success', type: MyDto })",
        "@ApiResponse({ status: 404, description: 'Not found' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "MyDto"
      ],
      "priority": "LOW",
      "module": "onboarding"
    },
    {
      "endpoint": {
        "method": "GET",
        "normalized_path": "/onboarding/statistics",
        "path": "/onboarding/statistics",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/onboarding/onboarding.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/onboarding/onboarding.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Get statistics' })",
        "@ApiTags('onboarding')",
        "@ApiResponse({ status: 200, description: 'Success', type: StatisticsDto })",
        "@ApiResponse({ status: 404, description: 'Not found' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "StatisticsDto"
      ],
      "priority": "LOW",
      "module": "onboarding"
    },
    {
      "endpoint": {
        "method": "GET",
        "normalized_path": "/onboarding/{param}/details",
        "path": "/onboarding/:id/details",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/onboarding/onboarding.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/onboarding/onboarding.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Get details' })",
        "@ApiTags('onboarding')",
        "@ApiParam({ name: 'param', description: 'param ID' })",
        "@ApiResponse({ status: 200, description: 'Success', type: DetailsDto })",
        "@ApiResponse({ status: 404, description: 'Not found' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "DetailsDto"
      ],
      "priority": "LOW",
      "module": "onboarding"
    },
    {
      "endpoint": {
        "method": "GET",
        "normalized_path": "/orders-cqrs",
        "path": "/orders-cqrs",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/order/order-cqrs.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/order/order-cqrs.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Get orders-cqrs' })",
        "@ApiTags('order')",
        "@ApiResponse({ status: 200, description: 'Success', type: Orders-cqrsDto })",
        "@ApiResponse({ status: 404, description: 'Not found' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "Orders-cqrsDto"
      ],
      "priority": "HIGH",
      "module": "order"
    },
    {
      "endpoint": {
        "method": "GET",
        "normalized_path": "/orders-cqrs/{param}",
        "path": "/orders-cqrs/:id",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/order/order-cqrs.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/order/order-cqrs.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Get orders-cqrs' })",
        "@ApiTags('order')",
        "@ApiParam({ name: 'param', description: 'param ID' })",
        "@ApiResponse({ status: 200, description: 'Success', type: Orders-cqrsDto })",
        "@ApiResponse({ status: 404, description: 'Not found' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "Orders-cqrsDto"
      ],
      "priority": "HIGH",
      "module": "order"
    },
    {
      "endpoint": {
        "method": "GET",
        "normalized_path": "/promotions",
        "path": "/promotions",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/promotion/promotion.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/promotion/promotion.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Get promotions' })",
        "@ApiTags('promotion')",
        "@ApiResponse({ status: 200, description: 'Success', type: PromotionsDto })",
        "@ApiResponse({ status: 404, description: 'Not found' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "PromotionsDto"
      ],
      "priority": "LOW",
      "module": "promotion"
    },
    {
      "endpoint": {
        "method": "GET",
        "normalized_path": "/promotions/by-placement",
        "path": "/promotions/by-placement",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/promotion/promotion.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/promotion/promotion.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Get by-placement' })",
        "@ApiTags('promotion')",
        "@ApiResponse({ status: 200, description: 'Success', type: By-placementDto })",
        "@ApiResponse({ status: 404, description: 'Not found' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "By-placementDto"
      ],
      "priority": "LOW",
      "module": "promotion"
    },
    {
      "endpoint": {
        "method": "GET",
        "normalized_path": "/promotions/stats/overview",
        "path": "/promotions/stats/overview",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/promotion/promotion.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/promotion/promotion.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Get overview' })",
        "@ApiTags('promotion')",
        "@ApiResponse({ status: 200, description: 'Success', type: OverviewDto })",
        "@ApiResponse({ status: 404, description: 'Not found' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "OverviewDto"
      ],
      "priority": "LOW",
      "module": "promotion"
    },
    {
      "endpoint": {
        "method": "GET",
        "normalized_path": "/promotions/{param}",
        "path": "/promotions/:id",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/promotion/promotion.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/promotion/promotion.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Get promotions' })",
        "@ApiTags('promotion')",
        "@ApiParam({ name: 'param', description: 'param ID' })",
        "@ApiResponse({ status: 200, description: 'Success', type: PromotionsDto })",
        "@ApiResponse({ status: 404, description: 'Not found' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "PromotionsDto"
      ],
      "priority": "LOW",
      "module": "promotion"
    },
    {
      "endpoint": {
        "method": "GET",
        "normalized_path": "/shifts",
        "path": "/shifts",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/shift/shift.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/shift/shift.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Get shifts' })",
        "@ApiTags('shift')",
        "@ApiResponse({ status: 200, description: 'Success', type: ShiftsDto })",
        "@ApiResponse({ status: 404, description: 'Not found' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "ShiftsDto"
      ],
      "priority": "LOW",
      "module": "shift"
    },
    {
      "endpoint": {
        "method": "GET",
        "normalized_path": "/shifts/driver/{param}",
        "path": "/shifts/driver/:driverId",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/shift/shift.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/shift/shift.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Get driver' })",
        "@ApiTags('shift')",
        "@ApiParam({ name: 'param', description: 'param ID' })",
        "@ApiResponse({ status: 200, description: 'Success', type: DriverDto })",
        "@ApiResponse({ status: 404, description: 'Not found' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "DriverDto"
      ],
      "priority": "MEDIUM",
      "module": "shift"
    },
    {
      "endpoint": {
        "method": "GET",
        "normalized_path": "/shifts/my-shifts",
        "path": "/shifts/my-shifts",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/shift/shift.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/shift/shift.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Get my-shifts' })",
        "@ApiTags('shift')",
        "@ApiResponse({ status: 200, description: 'Success', type: My-shiftsDto })",
        "@ApiResponse({ status: 404, description: 'Not found' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "My-shiftsDto"
      ],
      "priority": "LOW",
      "module": "shift"
    },
    {
      "endpoint": {
        "method": "GET",
        "normalized_path": "/support/admin/sla-metrics",
        "path": "/support/admin/sla-metrics",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/support/support.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/support/support.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Get sla-metrics' })",
        "@ApiTags('support')",
        "@ApiResponse({ status: 200, description: 'Success', type: Sla-metricsDto })",
        "@ApiResponse({ status: 404, description: 'Not found' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "Sla-metricsDto"
      ],
      "priority": "HIGH",
      "module": "support"
    },
    {
      "endpoint": {
        "method": "GET",
        "normalized_path": "/support/stats",
        "path": "/support/stats",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/support/support.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/support/support.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Get stats' })",
        "@ApiTags('support')",
        "@ApiResponse({ status: 200, description: 'Success', type: StatsDto })",
        "@ApiResponse({ status: 404, description: 'Not found' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "StatsDto"
      ],
      "priority": "LOW",
      "module": "support"
    },
    {
      "endpoint": {
        "method": "GET",
        "normalized_path": "/support/tickets",
        "path": "/support/tickets",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/support/support.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/support/support.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Get tickets' })",
        "@ApiTags('support')",
        "@ApiResponse({ status: 200, description: 'Success', type: TicketsDto })",
        "@ApiResponse({ status: 404, description: 'Not found' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "TicketsDto"
      ],
      "priority": "LOW",
      "module": "support"
    },
    {
      "endpoint": {
        "method": "GET",
        "normalized_path": "/support/tickets/{param}",
        "path": "/support/tickets/:id",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/support/support.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/support/support.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Get tickets' })",
        "@ApiTags('support')",
        "@ApiParam({ name: 'param', description: 'param ID' })",
        "@ApiResponse({ status: 200, description: 'Success', type: TicketsDto })",
        "@ApiResponse({ status: 404, description: 'Not found' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "TicketsDto"
      ],
      "priority": "LOW",
      "module": "support"
    },
    {
      "endpoint": {
        "method": "GET",
        "normalized_path": "/users/addresses",
        "path": "/users/addresses",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/user/user.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/user/user.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Get addresses' })",
        "@ApiTags('user')",
        "@ApiResponse({ status: 200, description: 'Success', type: AddressesDto })",
        "@ApiResponse({ status: 404, description: 'Not found' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "AddressesDto"
      ],
      "priority": "MEDIUM",
      "module": "user"
    },
    {
      "endpoint": {
        "method": "GET",
        "normalized_path": "/users/me",
        "path": "/users/me",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/user/user.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/user/user.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Get me' })",
        "@ApiTags('user')",
        "@ApiResponse({ status: 200, description: 'Success', type: MeDto })",
        "@ApiResponse({ status: 404, description: 'Not found' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "MeDto"
      ],
      "priority": "MEDIUM",
      "module": "user"
    },
    {
      "endpoint": {
        "method": "GET",
        "normalized_path": "/users/pin/status",
        "path": "/users/pin/status",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/user/user.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/user/user.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Get status' })",
        "@ApiTags('user')",
        "@ApiResponse({ status: 200, description: 'Success', type: StatusDto })",
        "@ApiResponse({ status: 404, description: 'Not found' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "StatusDto"
      ],
      "priority": "MEDIUM",
      "module": "user"
    },
    {
      "endpoint": {
        "method": "GET",
        "normalized_path": "/users/search",
        "path": "/users/search",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/user/user.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/user/user.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Get search' })",
        "@ApiTags('user')",
        "@ApiResponse({ status: 200, description: 'Success', type: SearchDto })",
        "@ApiResponse({ status: 404, description: 'Not found' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "SearchDto"
      ],
      "priority": "MEDIUM",
      "module": "user"
    },
    {
      "endpoint": {
        "method": "GET",
        "normalized_path": "/utility/admin/orders",
        "path": "/utility/admin/orders",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/utility/utility.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/utility/utility.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Get orders' })",
        "@ApiTags('utility')",
        "@ApiResponse({ status: 200, description: 'Success', type: OrdersDto })",
        "@ApiResponse({ status: 404, description: 'Not found' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "OrdersDto"
      ],
      "priority": "HIGH",
      "module": "utility"
    },
    {
      "endpoint": {
        "method": "GET",
        "normalized_path": "/utility/daily",
        "path": "/utility/daily",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/utility/utility.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/utility/utility.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Get daily' })",
        "@ApiTags('utility')",
        "@ApiResponse({ status: 200, description: 'Success', type: DailyDto })",
        "@ApiResponse({ status: 404, description: 'Not found' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "DailyDto"
      ],
      "priority": "LOW",
      "module": "utility"
    },
    {
      "endpoint": {
        "method": "GET",
        "normalized_path": "/utility/options",
        "path": "/utility/options",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/utility/utility.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/utility/utility.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Get options' })",
        "@ApiTags('utility')",
        "@ApiResponse({ status: 200, description: 'Success', type: OptionsDto })",
        "@ApiResponse({ status: 404, description: 'Not found' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "OptionsDto"
      ],
      "priority": "LOW",
      "module": "utility"
    },
    {
      "endpoint": {
        "method": "GET",
        "normalized_path": "/utility/order/{param}",
        "path": "/utility/order/:id",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/utility/utility.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/utility/utility.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Get order' })",
        "@ApiTags('utility')",
        "@ApiParam({ name: 'param', description: 'param ID' })",
        "@ApiResponse({ status: 200, description: 'Success', type: OrderDto })",
        "@ApiResponse({ status: 404, description: 'Not found' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "OrderDto"
      ],
      "priority": "HIGH",
      "module": "utility"
    },
    {
      "endpoint": {
        "method": "GET",
        "normalized_path": "/utility/orders",
        "path": "/utility/orders",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/utility/utility.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/utility/utility.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Get orders' })",
        "@ApiTags('utility')",
        "@ApiResponse({ status: 200, description: 'Success', type: OrdersDto })",
        "@ApiResponse({ status: 404, description: 'Not found' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "OrdersDto"
      ],
      "priority": "HIGH",
      "module": "utility"
    },
    {
      "endpoint": {
        "method": "GET",
        "normalized_path": "/utility/pricing",
        "path": "/utility/pricing",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/utility/utility.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/utility/utility.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Get pricing' })",
        "@ApiTags('utility')",
        "@ApiResponse({ status: 200, description: 'Success', type: PricingDto })",
        "@ApiResponse({ status: 404, description: 'Not found' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "PricingDto"
      ],
      "priority": "LOW",
      "module": "utility"
    },
    {
      "endpoint": {
        "method": "GET",
        "normalized_path": "/utility/pricing/{param}",
        "path": "/utility/pricing/:city",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/utility/utility.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/utility/utility.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Get pricing' })",
        "@ApiTags('utility')",
        "@ApiParam({ name: 'param', description: 'param ID' })",
        "@ApiResponse({ status: 200, description: 'Success', type: PricingDto })",
        "@ApiResponse({ status: 404, description: 'Not found' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "PricingDto"
      ],
      "priority": "LOW",
      "module": "utility"
    },
    {
      "endpoint": {
        "method": "GET",
        "normalized_path": "/vendors",
        "path": "/vendors",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/vendor/vendor.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/vendor/vendor.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Get vendors' })",
        "@ApiTags('vendor')",
        "@ApiResponse({ status: 200, description: 'Success', type: VendorsDto })",
        "@ApiResponse({ status: 404, description: 'Not found' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "VendorsDto"
      ],
      "priority": "MEDIUM",
      "module": "vendor"
    },
    {
      "endpoint": {
        "method": "GET",
        "normalized_path": "/vendors/account/statement",
        "path": "/vendors/account/statement",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/vendor/vendor.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/vendor/vendor.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Get statement' })",
        "@ApiTags('vendor')",
        "@ApiResponse({ status: 200, description: 'Success', type: StatementDto })",
        "@ApiResponse({ status: 404, description: 'Not found' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "StatementDto"
      ],
      "priority": "MEDIUM",
      "module": "vendor"
    },
    {
      "endpoint": {
        "method": "GET",
        "normalized_path": "/vendors/dashboard/overview",
        "path": "/vendors/dashboard/overview",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/vendor/vendor.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/vendor/vendor.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Get overview' })",
        "@ApiTags('vendor')",
        "@ApiResponse({ status: 200, description: 'Success', type: OverviewDto })",
        "@ApiResponse({ status: 404, description: 'Not found' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "OverviewDto"
      ],
      "priority": "MEDIUM",
      "module": "vendor"
    },
    {
      "endpoint": {
        "method": "GET",
        "normalized_path": "/vendors/me",
        "path": "/vendors/me",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/vendor/vendor.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/vendor/vendor.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Get me' })",
        "@ApiTags('vendor')",
        "@ApiResponse({ status: 200, description: 'Success', type: MeDto })",
        "@ApiResponse({ status: 404, description: 'Not found' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "MeDto"
      ],
      "priority": "MEDIUM",
      "module": "vendor"
    },
    {
      "endpoint": {
        "method": "GET",
        "normalized_path": "/vendors/sales",
        "path": "/vendors/sales",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/vendor/vendor.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/vendor/vendor.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Get sales' })",
        "@ApiTags('vendor')",
        "@ApiResponse({ status: 200, description: 'Success', type: SalesDto })",
        "@ApiResponse({ status: 404, description: 'Not found' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "SalesDto"
      ],
      "priority": "MEDIUM",
      "module": "vendor"
    },
    {
      "endpoint": {
        "method": "GET",
        "normalized_path": "/vendors/settlements",
        "path": "/vendors/settlements",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/vendor/vendor.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/vendor/vendor.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Get settlements' })",
        "@ApiTags('vendor')",
        "@ApiResponse({ status: 200, description: 'Success', type: SettlementsDto })",
        "@ApiResponse({ status: 404, description: 'Not found' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "SettlementsDto"
      ],
      "priority": "MEDIUM",
      "module": "vendor"
    },
    {
      "endpoint": {
        "method": "GET",
        "normalized_path": "/vendors/{param}",
        "path": "/vendors/:id",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/vendor/vendor.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/vendor/vendor.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Get vendors' })",
        "@ApiTags('vendor')",
        "@ApiParam({ name: 'param', description: 'param ID' })",
        "@ApiResponse({ status: 200, description: 'Success', type: VendorsDto })",
        "@ApiResponse({ status: 404, description: 'Not found' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "VendorsDto"
      ],
      "priority": "MEDIUM",
      "module": "vendor"
    },
    {
      "endpoint": {
        "method": "GET",
        "normalized_path": "/wallet/balance",
        "path": "/wallet/balance",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/wallet/wallet.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/wallet/wallet.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Get balance' })",
        "@ApiTags('wallet')",
        "@ApiResponse({ status: 200, description: 'Success', type: BalanceDto })",
        "@ApiResponse({ status: 404, description: 'Not found' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "BalanceDto"
      ],
      "priority": "LOW",
      "module": "wallet"
    },
    {
      "endpoint": {
        "method": "GET",
        "normalized_path": "/wallet/bills",
        "path": "/wallet/bills",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/wallet/wallet.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/wallet/wallet.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Get bills' })",
        "@ApiTags('wallet')",
        "@ApiResponse({ status: 200, description: 'Success', type: BillsDto })",
        "@ApiResponse({ status: 404, description: 'Not found' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "BillsDto"
      ],
      "priority": "LOW",
      "module": "wallet"
    },
    {
      "endpoint": {
        "method": "GET",
        "normalized_path": "/wallet/topup/history",
        "path": "/wallet/topup/history",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/wallet/wallet.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/wallet/wallet.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Get history' })",
        "@ApiTags('wallet')",
        "@ApiResponse({ status: 200, description: 'Success', type: HistoryDto })",
        "@ApiResponse({ status: 404, description: 'Not found' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "HistoryDto"
      ],
      "priority": "LOW",
      "module": "wallet"
    },
    {
      "endpoint": {
        "method": "GET",
        "normalized_path": "/wallet/topup/methods",
        "path": "/wallet/topup/methods",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/wallet/wallet.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/wallet/wallet.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Get methods' })",
        "@ApiTags('wallet')",
        "@ApiResponse({ status: 200, description: 'Success', type: MethodsDto })",
        "@ApiResponse({ status: 404, description: 'Not found' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "MethodsDto"
      ],
      "priority": "LOW",
      "module": "wallet"
    },
    {
      "endpoint": {
        "method": "GET",
        "normalized_path": "/wallet/transaction/{param}",
        "path": "/wallet/transaction/:id",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/wallet/wallet.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/wallet/wallet.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Get transaction' })",
        "@ApiTags('wallet')",
        "@ApiParam({ name: 'param', description: 'param ID' })",
        "@ApiResponse({ status: 200, description: 'Success', type: TransactionDto })",
        "@ApiResponse({ status: 404, description: 'Not found' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "TransactionDto"
      ],
      "priority": "LOW",
      "module": "wallet"
    },
    {
      "endpoint": {
        "method": "GET",
        "normalized_path": "/wallet/transactions",
        "path": "/wallet/transactions",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/wallet/wallet.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/wallet/wallet.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Get transactions' })",
        "@ApiTags('wallet')",
        "@ApiResponse({ status: 200, description: 'Success', type: TransactionsDto })",
        "@ApiResponse({ status: 404, description: 'Not found' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "TransactionsDto"
      ],
      "priority": "LOW",
      "module": "wallet"
    },
    {
      "endpoint": {
        "method": "GET",
        "normalized_path": "/wallet/transfers",
        "path": "/wallet/transfers",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/wallet/wallet.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/wallet/wallet.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Get transfers' })",
        "@ApiTags('wallet')",
        "@ApiResponse({ status: 200, description: 'Success', type: TransfersDto })",
        "@ApiResponse({ status: 404, description: 'Not found' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "TransfersDto"
      ],
      "priority": "LOW",
      "module": "wallet"
    },
    {
      "endpoint": {
        "method": "GET",
        "normalized_path": "/wallet/withdraw/methods",
        "path": "/wallet/withdraw/methods",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/wallet/wallet.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/wallet/wallet.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Get methods' })",
        "@ApiTags('wallet')",
        "@ApiResponse({ status: 200, description: 'Success', type: MethodsDto })",
        "@ApiResponse({ status: 404, description: 'Not found' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "MethodsDto"
      ],
      "priority": "LOW",
      "module": "wallet"
    },
    {
      "endpoint": {
        "method": "GET",
        "normalized_path": "/wallet/withdraw/my",
        "path": "/wallet/withdraw/my",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/wallet/wallet.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/wallet/wallet.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Get my' })",
        "@ApiTags('wallet')",
        "@ApiResponse({ status: 200, description: 'Success', type: MyDto })",
        "@ApiResponse({ status: 404, description: 'Not found' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "MyDto"
      ],
      "priority": "LOW",
      "module": "wallet"
    },
    {
      "endpoint": {
        "method": "PATCH",
        "normalized_path": "/admin/data-deletion/{param}/approve",
        "path": "/admin/data-deletion/:id/approve",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/admin/admin.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/admin/admin.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Update approve' })",
        "@ApiTags('admin')",
        "@ApiParam({ name: 'param', description: 'param ID' })",
        "@ApiResponse({ status: 200, description: 'Updated', type: UpdateApproveDto })",
        "@ApiResponse({ status: 404, description: 'Not found' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "UpdateApproveDto",
        "ApproveDto"
      ],
      "priority": "HIGH",
      "module": "admin"
    },
    {
      "endpoint": {
        "method": "PATCH",
        "normalized_path": "/admin/data-deletion/{param}/reject",
        "path": "/admin/data-deletion/:id/reject",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/admin/admin.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/admin/admin.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Update reject' })",
        "@ApiTags('admin')",
        "@ApiParam({ name: 'param', description: 'param ID' })",
        "@ApiResponse({ status: 200, description: 'Updated', type: UpdateRejectDto })",
        "@ApiResponse({ status: 404, description: 'Not found' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "UpdateRejectDto",
        "RejectDto"
      ],
      "priority": "HIGH",
      "module": "admin"
    },
    {
      "endpoint": {
        "method": "PATCH",
        "normalized_path": "/admin/drivers/leave-requests/{param}/approve",
        "path": "/admin/drivers/leave-requests/:id/approve",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/admin/admin.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/admin/admin.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Update approve' })",
        "@ApiTags('admin')",
        "@ApiParam({ name: 'param', description: 'param ID' })",
        "@ApiResponse({ status: 200, description: 'Updated', type: UpdateApproveDto })",
        "@ApiResponse({ status: 404, description: 'Not found' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "UpdateApproveDto",
        "ApproveDto"
      ],
      "priority": "HIGH",
      "module": "admin"
    },
    {
      "endpoint": {
        "method": "PATCH",
        "normalized_path": "/admin/drivers/leave-requests/{param}/reject",
        "path": "/admin/drivers/leave-requests/:id/reject",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/admin/admin.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/admin/admin.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Update reject' })",
        "@ApiTags('admin')",
        "@ApiParam({ name: 'param', description: 'param ID' })",
        "@ApiResponse({ status: 200, description: 'Updated', type: UpdateRejectDto })",
        "@ApiResponse({ status: 404, description: 'Not found' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "UpdateRejectDto",
        "RejectDto"
      ],
      "priority": "HIGH",
      "module": "admin"
    },
    {
      "endpoint": {
        "method": "PATCH",
        "normalized_path": "/admin/drivers/{param}/adjust-balance",
        "path": "/admin/drivers/:id/adjust-balance",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/admin/admin.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/admin/admin.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Update adjust-balance' })",
        "@ApiTags('admin')",
        "@ApiParam({ name: 'param', description: 'param ID' })",
        "@ApiResponse({ status: 200, description: 'Updated', type: UpdateAdjust-balanceDto })",
        "@ApiResponse({ status: 404, description: 'Not found' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "UpdateAdjust-balanceDto",
        "Adjust-balanceDto"
      ],
      "priority": "HIGH",
      "module": "admin"
    },
    {
      "endpoint": {
        "method": "PATCH",
        "normalized_path": "/admin/drivers/{param}/leave-balance/adjust",
        "path": "/admin/drivers/:id/leave-balance/adjust",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/admin/admin.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/admin/admin.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Update adjust' })",
        "@ApiTags('admin')",
        "@ApiParam({ name: 'param', description: 'param ID' })",
        "@ApiResponse({ status: 200, description: 'Updated', type: UpdateAdjustDto })",
        "@ApiResponse({ status: 404, description: 'Not found' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "UpdateAdjustDto",
        "AdjustDto"
      ],
      "priority": "HIGH",
      "module": "admin"
    },
    {
      "endpoint": {
        "method": "PATCH",
        "normalized_path": "/admin/marketers/{param}",
        "path": "/admin/marketers/:id",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/admin/admin.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/admin/admin.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Update marketers' })",
        "@ApiTags('admin')",
        "@ApiParam({ name: 'param', description: 'param ID' })",
        "@ApiResponse({ status: 200, description: 'Updated', type: UpdateMarketersDto })",
        "@ApiResponse({ status: 404, description: 'Not found' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "UpdateMarketersDto",
        "MarketersDto"
      ],
      "priority": "HIGH",
      "module": "admin"
    },
    {
      "endpoint": {
        "method": "PATCH",
        "normalized_path": "/admin/roles/{param}",
        "path": "/admin/roles/:id",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/admin/admin.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/admin/admin.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Update roles' })",
        "@ApiTags('admin')",
        "@ApiParam({ name: 'param', description: 'param ID' })",
        "@ApiResponse({ status: 200, description: 'Updated', type: UpdateRolesDto })",
        "@ApiResponse({ status: 404, description: 'Not found' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "UpdateRolesDto",
        "RolesDto"
      ],
      "priority": "HIGH",
      "module": "admin"
    },
    {
      "endpoint": {
        "method": "PATCH",
        "normalized_path": "/admin/settings",
        "path": "/admin/settings",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/admin/admin.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/admin/admin.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Update settings' })",
        "@ApiTags('admin')",
        "@ApiResponse({ status: 200, description: 'Updated', type: UpdateSettingsDto })",
        "@ApiResponse({ status: 404, description: 'Not found' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "UpdateSettingsDto",
        "SettingsDto"
      ],
      "priority": "HIGH",
      "module": "admin"
    },
    {
      "endpoint": {
        "method": "PATCH",
        "normalized_path": "/admin/settings/feature-flags/{param}",
        "path": "/admin/settings/feature-flags/:flag",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/admin/admin.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/admin/admin.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Update feature-flags' })",
        "@ApiTags('admin')",
        "@ApiParam({ name: 'param', description: 'param ID' })",
        "@ApiResponse({ status: 200, description: 'Updated', type: UpdateFeature-flagsDto })",
        "@ApiResponse({ status: 404, description: 'Not found' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "UpdateFeature-flagsDto",
        "Feature-flagsDto"
      ],
      "priority": "HIGH",
      "module": "admin"
    },
    {
      "endpoint": {
        "method": "PATCH",
        "normalized_path": "/admin/stores/products/{param}",
        "path": "/admin/stores/products/:id",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/store/store.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/store/store.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Update products' })",
        "@ApiTags('store')",
        "@ApiParam({ name: 'param', description: 'param ID' })",
        "@ApiResponse({ status: 200, description: 'Updated', type: UpdateProductsDto })",
        "@ApiResponse({ status: 404, description: 'Not found' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "UpdateProductsDto",
        "ProductsDto"
      ],
      "priority": "HIGH",
      "module": "store"
    },
    {
      "endpoint": {
        "method": "PATCH",
        "normalized_path": "/admin/stores/{param}",
        "path": "/admin/stores/:id",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/store/store.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/store/store.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Update stores' })",
        "@ApiTags('store')",
        "@ApiParam({ name: 'param', description: 'param ID' })",
        "@ApiResponse({ status: 200, description: 'Updated', type: UpdateStoresDto })",
        "@ApiResponse({ status: 404, description: 'Not found' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "UpdateStoresDto",
        "StoresDto"
      ],
      "priority": "HIGH",
      "module": "store"
    },
    {
      "endpoint": {
        "method": "PATCH",
        "normalized_path": "/admin/withdrawals/{param}/approve",
        "path": "/admin/withdrawals/:id/approve",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/admin/admin.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/admin/admin.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Update approve' })",
        "@ApiTags('admin')",
        "@ApiParam({ name: 'param', description: 'param ID' })",
        "@ApiResponse({ status: 200, description: 'Updated', type: UpdateApproveDto })",
        "@ApiResponse({ status: 404, description: 'Not found' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "UpdateApproveDto",
        "ApproveDto"
      ],
      "priority": "HIGH",
      "module": "admin"
    },
    {
      "endpoint": {
        "method": "PATCH",
        "normalized_path": "/admin/withdrawals/{param}/reject",
        "path": "/admin/withdrawals/:id/reject",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/admin/admin.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/admin/admin.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Update reject' })",
        "@ApiTags('admin')",
        "@ApiParam({ name: 'param', description: 'param ID' })",
        "@ApiResponse({ status: 200, description: 'Updated', type: UpdateRejectDto })",
        "@ApiResponse({ status: 404, description: 'Not found' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "UpdateRejectDto",
        "RejectDto"
      ],
      "priority": "HIGH",
      "module": "admin"
    },
    {
      "endpoint": {
        "method": "PATCH",
        "normalized_path": "/akhdimni/errands/{param}/cancel",
        "path": "/akhdimni/errands/:id/cancel",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/akhdimni/akhdimni.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/akhdimni/akhdimni.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Update cancel' })",
        "@ApiTags('akhdimni')",
        "@ApiParam({ name: 'param', description: 'param ID' })",
        "@ApiResponse({ status: 200, description: 'Updated', type: UpdateCancelDto })",
        "@ApiResponse({ status: 404, description: 'Not found' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "UpdateCancelDto",
        "CancelDto"
      ],
      "priority": "LOW",
      "module": "akhdimni"
    },
    {
      "endpoint": {
        "method": "PATCH",
        "normalized_path": "/akhdimni/errands/{param}/status",
        "path": "/akhdimni/errands/:id/status",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/akhdimni/akhdimni.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/akhdimni/akhdimni.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Update status' })",
        "@ApiTags('akhdimni')",
        "@ApiParam({ name: 'param', description: 'param ID' })",
        "@ApiResponse({ status: 200, description: 'Updated', type: UpdateStatusDto })",
        "@ApiResponse({ status: 404, description: 'Not found' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "UpdateStatusDto",
        "StatusDto"
      ],
      "priority": "LOW",
      "module": "akhdimni"
    },
    {
      "endpoint": {
        "method": "PATCH",
        "normalized_path": "/content/admin/app-settings",
        "path": "/content/admin/app-settings",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/content/content.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/content/content.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Update app-settings' })",
        "@ApiTags('content')",
        "@ApiResponse({ status: 200, description: 'Updated', type: UpdateApp-settingsDto })",
        "@ApiResponse({ status: 404, description: 'Not found' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "UpdateApp-settingsDto",
        "App-settingsDto"
      ],
      "priority": "HIGH",
      "module": "content"
    },
    {
      "endpoint": {
        "method": "PATCH",
        "normalized_path": "/content/admin/faqs/{param}",
        "path": "/content/admin/faqs/:id",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/content/content.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/content/content.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Update faqs' })",
        "@ApiTags('content')",
        "@ApiParam({ name: 'param', description: 'param ID' })",
        "@ApiResponse({ status: 200, description: 'Updated', type: UpdateFaqsDto })",
        "@ApiResponse({ status: 404, description: 'Not found' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "UpdateFaqsDto",
        "FaqsDto"
      ],
      "priority": "HIGH",
      "module": "content"
    },
    {
      "endpoint": {
        "method": "PATCH",
        "normalized_path": "/content/admin/pages/{param}",
        "path": "/content/admin/pages/:id",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/content/content.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/content/content.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Update pages' })",
        "@ApiTags('content')",
        "@ApiParam({ name: 'param', description: 'param ID' })",
        "@ApiResponse({ status: 200, description: 'Updated', type: UpdatePagesDto })",
        "@ApiResponse({ status: 404, description: 'Not found' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "UpdatePagesDto",
        "PagesDto"
      ],
      "priority": "HIGH",
      "module": "content"
    },
    {
      "endpoint": {
        "method": "PATCH",
        "normalized_path": "/content/banners/{param}",
        "path": "/content/banners/:id",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/content/content.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/content/content.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Update banners' })",
        "@ApiTags('content')",
        "@ApiParam({ name: 'param', description: 'param ID' })",
        "@ApiResponse({ status: 200, description: 'Updated', type: UpdateBannersDto })",
        "@ApiResponse({ status: 404, description: 'Not found' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "UpdateBannersDto",
        "BannersDto"
      ],
      "priority": "LOW",
      "module": "content"
    },
    {
      "endpoint": {
        "method": "PATCH",
        "normalized_path": "/content/my-subscription/cancel",
        "path": "/content/my-subscription/cancel",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/content/content.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/content/content.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Update cancel' })",
        "@ApiTags('content')",
        "@ApiResponse({ status: 200, description: 'Updated', type: UpdateCancelDto })",
        "@ApiResponse({ status: 404, description: 'Not found' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "UpdateCancelDto",
        "CancelDto"
      ],
      "priority": "LOW",
      "module": "content"
    },
    {
      "endpoint": {
        "method": "PATCH",
        "normalized_path": "/content/sections/{param}",
        "path": "/content/sections/:id",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/content/content.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/content/content.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Update sections' })",
        "@ApiTags('content')",
        "@ApiParam({ name: 'param', description: 'param ID' })",
        "@ApiResponse({ status: 200, description: 'Updated', type: UpdateSectionsDto })",
        "@ApiResponse({ status: 404, description: 'Not found' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "UpdateSectionsDto",
        "SectionsDto"
      ],
      "priority": "LOW",
      "module": "content"
    },
    {
      "endpoint": {
        "method": "PATCH",
        "normalized_path": "/delivery/cart/delivery-address",
        "path": "/delivery/cart/delivery-address",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/cart/cart.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/cart/cart.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Update delivery-address' })",
        "@ApiTags('cart')",
        "@ApiResponse({ status: 200, description: 'Updated', type: UpdateDelivery-addressDto })",
        "@ApiResponse({ status: 404, description: 'Not found' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "UpdateDelivery-addressDto",
        "Delivery-addressDto"
      ],
      "priority": "LOW",
      "module": "cart"
    },
    {
      "endpoint": {
        "method": "PATCH",
        "normalized_path": "/delivery/cart/items/{param}",
        "path": "/delivery/cart/items/:productId",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/cart/cart.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/cart/cart.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Update items' })",
        "@ApiTags('cart')",
        "@ApiParam({ name: 'param', description: 'param ID' })",
        "@ApiResponse({ status: 200, description: 'Updated', type: UpdateItemsDto })",
        "@ApiResponse({ status: 404, description: 'Not found' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "UpdateItemsDto",
        "ItemsDto"
      ],
      "priority": "LOW",
      "module": "cart"
    },
    {
      "endpoint": {
        "method": "PATCH",
        "normalized_path": "/delivery/cart/note",
        "path": "/delivery/cart/note",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/cart/cart.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/cart/cart.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Update note' })",
        "@ApiTags('cart')",
        "@ApiResponse({ status: 200, description: 'Updated', type: UpdateNoteDto })",
        "@ApiResponse({ status: 404, description: 'Not found' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "UpdateNoteDto",
        "NoteDto"
      ],
      "priority": "LOW",
      "module": "cart"
    },
    {
      "endpoint": {
        "method": "PATCH",
        "normalized_path": "/delivery/cart/shein/items/{param}",
        "path": "/delivery/cart/shein/items/:sheinProductId",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/cart/cart.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/cart/cart.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Update items' })",
        "@ApiTags('cart')",
        "@ApiParam({ name: 'param', description: 'param ID' })",
        "@ApiResponse({ status: 200, description: 'Updated', type: UpdateItemsDto })",
        "@ApiResponse({ status: 404, description: 'Not found' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "UpdateItemsDto",
        "ItemsDto"
      ],
      "priority": "LOW",
      "module": "cart"
    },
    {
      "endpoint": {
        "method": "PATCH",
        "normalized_path": "/delivery/cart/shein/note",
        "path": "/delivery/cart/shein/note",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/cart/cart.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/cart/cart.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Update note' })",
        "@ApiTags('cart')",
        "@ApiResponse({ status: 200, description: 'Updated', type: UpdateNoteDto })",
        "@ApiResponse({ status: 404, description: 'Not found' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "UpdateNoteDto",
        "NoteDto"
      ],
      "priority": "LOW",
      "module": "cart"
    },
    {
      "endpoint": {
        "method": "PATCH",
        "normalized_path": "/delivery/cart/shein/shipping",
        "path": "/delivery/cart/shein/shipping",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/cart/cart.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/cart/cart.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Update shipping' })",
        "@ApiTags('cart')",
        "@ApiResponse({ status: 200, description: 'Updated', type: UpdateShippingDto })",
        "@ApiResponse({ status: 404, description: 'Not found' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "UpdateShippingDto",
        "ShippingDto"
      ],
      "priority": "LOW",
      "module": "cart"
    },
    {
      "endpoint": {
        "method": "PATCH",
        "normalized_path": "/delivery/cart/{param}",
        "path": "/delivery/cart/:productId",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/cart/cart.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/cart/cart.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Update cart' })",
        "@ApiTags('cart')",
        "@ApiParam({ name: 'param', description: 'param ID' })",
        "@ApiResponse({ status: 200, description: 'Updated', type: UpdateCartDto })",
        "@ApiResponse({ status: 404, description: 'Not found' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "UpdateCartDto",
        "CartDto"
      ],
      "priority": "LOW",
      "module": "cart"
    },
    {
      "endpoint": {
        "method": "PATCH",
        "normalized_path": "/delivery/order/{param}/admin-status",
        "path": "/delivery/order/:id/admin-status",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/order/order.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/order/order.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Update admin-status' })",
        "@ApiTags('order')",
        "@ApiParam({ name: 'param', description: 'param ID' })",
        "@ApiResponse({ status: 200, description: 'Updated', type: UpdateAdmin-statusDto })",
        "@ApiResponse({ status: 404, description: 'Not found' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "UpdateAdmin-statusDto",
        "Admin-statusDto"
      ],
      "priority": "HIGH",
      "module": "order"
    },
    {
      "endpoint": {
        "method": "PATCH",
        "normalized_path": "/drivers/vacations/{param}/cancel",
        "path": "/drivers/vacations/:id/cancel",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/driver/driver.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/driver/driver.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Update cancel' })",
        "@ApiTags('driver')",
        "@ApiParam({ name: 'param', description: 'param ID' })",
        "@ApiResponse({ status: 200, description: 'Updated', type: UpdateCancelDto })",
        "@ApiResponse({ status: 404, description: 'Not found' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "UpdateCancelDto",
        "CancelDto"
      ],
      "priority": "MEDIUM",
      "module": "driver"
    },
    {
      "endpoint": {
        "method": "PATCH",
        "normalized_path": "/er/employees/{param}",
        "path": "/er/employees/:id",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/er/er.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/er/er.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Update employees' })",
        "@ApiTags('er')",
        "@ApiParam({ name: 'param', description: 'param ID' })",
        "@ApiResponse({ status: 200, description: 'Updated', type: UpdateEmployeesDto })",
        "@ApiResponse({ status: 404, description: 'Not found' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "UpdateEmployeesDto",
        "EmployeesDto"
      ],
      "priority": "LOW",
      "module": "er"
    },
    {
      "endpoint": {
        "method": "PATCH",
        "normalized_path": "/er/journal-entries/{param}/post",
        "path": "/er/journal-entries/:id/post",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/er/er.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/er/er.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Update post' })",
        "@ApiTags('er')",
        "@ApiParam({ name: 'param', description: 'param ID' })",
        "@ApiResponse({ status: 200, description: 'Updated', type: UpdatePostDto })",
        "@ApiResponse({ status: 404, description: 'Not found' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "UpdatePostDto",
        "PostDto"
      ],
      "priority": "LOW",
      "module": "er"
    },
    {
      "endpoint": {
        "method": "PATCH",
        "normalized_path": "/er/leave-requests/{param}/approve",
        "path": "/er/leave-requests/:id/approve",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/er/er.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/er/er.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Update approve' })",
        "@ApiTags('er')",
        "@ApiParam({ name: 'param', description: 'param ID' })",
        "@ApiResponse({ status: 200, description: 'Updated', type: UpdateApproveDto })",
        "@ApiResponse({ status: 404, description: 'Not found' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "UpdateApproveDto",
        "ApproveDto"
      ],
      "priority": "LOW",
      "module": "er"
    },
    {
      "endpoint": {
        "method": "PATCH",
        "normalized_path": "/er/leave-requests/{param}/reject",
        "path": "/er/leave-requests/:id/reject",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/er/er.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/er/er.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Update reject' })",
        "@ApiTags('er')",
        "@ApiParam({ name: 'param', description: 'param ID' })",
        "@ApiResponse({ status: 200, description: 'Updated', type: UpdateRejectDto })",
        "@ApiResponse({ status: 404, description: 'Not found' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "UpdateRejectDto",
        "RejectDto"
      ],
      "priority": "LOW",
      "module": "er"
    },
    {
      "endpoint": {
        "method": "PATCH",
        "normalized_path": "/er/payroll/{param}/approve",
        "path": "/er/payroll/:id/approve",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/er/er.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/er/er.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Update approve' })",
        "@ApiTags('er')",
        "@ApiParam({ name: 'param', description: 'param ID' })",
        "@ApiResponse({ status: 200, description: 'Updated', type: UpdateApproveDto })",
        "@ApiResponse({ status: 404, description: 'Not found' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "UpdateApproveDto",
        "ApproveDto"
      ],
      "priority": "LOW",
      "module": "er"
    },
    {
      "endpoint": {
        "method": "PATCH",
        "normalized_path": "/er/payroll/{param}/mark-paid",
        "path": "/er/payroll/:id/mark-paid",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/er/er.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/er/er.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Update mark-paid' })",
        "@ApiTags('er')",
        "@ApiParam({ name: 'param', description: 'param ID' })",
        "@ApiResponse({ status: 200, description: 'Updated', type: UpdateMark-paidDto })",
        "@ApiResponse({ status: 404, description: 'Not found' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "UpdateMark-paidDto",
        "Mark-paidDto"
      ],
      "priority": "LOW",
      "module": "er"
    },
    {
      "endpoint": {
        "method": "PATCH",
        "normalized_path": "/finance/commission-plans/{param}",
        "path": "/finance/commission-plans/:id",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/finance/finance.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/finance/finance.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Update commission-plans' })",
        "@ApiTags('finance')",
        "@ApiParam({ name: 'param', description: 'param ID' })",
        "@ApiResponse({ status: 200, description: 'Updated', type: UpdateCommission-plansDto })",
        "@ApiResponse({ status: 404, description: 'Not found' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "UpdateCommission-plansDto",
        "Commission-plansDto"
      ],
      "priority": "LOW",
      "module": "finance"
    },
    {
      "endpoint": {
        "method": "PATCH",
        "normalized_path": "/finance/commissions/{param}/approve",
        "path": "/finance/commissions/:id/approve",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/finance/finance.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/finance/finance.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Update approve' })",
        "@ApiTags('finance')",
        "@ApiParam({ name: 'param', description: 'param ID' })",
        "@ApiResponse({ status: 200, description: 'Updated', type: UpdateApproveDto })",
        "@ApiResponse({ status: 404, description: 'Not found' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "UpdateApproveDto",
        "ApproveDto"
      ],
      "priority": "LOW",
      "module": "finance"
    },
    {
      "endpoint": {
        "method": "PATCH",
        "normalized_path": "/finance/commissions/{param}/cancel",
        "path": "/finance/commissions/:id/cancel",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/finance/finance.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/finance/finance.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Update cancel' })",
        "@ApiTags('finance')",
        "@ApiParam({ name: 'param', description: 'param ID' })",
        "@ApiResponse({ status: 200, description: 'Updated', type: UpdateCancelDto })",
        "@ApiResponse({ status: 404, description: 'Not found' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "UpdateCancelDto",
        "CancelDto"
      ],
      "priority": "LOW",
      "module": "finance"
    },
    {
      "endpoint": {
        "method": "PATCH",
        "normalized_path": "/finance/coupons/{param}",
        "path": "/finance/coupons/:id",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/finance/finance.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/finance/finance.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Update coupons' })",
        "@ApiTags('finance')",
        "@ApiParam({ name: 'param', description: 'param ID' })",
        "@ApiResponse({ status: 200, description: 'Updated', type: UpdateCouponsDto })",
        "@ApiResponse({ status: 404, description: 'Not found' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "UpdateCouponsDto",
        "CouponsDto"
      ],
      "priority": "LOW",
      "module": "finance"
    },
    {
      "endpoint": {
        "method": "PATCH",
        "normalized_path": "/finance/payouts/batches/{param}/approve",
        "path": "/finance/payouts/batches/:id/approve",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/finance/finance.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/finance/finance.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Update approve' })",
        "@ApiTags('finance')",
        "@ApiParam({ name: 'param', description: 'param ID' })",
        "@ApiResponse({ status: 200, description: 'Updated', type: UpdateApproveDto })",
        "@ApiResponse({ status: 404, description: 'Not found' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "UpdateApproveDto",
        "ApproveDto"
      ],
      "priority": "LOW",
      "module": "finance"
    },
    {
      "endpoint": {
        "method": "PATCH",
        "normalized_path": "/finance/payouts/batches/{param}/complete",
        "path": "/finance/payouts/batches/:id/complete",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/finance/finance.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/finance/finance.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Update complete' })",
        "@ApiTags('finance')",
        "@ApiParam({ name: 'param', description: 'param ID' })",
        "@ApiResponse({ status: 200, description: 'Updated', type: UpdateCompleteDto })",
        "@ApiResponse({ status: 404, description: 'Not found' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "UpdateCompleteDto",
        "CompleteDto"
      ],
      "priority": "LOW",
      "module": "finance"
    },
    {
      "endpoint": {
        "method": "PATCH",
        "normalized_path": "/finance/reconciliations/{param}/actual-totals",
        "path": "/finance/reconciliations/:id/actual-totals",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/finance/finance.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/finance/finance.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Update actual-totals' })",
        "@ApiTags('finance')",
        "@ApiParam({ name: 'param', description: 'param ID' })",
        "@ApiResponse({ status: 200, description: 'Updated', type: UpdateActual-totalsDto })",
        "@ApiResponse({ status: 404, description: 'Not found' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "UpdateActual-totalsDto",
        "Actual-totalsDto"
      ],
      "priority": "LOW",
      "module": "finance"
    },
    {
      "endpoint": {
        "method": "PATCH",
        "normalized_path": "/finance/reconciliations/{param}/issues/{param}/resolve",
        "path": "/finance/reconciliations/:id/issues/:issueIndex/resolve",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/finance/finance.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/finance/finance.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Update resolve' })",
        "@ApiTags('finance')",
        "@ApiParam({ name: 'param', description: 'param ID' })",
        "@ApiParam({ name: 'param', description: 'param ID' })",
        "@ApiResponse({ status: 200, description: 'Updated', type: UpdateResolveDto })",
        "@ApiResponse({ status: 404, description: 'Not found' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "UpdateResolveDto",
        "ResolveDto"
      ],
      "priority": "LOW",
      "module": "finance"
    },
    {
      "endpoint": {
        "method": "PATCH",
        "normalized_path": "/finance/reports/{param}/finalize",
        "path": "/finance/reports/:id/finalize",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/finance/finance.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/finance/finance.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Update finalize' })",
        "@ApiTags('finance')",
        "@ApiParam({ name: 'param', description: 'param ID' })",
        "@ApiResponse({ status: 200, description: 'Updated', type: UpdateFinalizeDto })",
        "@ApiResponse({ status: 404, description: 'Not found' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "UpdateFinalizeDto",
        "FinalizeDto"
      ],
      "priority": "LOW",
      "module": "finance"
    },
    {
      "endpoint": {
        "method": "PATCH",
        "normalized_path": "/finance/settlements/{param}/approve",
        "path": "/finance/settlements/:id/approve",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/finance/finance.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/finance/finance.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Update approve' })",
        "@ApiTags('finance')",
        "@ApiParam({ name: 'param', description: 'param ID' })",
        "@ApiResponse({ status: 200, description: 'Updated', type: UpdateApproveDto })",
        "@ApiResponse({ status: 404, description: 'Not found' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "UpdateApproveDto",
        "ApproveDto"
      ],
      "priority": "LOW",
      "module": "finance"
    },
    {
      "endpoint": {
        "method": "PATCH",
        "normalized_path": "/legal/admin/privacy-policy/{param}/activate",
        "path": "/legal/admin/privacy-policy/:id/activate",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/legal/legal.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/legal/legal.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Update activate' })",
        "@ApiTags('legal')",
        "@ApiParam({ name: 'param', description: 'param ID' })",
        "@ApiResponse({ status: 200, description: 'Updated', type: UpdateActivateDto })",
        "@ApiResponse({ status: 404, description: 'Not found' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "UpdateActivateDto",
        "ActivateDto"
      ],
      "priority": "HIGH",
      "module": "legal"
    },
    {
      "endpoint": {
        "method": "PATCH",
        "normalized_path": "/legal/admin/terms-of-service/{param}/activate",
        "path": "/legal/admin/terms-of-service/:id/activate",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/legal/legal.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/legal/legal.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Update activate' })",
        "@ApiTags('legal')",
        "@ApiParam({ name: 'param', description: 'param ID' })",
        "@ApiResponse({ status: 200, description: 'Updated', type: UpdateActivateDto })",
        "@ApiResponse({ status: 404, description: 'Not found' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "UpdateActivateDto",
        "ActivateDto"
      ],
      "priority": "HIGH",
      "module": "legal"
    },
    {
      "endpoint": {
        "method": "PATCH",
        "normalized_path": "/marketer/notifications/{param}/read",
        "path": "/marketer/notifications/:id/read",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/marketer/marketer.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/marketer/marketer.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Update read' })",
        "@ApiTags('marketer')",
        "@ApiParam({ name: 'param', description: 'param ID' })",
        "@ApiResponse({ status: 200, description: 'Updated', type: UpdateReadDto })",
        "@ApiResponse({ status: 404, description: 'Not found' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "UpdateReadDto",
        "ReadDto"
      ],
      "priority": "LOW",
      "module": "marketer"
    },
    {
      "endpoint": {
        "method": "PATCH",
        "normalized_path": "/marketer/profile",
        "path": "/marketer/profile",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/marketer/marketer.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/marketer/marketer.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Update profile' })",
        "@ApiTags('marketer')",
        "@ApiResponse({ status: 200, description: 'Updated', type: UpdateProfileDto })",
        "@ApiResponse({ status: 404, description: 'Not found' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "UpdateProfileDto",
        "ProfileDto"
      ],
      "priority": "LOW",
      "module": "marketer"
    },
    {
      "endpoint": {
        "method": "PATCH",
        "normalized_path": "/merchant/attributes/{param}",
        "path": "/merchant/attributes/:id",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/merchant/merchant.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/merchant/merchant.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Update attributes' })",
        "@ApiTags('merchant')",
        "@ApiParam({ name: 'param', description: 'param ID' })",
        "@ApiResponse({ status: 200, description: 'Updated', type: UpdateAttributesDto })",
        "@ApiResponse({ status: 404, description: 'Not found' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "UpdateAttributesDto",
        "AttributesDto"
      ],
      "priority": "LOW",
      "module": "merchant"
    },
    {
      "endpoint": {
        "method": "PATCH",
        "normalized_path": "/merchant/catalog/products/{param}",
        "path": "/merchant/catalog/products/:id",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/merchant/merchant.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/merchant/merchant.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Update products' })",
        "@ApiTags('merchant')",
        "@ApiParam({ name: 'param', description: 'param ID' })",
        "@ApiResponse({ status: 200, description: 'Updated', type: UpdateProductsDto })",
        "@ApiResponse({ status: 404, description: 'Not found' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "UpdateProductsDto",
        "ProductsDto"
      ],
      "priority": "LOW",
      "module": "merchant"
    },
    {
      "endpoint": {
        "method": "PATCH",
        "normalized_path": "/merchant/categories/{param}",
        "path": "/merchant/categories/:id",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/merchant/merchant.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/merchant/merchant.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Update categories' })",
        "@ApiTags('merchant')",
        "@ApiParam({ name: 'param', description: 'param ID' })",
        "@ApiResponse({ status: 200, description: 'Updated', type: UpdateCategoriesDto })",
        "@ApiResponse({ status: 404, description: 'Not found' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "UpdateCategoriesDto",
        "CategoriesDto"
      ],
      "priority": "LOW",
      "module": "merchant"
    },
    {
      "endpoint": {
        "method": "PATCH",
        "normalized_path": "/merchant/products/{param}",
        "path": "/merchant/products/:id",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/merchant/merchant.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/merchant/merchant.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Update products' })",
        "@ApiTags('merchant')",
        "@ApiParam({ name: 'param', description: 'param ID' })",
        "@ApiResponse({ status: 200, description: 'Updated', type: UpdateProductsDto })",
        "@ApiResponse({ status: 404, description: 'Not found' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "UpdateProductsDto",
        "ProductsDto"
      ],
      "priority": "LOW",
      "module": "merchant"
    },
    {
      "endpoint": {
        "method": "PATCH",
        "normalized_path": "/merchant/products/{param}/stock",
        "path": "/merchant/products/:id/stock",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/merchant/merchant.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/merchant/merchant.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Update stock' })",
        "@ApiTags('merchant')",
        "@ApiParam({ name: 'param', description: 'param ID' })",
        "@ApiResponse({ status: 200, description: 'Updated', type: UpdateStockDto })",
        "@ApiResponse({ status: 404, description: 'Not found' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "UpdateStockDto",
        "StockDto"
      ],
      "priority": "LOW",
      "module": "merchant"
    },
    {
      "endpoint": {
        "method": "PATCH",
        "normalized_path": "/merchant/{param}",
        "path": "/merchant/:id",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/merchant/merchant.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/merchant/merchant.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Update merchant' })",
        "@ApiTags('merchant')",
        "@ApiParam({ name: 'param', description: 'param ID' })",
        "@ApiResponse({ status: 200, description: 'Updated', type: UpdateMerchantDto })",
        "@ApiResponse({ status: 404, description: 'Not found' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "UpdateMerchantDto",
        "MerchantDto"
      ],
      "priority": "LOW",
      "module": "merchant"
    },
    {
      "endpoint": {
        "method": "PATCH",
        "normalized_path": "/onboarding/{param}/approve",
        "path": "/onboarding/:id/approve",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/onboarding/onboarding.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/onboarding/onboarding.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Update approve' })",
        "@ApiTags('onboarding')",
        "@ApiParam({ name: 'param', description: 'param ID' })",
        "@ApiResponse({ status: 200, description: 'Updated', type: UpdateApproveDto })",
        "@ApiResponse({ status: 404, description: 'Not found' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "UpdateApproveDto",
        "ApproveDto"
      ],
      "priority": "LOW",
      "module": "onboarding"
    },
    {
      "endpoint": {
        "method": "PATCH",
        "normalized_path": "/onboarding/{param}/reject",
        "path": "/onboarding/:id/reject",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/onboarding/onboarding.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/onboarding/onboarding.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Update reject' })",
        "@ApiTags('onboarding')",
        "@ApiParam({ name: 'param', description: 'param ID' })",
        "@ApiResponse({ status: 200, description: 'Updated', type: UpdateRejectDto })",
        "@ApiResponse({ status: 404, description: 'Not found' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "UpdateRejectDto",
        "RejectDto"
      ],
      "priority": "LOW",
      "module": "onboarding"
    },
    {
      "endpoint": {
        "method": "PATCH",
        "normalized_path": "/orders-cqrs/{param}/status",
        "path": "/orders-cqrs/:id/status",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/order/order-cqrs.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/order/order-cqrs.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Update status' })",
        "@ApiTags('order')",
        "@ApiParam({ name: 'param', description: 'param ID' })",
        "@ApiResponse({ status: 200, description: 'Updated', type: UpdateStatusDto })",
        "@ApiResponse({ status: 404, description: 'Not found' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "UpdateStatusDto",
        "StatusDto"
      ],
      "priority": "HIGH",
      "module": "order"
    },
    {
      "endpoint": {
        "method": "PATCH",
        "normalized_path": "/promotions/{param}",
        "path": "/promotions/:id",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/promotion/promotion.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/promotion/promotion.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Update promotions' })",
        "@ApiTags('promotion')",
        "@ApiParam({ name: 'param', description: 'param ID' })",
        "@ApiResponse({ status: 200, description: 'Updated', type: UpdatePromotionsDto })",
        "@ApiResponse({ status: 404, description: 'Not found' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "UpdatePromotionsDto",
        "PromotionsDto"
      ],
      "priority": "LOW",
      "module": "promotion"
    },
    {
      "endpoint": {
        "method": "PATCH",
        "normalized_path": "/shifts/{param}",
        "path": "/shifts/:id",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/shift/shift.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/shift/shift.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Update shifts' })",
        "@ApiTags('shift')",
        "@ApiParam({ name: 'param', description: 'param ID' })",
        "@ApiResponse({ status: 200, description: 'Updated', type: UpdateShiftsDto })",
        "@ApiResponse({ status: 404, description: 'Not found' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "UpdateShiftsDto",
        "ShiftsDto"
      ],
      "priority": "LOW",
      "module": "shift"
    },
    {
      "endpoint": {
        "method": "PATCH",
        "normalized_path": "/support/admin/tickets/{param}/assign",
        "path": "/support/admin/tickets/:id/assign",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/support/support.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/support/support.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Update assign' })",
        "@ApiTags('support')",
        "@ApiParam({ name: 'param', description: 'param ID' })",
        "@ApiResponse({ status: 200, description: 'Updated', type: UpdateAssignDto })",
        "@ApiResponse({ status: 404, description: 'Not found' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "UpdateAssignDto",
        "AssignDto"
      ],
      "priority": "HIGH",
      "module": "support"
    },
    {
      "endpoint": {
        "method": "PATCH",
        "normalized_path": "/support/admin/tickets/{param}/resolve",
        "path": "/support/admin/tickets/:id/resolve",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/support/support.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/support/support.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Update resolve' })",
        "@ApiTags('support')",
        "@ApiParam({ name: 'param', description: 'param ID' })",
        "@ApiResponse({ status: 200, description: 'Updated', type: UpdateResolveDto })",
        "@ApiResponse({ status: 404, description: 'Not found' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "UpdateResolveDto",
        "ResolveDto"
      ],
      "priority": "HIGH",
      "module": "support"
    },
    {
      "endpoint": {
        "method": "PATCH",
        "normalized_path": "/support/tickets/{param}/messages",
        "path": "/support/tickets/:id/messages",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/support/support.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/support/support.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Update messages' })",
        "@ApiTags('support')",
        "@ApiParam({ name: 'param', description: 'param ID' })",
        "@ApiResponse({ status: 200, description: 'Updated', type: UpdateMessagesDto })",
        "@ApiResponse({ status: 404, description: 'Not found' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "UpdateMessagesDto",
        "MessagesDto"
      ],
      "priority": "LOW",
      "module": "support"
    },
    {
      "endpoint": {
        "method": "PATCH",
        "normalized_path": "/support/tickets/{param}/rate",
        "path": "/support/tickets/:id/rate",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/support/support.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/support/support.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Update rate' })",
        "@ApiTags('support')",
        "@ApiParam({ name: 'param', description: 'param ID' })",
        "@ApiResponse({ status: 200, description: 'Updated', type: UpdateRateDto })",
        "@ApiResponse({ status: 404, description: 'Not found' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "UpdateRateDto",
        "RateDto"
      ],
      "priority": "LOW",
      "module": "support"
    },
    {
      "endpoint": {
        "method": "PATCH",
        "normalized_path": "/users/addresses/{param}",
        "path": "/users/addresses/:addressId",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/user/user.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/user/user.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Update addresses' })",
        "@ApiTags('user')",
        "@ApiParam({ name: 'param', description: 'param ID' })",
        "@ApiResponse({ status: 200, description: 'Updated', type: UpdateAddressesDto })",
        "@ApiResponse({ status: 404, description: 'Not found' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "UpdateAddressesDto",
        "AddressesDto"
      ],
      "priority": "MEDIUM",
      "module": "user"
    },
    {
      "endpoint": {
        "method": "PATCH",
        "normalized_path": "/users/me",
        "path": "/users/me",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/user/user.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/user/user.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Update me' })",
        "@ApiTags('user')",
        "@ApiResponse({ status: 200, description: 'Updated', type: UpdateMeDto })",
        "@ApiResponse({ status: 404, description: 'Not found' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "UpdateMeDto",
        "MeDto"
      ],
      "priority": "MEDIUM",
      "module": "user"
    },
    {
      "endpoint": {
        "method": "PATCH",
        "normalized_path": "/utility/options/gas",
        "path": "/utility/options/gas",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/utility/utility.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/utility/utility.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Update gas' })",
        "@ApiTags('utility')",
        "@ApiResponse({ status: 200, description: 'Updated', type: UpdateGasDto })",
        "@ApiResponse({ status: 404, description: 'Not found' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "UpdateGasDto",
        "GasDto"
      ],
      "priority": "LOW",
      "module": "utility"
    },
    {
      "endpoint": {
        "method": "PATCH",
        "normalized_path": "/utility/options/water",
        "path": "/utility/options/water",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/utility/utility.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/utility/utility.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Update water' })",
        "@ApiTags('utility')",
        "@ApiResponse({ status: 200, description: 'Updated', type: UpdateWaterDto })",
        "@ApiResponse({ status: 404, description: 'Not found' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "UpdateWaterDto",
        "WaterDto"
      ],
      "priority": "LOW",
      "module": "utility"
    },
    {
      "endpoint": {
        "method": "PATCH",
        "normalized_path": "/utility/order/{param}/cancel",
        "path": "/utility/order/:id/cancel",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/utility/utility.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/utility/utility.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Update cancel' })",
        "@ApiTags('utility')",
        "@ApiParam({ name: 'param', description: 'param ID' })",
        "@ApiResponse({ status: 200, description: 'Updated', type: UpdateCancelDto })",
        "@ApiResponse({ status: 404, description: 'Not found' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "UpdateCancelDto",
        "CancelDto"
      ],
      "priority": "HIGH",
      "module": "utility"
    },
    {
      "endpoint": {
        "method": "PATCH",
        "normalized_path": "/utility/order/{param}/status",
        "path": "/utility/order/:id/status",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/utility/utility.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/utility/utility.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Update status' })",
        "@ApiTags('utility')",
        "@ApiParam({ name: 'param', description: 'param ID' })",
        "@ApiResponse({ status: 200, description: 'Updated', type: UpdateStatusDto })",
        "@ApiResponse({ status: 404, description: 'Not found' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "UpdateStatusDto",
        "StatusDto"
      ],
      "priority": "HIGH",
      "module": "utility"
    },
    {
      "endpoint": {
        "method": "PATCH",
        "normalized_path": "/utility/pricing/{param}",
        "path": "/utility/pricing/:city",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/utility/utility.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/utility/utility.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Update pricing' })",
        "@ApiTags('utility')",
        "@ApiParam({ name: 'param', description: 'param ID' })",
        "@ApiResponse({ status: 200, description: 'Updated', type: UpdatePricingDto })",
        "@ApiResponse({ status: 404, description: 'Not found' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "UpdatePricingDto",
        "PricingDto"
      ],
      "priority": "LOW",
      "module": "utility"
    },
    {
      "endpoint": {
        "method": "PATCH",
        "normalized_path": "/vendors/{param}",
        "path": "/vendors/:id",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/vendor/vendor.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/vendor/vendor.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Update vendors' })",
        "@ApiTags('vendor')",
        "@ApiParam({ name: 'param', description: 'param ID' })",
        "@ApiResponse({ status: 200, description: 'Updated', type: UpdateVendorsDto })",
        "@ApiResponse({ status: 404, description: 'Not found' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "UpdateVendorsDto",
        "VendorsDto"
      ],
      "priority": "MEDIUM",
      "module": "vendor"
    },
    {
      "endpoint": {
        "method": "PATCH",
        "normalized_path": "/vendors/{param}/status",
        "path": "/vendors/:id/status",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/vendor/vendor.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/vendor/vendor.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Update status' })",
        "@ApiTags('vendor')",
        "@ApiParam({ name: 'param', description: 'param ID' })",
        "@ApiResponse({ status: 200, description: 'Updated', type: UpdateStatusDto })",
        "@ApiResponse({ status: 404, description: 'Not found' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "UpdateStatusDto",
        "StatusDto"
      ],
      "priority": "MEDIUM",
      "module": "vendor"
    },
    {
      "endpoint": {
        "method": "PATCH",
        "normalized_path": "/wallet/withdraw/{param}/cancel",
        "path": "/wallet/withdraw/:id/cancel",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/wallet/wallet.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/wallet/wallet.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Update cancel' })",
        "@ApiTags('wallet')",
        "@ApiParam({ name: 'param', description: 'param ID' })",
        "@ApiResponse({ status: 200, description: 'Updated', type: UpdateCancelDto })",
        "@ApiResponse({ status: 404, description: 'Not found' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "UpdateCancelDto",
        "CancelDto"
      ],
      "priority": "LOW",
      "module": "wallet"
    },
    {
      "endpoint": {
        "method": "POST",
        "normalized_path": "/admin/backup/create",
        "path": "/admin/backup/create",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/admin/admin.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/admin/admin.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Create create' })",
        "@ApiTags('admin')",
        "@ApiResponse({ status: 201, description: 'Created', type: CreateCreateDto })",
        "@ApiResponse({ status: 400, description: 'Bad request' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "CreateCreateDto",
        "CreateDto"
      ],
      "priority": "HIGH",
      "module": "admin"
    },
    {
      "endpoint": {
        "method": "POST",
        "normalized_path": "/admin/backup/{param}/restore",
        "path": "/admin/backup/:id/restore",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/admin/admin.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/admin/admin.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Create restore' })",
        "@ApiTags('admin')",
        "@ApiParam({ name: 'param', description: 'param ID' })",
        "@ApiResponse({ status: 201, description: 'Created', type: CreateRestoreDto })",
        "@ApiResponse({ status: 400, description: 'Bad request' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "CreateRestoreDto",
        "RestoreDto"
      ],
      "priority": "HIGH",
      "module": "admin"
    },
    {
      "endpoint": {
        "method": "POST",
        "normalized_path": "/admin/cache/clear",
        "path": "/admin/cache/clear",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/admin/admin.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/admin/admin.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Create clear' })",
        "@ApiTags('admin')",
        "@ApiResponse({ status: 201, description: 'Created', type: CreateClearDto })",
        "@ApiResponse({ status: 400, description: 'Bad request' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "CreateClearDto",
        "ClearDto"
      ],
      "priority": "HIGH",
      "module": "admin"
    },
    {
      "endpoint": {
        "method": "POST",
        "normalized_path": "/admin/drivers/{param}/attendance/adjust",
        "path": "/admin/drivers/:id/attendance/adjust",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/admin/admin.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/admin/admin.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Create adjust' })",
        "@ApiTags('admin')",
        "@ApiParam({ name: 'param', description: 'param ID' })",
        "@ApiResponse({ status: 201, description: 'Created', type: CreateAdjustDto })",
        "@ApiResponse({ status: 400, description: 'Bad request' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "CreateAdjustDto",
        "AdjustDto"
      ],
      "priority": "HIGH",
      "module": "admin"
    },
    {
      "endpoint": {
        "method": "POST",
        "normalized_path": "/admin/drivers/{param}/ban",
        "path": "/admin/drivers/:id/ban",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/admin/admin.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/admin/admin.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Create ban' })",
        "@ApiTags('admin')",
        "@ApiParam({ name: 'param', description: 'param ID' })",
        "@ApiResponse({ status: 201, description: 'Created', type: CreateBanDto })",
        "@ApiResponse({ status: 400, description: 'Bad request' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "CreateBanDto",
        "BanDto"
      ],
      "priority": "HIGH",
      "module": "admin"
    },
    {
      "endpoint": {
        "method": "POST",
        "normalized_path": "/admin/drivers/{param}/unban",
        "path": "/admin/drivers/:id/unban",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/admin/admin.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/admin/admin.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Create unban' })",
        "@ApiTags('admin')",
        "@ApiParam({ name: 'param', description: 'param ID' })",
        "@ApiResponse({ status: 201, description: 'Created', type: CreateUnbanDto })",
        "@ApiResponse({ status: 400, description: 'Bad request' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "CreateUnbanDto",
        "UnbanDto"
      ],
      "priority": "HIGH",
      "module": "admin"
    },
    {
      "endpoint": {
        "method": "POST",
        "normalized_path": "/admin/marketers",
        "path": "/admin/marketers",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/admin/admin.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/admin/admin.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Create marketers' })",
        "@ApiTags('admin')",
        "@ApiResponse({ status: 201, description: 'Created', type: CreateMarketersDto })",
        "@ApiResponse({ status: 400, description: 'Bad request' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "CreateMarketersDto",
        "MarketersDto"
      ],
      "priority": "HIGH",
      "module": "admin"
    },
    {
      "endpoint": {
        "method": "POST",
        "normalized_path": "/admin/marketers/{param}/activate",
        "path": "/admin/marketers/:id/activate",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/admin/admin.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/admin/admin.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Create activate' })",
        "@ApiTags('admin')",
        "@ApiParam({ name: 'param', description: 'param ID' })",
        "@ApiResponse({ status: 201, description: 'Created', type: CreateActivateDto })",
        "@ApiResponse({ status: 400, description: 'Bad request' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "CreateActivateDto",
        "ActivateDto"
      ],
      "priority": "HIGH",
      "module": "admin"
    },
    {
      "endpoint": {
        "method": "POST",
        "normalized_path": "/admin/marketers/{param}/deactivate",
        "path": "/admin/marketers/:id/deactivate",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/admin/admin.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/admin/admin.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Create deactivate' })",
        "@ApiTags('admin')",
        "@ApiParam({ name: 'param', description: 'param ID' })",
        "@ApiResponse({ status: 201, description: 'Created', type: CreateDeactivateDto })",
        "@ApiResponse({ status: 400, description: 'Bad request' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "CreateDeactivateDto",
        "DeactivateDto"
      ],
      "priority": "HIGH",
      "module": "admin"
    },
    {
      "endpoint": {
        "method": "POST",
        "normalized_path": "/admin/roles",
        "path": "/admin/roles",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/admin/admin.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/admin/admin.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Create roles' })",
        "@ApiTags('admin')",
        "@ApiResponse({ status: 201, description: 'Created', type: CreateRolesDto })",
        "@ApiResponse({ status: 400, description: 'Bad request' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "CreateRolesDto",
        "RolesDto"
      ],
      "priority": "HIGH",
      "module": "admin"
    },
    {
      "endpoint": {
        "method": "POST",
        "normalized_path": "/admin/security/reset-password/{param}",
        "path": "/admin/security/reset-password/:userId",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/admin/admin.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/admin/admin.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Create reset-password' })",
        "@ApiTags('admin')",
        "@ApiParam({ name: 'param', description: 'param ID' })",
        "@ApiResponse({ status: 201, description: 'Created', type: CreateReset-passwordDto })",
        "@ApiResponse({ status: 400, description: 'Bad request' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "CreateReset-passwordDto",
        "Reset-passwordDto"
      ],
      "priority": "HIGH",
      "module": "admin"
    },
    {
      "endpoint": {
        "method": "POST",
        "normalized_path": "/admin/security/unlock-account/{param}",
        "path": "/admin/security/unlock-account/:userId",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/admin/admin.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/admin/admin.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Create unlock-account' })",
        "@ApiTags('admin')",
        "@ApiParam({ name: 'param', description: 'param ID' })",
        "@ApiResponse({ status: 201, description: 'Created', type: CreateUnlock-accountDto })",
        "@ApiResponse({ status: 400, description: 'Bad request' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "CreateUnlock-accountDto",
        "Unlock-accountDto"
      ],
      "priority": "HIGH",
      "module": "admin"
    },
    {
      "endpoint": {
        "method": "POST",
        "normalized_path": "/admin/stores",
        "path": "/admin/stores",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/store/store.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/store/store.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Create stores' })",
        "@ApiTags('store')",
        "@ApiResponse({ status: 201, description: 'Created', type: CreateStoresDto })",
        "@ApiResponse({ status: 400, description: 'Bad request' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "CreateStoresDto",
        "StoresDto"
      ],
      "priority": "HIGH",
      "module": "store"
    },
    {
      "endpoint": {
        "method": "POST",
        "normalized_path": "/admin/stores/products",
        "path": "/admin/stores/products",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/store/store.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/store/store.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Create products' })",
        "@ApiTags('store')",
        "@ApiResponse({ status: 201, description: 'Created', type: CreateProductsDto })",
        "@ApiResponse({ status: 400, description: 'Bad request' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "CreateProductsDto",
        "ProductsDto"
      ],
      "priority": "HIGH",
      "module": "store"
    },
    {
      "endpoint": {
        "method": "POST",
        "normalized_path": "/admin/stores/products/{param}/variants",
        "path": "/admin/stores/products/:id/variants",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/store/store.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/store/store.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Create variants' })",
        "@ApiTags('store')",
        "@ApiParam({ name: 'param', description: 'param ID' })",
        "@ApiResponse({ status: 201, description: 'Created', type: CreateVariantsDto })",
        "@ApiResponse({ status: 400, description: 'Bad request' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "CreateVariantsDto",
        "VariantsDto"
      ],
      "priority": "HIGH",
      "module": "store"
    },
    {
      "endpoint": {
        "method": "POST",
        "normalized_path": "/admin/stores/{param}/activate",
        "path": "/admin/stores/:id/activate",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/store/store.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/store/store.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Create activate' })",
        "@ApiTags('store')",
        "@ApiParam({ name: 'param', description: 'param ID' })",
        "@ApiResponse({ status: 201, description: 'Created', type: CreateActivateDto })",
        "@ApiResponse({ status: 400, description: 'Bad request' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "CreateActivateDto",
        "ActivateDto"
      ],
      "priority": "HIGH",
      "module": "store"
    },
    {
      "endpoint": {
        "method": "POST",
        "normalized_path": "/admin/stores/{param}/approve",
        "path": "/admin/stores/:id/approve",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/store/store.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/store/store.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Create approve' })",
        "@ApiTags('store')",
        "@ApiParam({ name: 'param', description: 'param ID' })",
        "@ApiResponse({ status: 201, description: 'Created', type: CreateApproveDto })",
        "@ApiResponse({ status: 400, description: 'Bad request' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "CreateApproveDto",
        "ApproveDto"
      ],
      "priority": "HIGH",
      "module": "store"
    },
    {
      "endpoint": {
        "method": "POST",
        "normalized_path": "/admin/stores/{param}/deactivate",
        "path": "/admin/stores/:id/deactivate",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/store/store.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/store/store.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Create deactivate' })",
        "@ApiTags('store')",
        "@ApiParam({ name: 'param', description: 'param ID' })",
        "@ApiResponse({ status: 201, description: 'Created', type: CreateDeactivateDto })",
        "@ApiResponse({ status: 400, description: 'Bad request' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "CreateDeactivateDto",
        "DeactivateDto"
      ],
      "priority": "HIGH",
      "module": "store"
    },
    {
      "endpoint": {
        "method": "POST",
        "normalized_path": "/admin/stores/{param}/force-close",
        "path": "/admin/stores/:id/force-close",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/store/store.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/store/store.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Create force-close' })",
        "@ApiTags('store')",
        "@ApiParam({ name: 'param', description: 'param ID' })",
        "@ApiResponse({ status: 201, description: 'Created', type: CreateForce-closeDto })",
        "@ApiResponse({ status: 400, description: 'Bad request' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "CreateForce-closeDto",
        "Force-closeDto"
      ],
      "priority": "HIGH",
      "module": "store"
    },
    {
      "endpoint": {
        "method": "POST",
        "normalized_path": "/admin/stores/{param}/force-open",
        "path": "/admin/stores/:id/force-open",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/store/store.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/store/store.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Create force-open' })",
        "@ApiTags('store')",
        "@ApiParam({ name: 'param', description: 'param ID' })",
        "@ApiResponse({ status: 201, description: 'Created', type: CreateForce-openDto })",
        "@ApiResponse({ status: 400, description: 'Bad request' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "CreateForce-openDto",
        "Force-openDto"
      ],
      "priority": "HIGH",
      "module": "store"
    },
    {
      "endpoint": {
        "method": "POST",
        "normalized_path": "/admin/stores/{param}/reject",
        "path": "/admin/stores/:id/reject",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/store/store.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/store/store.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Create reject' })",
        "@ApiTags('store')",
        "@ApiParam({ name: 'param', description: 'param ID' })",
        "@ApiResponse({ status: 201, description: 'Created', type: CreateRejectDto })",
        "@ApiResponse({ status: 400, description: 'Bad request' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "CreateRejectDto",
        "RejectDto"
      ],
      "priority": "HIGH",
      "module": "store"
    },
    {
      "endpoint": {
        "method": "POST",
        "normalized_path": "/admin/stores/{param}/suspend",
        "path": "/admin/stores/:id/suspend",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/store/store.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/store/store.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Create suspend' })",
        "@ApiTags('store')",
        "@ApiParam({ name: 'param', description: 'param ID' })",
        "@ApiResponse({ status: 201, description: 'Created', type: CreateSuspendDto })",
        "@ApiResponse({ status: 400, description: 'Bad request' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "CreateSuspendDto",
        "SuspendDto"
      ],
      "priority": "HIGH",
      "module": "store"
    },
    {
      "endpoint": {
        "method": "POST",
        "normalized_path": "/admin/users/{param}/ban",
        "path": "/admin/users/:id/ban",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/admin/admin.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/admin/admin.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Create ban' })",
        "@ApiTags('admin')",
        "@ApiParam({ name: 'param', description: 'param ID' })",
        "@ApiResponse({ status: 201, description: 'Created', type: CreateBanDto })",
        "@ApiResponse({ status: 400, description: 'Bad request' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "CreateBanDto",
        "BanDto"
      ],
      "priority": "HIGH",
      "module": "admin"
    },
    {
      "endpoint": {
        "method": "POST",
        "normalized_path": "/admin/users/{param}/unban",
        "path": "/admin/users/:id/unban",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/admin/admin.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/admin/admin.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Create unban' })",
        "@ApiTags('admin')",
        "@ApiParam({ name: 'param', description: 'param ID' })",
        "@ApiResponse({ status: 201, description: 'Created', type: CreateUnbanDto })",
        "@ApiResponse({ status: 400, description: 'Bad request' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "CreateUnbanDto",
        "UnbanDto"
      ],
      "priority": "HIGH",
      "module": "admin"
    },
    {
      "endpoint": {
        "method": "POST",
        "normalized_path": "/admin/vendors/{param}/approve",
        "path": "/admin/vendors/:id/approve",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/admin/admin.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/admin/admin.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Create approve' })",
        "@ApiTags('admin')",
        "@ApiParam({ name: 'param', description: 'param ID' })",
        "@ApiResponse({ status: 201, description: 'Created', type: CreateApproveDto })",
        "@ApiResponse({ status: 400, description: 'Bad request' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "CreateApproveDto",
        "ApproveDto"
      ],
      "priority": "HIGH",
      "module": "admin"
    },
    {
      "endpoint": {
        "method": "POST",
        "normalized_path": "/admin/vendors/{param}/reject",
        "path": "/admin/vendors/:id/reject",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/admin/admin.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/admin/admin.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Create reject' })",
        "@ApiTags('admin')",
        "@ApiParam({ name: 'param', description: 'param ID' })",
        "@ApiResponse({ status: 201, description: 'Created', type: CreateRejectDto })",
        "@ApiResponse({ status: 400, description: 'Bad request' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "CreateRejectDto",
        "RejectDto"
      ],
      "priority": "HIGH",
      "module": "admin"
    },
    {
      "endpoint": {
        "method": "POST",
        "normalized_path": "/admin/vendors/{param}/suspend",
        "path": "/admin/vendors/:id/suspend",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/admin/admin.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/admin/admin.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Create suspend' })",
        "@ApiTags('admin')",
        "@ApiParam({ name: 'param', description: 'param ID' })",
        "@ApiResponse({ status: 201, description: 'Created', type: CreateSuspendDto })",
        "@ApiResponse({ status: 400, description: 'Bad request' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "CreateSuspendDto",
        "SuspendDto"
      ],
      "priority": "HIGH",
      "module": "admin"
    },
    {
      "endpoint": {
        "method": "POST",
        "normalized_path": "/akhdimni/admin/errands/{param}/assign-driver",
        "path": "/akhdimni/admin/errands/:id/assign-driver",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/akhdimni/akhdimni.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/akhdimni/akhdimni.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Create assign-driver' })",
        "@ApiTags('akhdimni')",
        "@ApiParam({ name: 'param', description: 'param ID' })",
        "@ApiResponse({ status: 201, description: 'Created', type: CreateAssign-driverDto })",
        "@ApiResponse({ status: 400, description: 'Bad request' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "CreateAssign-driverDto",
        "Assign-driverDto"
      ],
      "priority": "HIGH",
      "module": "akhdimni"
    },
    {
      "endpoint": {
        "method": "POST",
        "normalized_path": "/akhdimni/errands",
        "path": "/akhdimni/errands",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/akhdimni/akhdimni.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/akhdimni/akhdimni.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Create errands' })",
        "@ApiTags('akhdimni')",
        "@ApiResponse({ status: 201, description: 'Created', type: CreateErrandsDto })",
        "@ApiResponse({ status: 400, description: 'Bad request' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "CreateErrandsDto",
        "ErrandsDto"
      ],
      "priority": "LOW",
      "module": "akhdimni"
    },
    {
      "endpoint": {
        "method": "POST",
        "normalized_path": "/akhdimni/errands/calculate-fee",
        "path": "/akhdimni/errands/calculate-fee",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/akhdimni/akhdimni.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/akhdimni/akhdimni.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Create calculate-fee' })",
        "@ApiTags('akhdimni')",
        "@ApiResponse({ status: 201, description: 'Created', type: CreateCalculate-feeDto })",
        "@ApiResponse({ status: 400, description: 'Bad request' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "CreateCalculate-feeDto",
        "Calculate-feeDto"
      ],
      "priority": "LOW",
      "module": "akhdimni"
    },
    {
      "endpoint": {
        "method": "POST",
        "normalized_path": "/akhdimni/errands/{param}/rate",
        "path": "/akhdimni/errands/:id/rate",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/akhdimni/akhdimni.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/akhdimni/akhdimni.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Create rate' })",
        "@ApiTags('akhdimni')",
        "@ApiParam({ name: 'param', description: 'param ID' })",
        "@ApiResponse({ status: 201, description: 'Created', type: CreateRateDto })",
        "@ApiResponse({ status: 400, description: 'Bad request' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "CreateRateDto",
        "RateDto"
      ],
      "priority": "LOW",
      "module": "akhdimni"
    },
    {
      "endpoint": {
        "method": "POST",
        "normalized_path": "/analytics/adspend",
        "path": "/analytics/adspend",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/analytics/analytics.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/analytics/analytics.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Create adspend' })",
        "@ApiTags('analytics')",
        "@ApiResponse({ status: 201, description: 'Created', type: CreateAdspendDto })",
        "@ApiResponse({ status: 400, description: 'Bad request' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "CreateAdspendDto",
        "AdspendDto"
      ],
      "priority": "LOW",
      "module": "analytics"
    },
    {
      "endpoint": {
        "method": "POST",
        "normalized_path": "/analytics/events/track",
        "path": "/analytics/events/track",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/analytics/analytics.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/analytics/analytics.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Create track' })",
        "@ApiTags('analytics')",
        "@ApiResponse({ status: 201, description: 'Created', type: CreateTrackDto })",
        "@ApiResponse({ status: 400, description: 'Bad request' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "CreateTrackDto",
        "TrackDto"
      ],
      "priority": "LOW",
      "module": "analytics"
    },
    {
      "endpoint": {
        "method": "POST",
        "normalized_path": "/analytics/roas/calculate",
        "path": "/analytics/roas/calculate",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/analytics/analytics.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/analytics/analytics.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Create calculate' })",
        "@ApiTags('analytics')",
        "@ApiResponse({ status: 201, description: 'Created', type: CreateCalculateDto })",
        "@ApiResponse({ status: 400, description: 'Bad request' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "CreateCalculateDto",
        "CalculateDto"
      ],
      "priority": "LOW",
      "module": "analytics"
    },
    {
      "endpoint": {
        "method": "POST",
        "normalized_path": "/auth/consent",
        "path": "/auth/consent",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/auth/auth.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/auth/auth.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Create consent' })",
        "@ApiTags('auth')",
        "@ApiResponse({ status: 201, description: 'Created', type: CreateConsentDto })",
        "@ApiResponse({ status: 400, description: 'Bad request' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "CreateConsentDto",
        "ConsentDto"
      ],
      "priority": "HIGH",
      "module": "auth"
    },
    {
      "endpoint": {
        "method": "POST",
        "normalized_path": "/auth/consent/bulk",
        "path": "/auth/consent/bulk",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/auth/auth.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/auth/auth.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Create bulk' })",
        "@ApiTags('auth')",
        "@ApiResponse({ status: 201, description: 'Created', type: CreateBulkDto })",
        "@ApiResponse({ status: 400, description: 'Bad request' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "CreateBulkDto",
        "BulkDto"
      ],
      "priority": "HIGH",
      "module": "auth"
    },
    {
      "endpoint": {
        "method": "POST",
        "normalized_path": "/auth/firebase/login",
        "path": "/auth/firebase/login",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/auth/auth.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/auth/auth.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Create login' })",
        "@ApiTags('auth')",
        "@ApiResponse({ status: 201, description: 'Created', type: CreateLoginDto })",
        "@ApiResponse({ status: 400, description: 'Bad request' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "CreateLoginDto",
        "LoginDto"
      ],
      "priority": "HIGH",
      "module": "auth"
    },
    {
      "endpoint": {
        "method": "POST",
        "normalized_path": "/content/admin/faqs",
        "path": "/content/admin/faqs",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/content/content.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/content/content.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Create faqs' })",
        "@ApiTags('content')",
        "@ApiResponse({ status: 201, description: 'Created', type: CreateFaqsDto })",
        "@ApiResponse({ status: 400, description: 'Bad request' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "CreateFaqsDto",
        "FaqsDto"
      ],
      "priority": "HIGH",
      "module": "content"
    },
    {
      "endpoint": {
        "method": "POST",
        "normalized_path": "/content/admin/pages",
        "path": "/content/admin/pages",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/content/content.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/content/content.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Create pages' })",
        "@ApiTags('content')",
        "@ApiResponse({ status: 201, description: 'Created', type: CreatePagesDto })",
        "@ApiResponse({ status: 400, description: 'Bad request' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "CreatePagesDto",
        "PagesDto"
      ],
      "priority": "HIGH",
      "module": "content"
    },
    {
      "endpoint": {
        "method": "POST",
        "normalized_path": "/content/banners",
        "path": "/content/banners",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/content/content.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/content/content.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Create banners' })",
        "@ApiTags('content')",
        "@ApiResponse({ status: 201, description: 'Created', type: CreateBannersDto })",
        "@ApiResponse({ status: 400, description: 'Bad request' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "CreateBannersDto",
        "BannersDto"
      ],
      "priority": "LOW",
      "module": "content"
    },
    {
      "endpoint": {
        "method": "POST",
        "normalized_path": "/content/banners/{param}/click",
        "path": "/content/banners/:id/click",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/content/content.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/content/content.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Create click' })",
        "@ApiTags('content')",
        "@ApiParam({ name: 'param', description: 'param ID' })",
        "@ApiResponse({ status: 201, description: 'Created', type: CreateClickDto })",
        "@ApiResponse({ status: 400, description: 'Bad request' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "CreateClickDto",
        "ClickDto"
      ],
      "priority": "LOW",
      "module": "content"
    },
    {
      "endpoint": {
        "method": "POST",
        "normalized_path": "/content/sections",
        "path": "/content/sections",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/content/content.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/content/content.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Create sections' })",
        "@ApiTags('content')",
        "@ApiResponse({ status: 201, description: 'Created', type: CreateSectionsDto })",
        "@ApiResponse({ status: 400, description: 'Bad request' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "CreateSectionsDto",
        "SectionsDto"
      ],
      "priority": "LOW",
      "module": "content"
    },
    {
      "endpoint": {
        "method": "POST",
        "normalized_path": "/content/subscribe",
        "path": "/content/subscribe",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/content/content.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/content/content.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Create subscribe' })",
        "@ApiTags('content')",
        "@ApiResponse({ status: 201, description: 'Created', type: CreateSubscribeDto })",
        "@ApiResponse({ status: 400, description: 'Bad request' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "CreateSubscribeDto",
        "SubscribeDto"
      ],
      "priority": "LOW",
      "module": "content"
    },
    {
      "endpoint": {
        "method": "POST",
        "normalized_path": "/content/subscription-plans",
        "path": "/content/subscription-plans",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/content/content.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/content/content.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Create subscription-plans' })",
        "@ApiTags('content')",
        "@ApiResponse({ status: 201, description: 'Created', type: CreateSubscription-plansDto })",
        "@ApiResponse({ status: 400, description: 'Bad request' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "CreateSubscription-plansDto",
        "Subscription-plansDto"
      ],
      "priority": "LOW",
      "module": "content"
    },
    {
      "endpoint": {
        "method": "POST",
        "normalized_path": "/delivery/cart/add",
        "path": "/delivery/cart/add",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/cart/cart.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/cart/cart.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Create add' })",
        "@ApiTags('cart')",
        "@ApiResponse({ status: 201, description: 'Created', type: CreateAddDto })",
        "@ApiResponse({ status: 400, description: 'Bad request' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "CreateAddDto",
        "AddDto"
      ],
      "priority": "LOW",
      "module": "cart"
    },
    {
      "endpoint": {
        "method": "POST",
        "normalized_path": "/delivery/cart/items",
        "path": "/delivery/cart/items",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/cart/cart.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/cart/cart.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Create items' })",
        "@ApiTags('cart')",
        "@ApiResponse({ status: 201, description: 'Created', type: CreateItemsDto })",
        "@ApiResponse({ status: 400, description: 'Bad request' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "CreateItemsDto",
        "ItemsDto"
      ],
      "priority": "LOW",
      "module": "cart"
    },
    {
      "endpoint": {
        "method": "POST",
        "normalized_path": "/delivery/cart/merge",
        "path": "/delivery/cart/merge",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/cart/cart.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/cart/cart.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Create merge' })",
        "@ApiTags('cart')",
        "@ApiResponse({ status: 201, description: 'Created', type: CreateMergeDto })",
        "@ApiResponse({ status: 400, description: 'Bad request' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "CreateMergeDto",
        "MergeDto"
      ],
      "priority": "LOW",
      "module": "cart"
    },
    {
      "endpoint": {
        "method": "POST",
        "normalized_path": "/delivery/cart/shein/items",
        "path": "/delivery/cart/shein/items",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/cart/cart.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/cart/cart.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Create items' })",
        "@ApiTags('cart')",
        "@ApiResponse({ status: 201, description: 'Created', type: CreateItemsDto })",
        "@ApiResponse({ status: 400, description: 'Bad request' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "CreateItemsDto",
        "ItemsDto"
      ],
      "priority": "LOW",
      "module": "cart"
    },
    {
      "endpoint": {
        "method": "POST",
        "normalized_path": "/delivery/cart/{param}/retarget/push",
        "path": "/delivery/cart/:cartId/retarget/push",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/cart/cart.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/cart/cart.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Create push' })",
        "@ApiTags('cart')",
        "@ApiParam({ name: 'param', description: 'param ID' })",
        "@ApiResponse({ status: 201, description: 'Created', type: CreatePushDto })",
        "@ApiResponse({ status: 400, description: 'Bad request' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "CreatePushDto",
        "PushDto"
      ],
      "priority": "LOW",
      "module": "cart"
    },
    {
      "endpoint": {
        "method": "POST",
        "normalized_path": "/delivery/order",
        "path": "/delivery/order",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/order/order.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/order/order.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Create order' })",
        "@ApiTags('order')",
        "@ApiResponse({ status: 201, description: 'Created', type: CreateOrderDto })",
        "@ApiResponse({ status: 400, description: 'Bad request' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "CreateOrderDto",
        "OrderDto"
      ],
      "priority": "HIGH",
      "module": "order"
    },
    {
      "endpoint": {
        "method": "POST",
        "normalized_path": "/delivery/order/{param}/assign-driver",
        "path": "/delivery/order/:id/assign-driver",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/order/order.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/order/order.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Create assign-driver' })",
        "@ApiTags('order')",
        "@ApiParam({ name: 'param', description: 'param ID' })",
        "@ApiResponse({ status: 201, description: 'Created', type: CreateAssign-driverDto })",
        "@ApiResponse({ status: 400, description: 'Bad request' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "CreateAssign-driverDto",
        "Assign-driverDto"
      ],
      "priority": "HIGH",
      "module": "order"
    },
    {
      "endpoint": {
        "method": "POST",
        "normalized_path": "/delivery/order/{param}/cancel",
        "path": "/delivery/order/:id/cancel",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/order/order.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/order/order.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Create cancel' })",
        "@ApiTags('order')",
        "@ApiParam({ name: 'param', description: 'param ID' })",
        "@ApiResponse({ status: 201, description: 'Created', type: CreateCancelDto })",
        "@ApiResponse({ status: 400, description: 'Bad request' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "CreateCancelDto",
        "CancelDto"
      ],
      "priority": "HIGH",
      "module": "order"
    },
    {
      "endpoint": {
        "method": "POST",
        "normalized_path": "/delivery/order/{param}/notes",
        "path": "/delivery/order/:id/notes",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/order/order.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/order/order.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Create notes' })",
        "@ApiTags('order')",
        "@ApiParam({ name: 'param', description: 'param ID' })",
        "@ApiResponse({ status: 201, description: 'Created', type: CreateNotesDto })",
        "@ApiResponse({ status: 400, description: 'Bad request' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "CreateNotesDto",
        "NotesDto"
      ],
      "priority": "HIGH",
      "module": "order"
    },
    {
      "endpoint": {
        "method": "POST",
        "normalized_path": "/delivery/order/{param}/pod",
        "path": "/delivery/order/:id/pod",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/order/order.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/order/order.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Create pod' })",
        "@ApiTags('order')",
        "@ApiParam({ name: 'param', description: 'param ID' })",
        "@ApiResponse({ status: 201, description: 'Created', type: CreatePodDto })",
        "@ApiResponse({ status: 400, description: 'Bad request' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "CreatePodDto",
        "PodDto"
      ],
      "priority": "HIGH",
      "module": "order"
    },
    {
      "endpoint": {
        "method": "POST",
        "normalized_path": "/delivery/order/{param}/rate",
        "path": "/delivery/order/:id/rate",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/order/order.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/order/order.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Create rate' })",
        "@ApiTags('order')",
        "@ApiParam({ name: 'param', description: 'param ID' })",
        "@ApiResponse({ status: 201, description: 'Created', type: CreateRateDto })",
        "@ApiResponse({ status: 400, description: 'Bad request' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "CreateRateDto",
        "RateDto"
      ],
      "priority": "HIGH",
      "module": "order"
    },
    {
      "endpoint": {
        "method": "POST",
        "normalized_path": "/delivery/order/{param}/repeat",
        "path": "/delivery/order/:id/repeat",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/order/order.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/order/order.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Create repeat' })",
        "@ApiTags('order')",
        "@ApiParam({ name: 'param', description: 'param ID' })",
        "@ApiResponse({ status: 201, description: 'Created', type: CreateRepeatDto })",
        "@ApiResponse({ status: 400, description: 'Bad request' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "CreateRepeatDto",
        "RepeatDto"
      ],
      "priority": "HIGH",
      "module": "order"
    },
    {
      "endpoint": {
        "method": "POST",
        "normalized_path": "/delivery/order/{param}/return",
        "path": "/delivery/order/:id/return",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/order/order.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/order/order.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Create return' })",
        "@ApiTags('order')",
        "@ApiParam({ name: 'param', description: 'param ID' })",
        "@ApiResponse({ status: 201, description: 'Created', type: CreateReturnDto })",
        "@ApiResponse({ status: 400, description: 'Bad request' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "CreateReturnDto",
        "ReturnDto"
      ],
      "priority": "HIGH",
      "module": "order"
    },
    {
      "endpoint": {
        "method": "POST",
        "normalized_path": "/delivery/order/{param}/schedule",
        "path": "/delivery/order/:id/schedule",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/order/order.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/order/order.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Create schedule' })",
        "@ApiTags('order')",
        "@ApiParam({ name: 'param', description: 'param ID' })",
        "@ApiResponse({ status: 201, description: 'Created', type: CreateScheduleDto })",
        "@ApiResponse({ status: 400, description: 'Bad request' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "CreateScheduleDto",
        "ScheduleDto"
      ],
      "priority": "HIGH",
      "module": "order"
    },
    {
      "endpoint": {
        "method": "POST",
        "normalized_path": "/delivery/order/{param}/update-location",
        "path": "/delivery/order/:id/update-location",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/order/order.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/order/order.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Create update-location' })",
        "@ApiTags('order')",
        "@ApiParam({ name: 'param', description: 'param ID' })",
        "@ApiResponse({ status: 201, description: 'Created', type: CreateUpdate-locationDto })",
        "@ApiResponse({ status: 400, description: 'Bad request' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "CreateUpdate-locationDto",
        "Update-locationDto"
      ],
      "priority": "HIGH",
      "module": "order"
    },
    {
      "endpoint": {
        "method": "POST",
        "normalized_path": "/delivery/order/{param}/vendor-accept",
        "path": "/delivery/order/:id/vendor-accept",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/order/order.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/order/order.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Create vendor-accept' })",
        "@ApiTags('order')",
        "@ApiParam({ name: 'param', description: 'param ID' })",
        "@ApiResponse({ status: 201, description: 'Created', type: CreateVendor-acceptDto })",
        "@ApiResponse({ status: 400, description: 'Bad request' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "CreateVendor-acceptDto",
        "Vendor-acceptDto"
      ],
      "priority": "HIGH",
      "module": "order"
    },
    {
      "endpoint": {
        "method": "POST",
        "normalized_path": "/delivery/order/{param}/vendor-cancel",
        "path": "/delivery/order/:id/vendor-cancel",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/order/order.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/order/order.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Create vendor-cancel' })",
        "@ApiTags('order')",
        "@ApiParam({ name: 'param', description: 'param ID' })",
        "@ApiResponse({ status: 201, description: 'Created', type: CreateVendor-cancelDto })",
        "@ApiResponse({ status: 400, description: 'Bad request' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "CreateVendor-cancelDto",
        "Vendor-cancelDto"
      ],
      "priority": "HIGH",
      "module": "order"
    },
    {
      "endpoint": {
        "method": "POST",
        "normalized_path": "/drivers",
        "path": "/drivers",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/driver/driver.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/driver/driver.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Create drivers' })",
        "@ApiTags('driver')",
        "@ApiResponse({ status: 201, description: 'Created', type: CreateDriversDto })",
        "@ApiResponse({ status: 400, description: 'Bad request' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "CreateDriversDto",
        "DriversDto"
      ],
      "priority": "MEDIUM",
      "module": "driver"
    },
    {
      "endpoint": {
        "method": "POST",
        "normalized_path": "/drivers/orders/{param}/accept",
        "path": "/drivers/orders/:id/accept",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/driver/driver.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/driver/driver.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Create accept' })",
        "@ApiTags('driver')",
        "@ApiParam({ name: 'param', description: 'param ID' })",
        "@ApiResponse({ status: 201, description: 'Created', type: CreateAcceptDto })",
        "@ApiResponse({ status: 400, description: 'Bad request' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "CreateAcceptDto",
        "AcceptDto"
      ],
      "priority": "HIGH",
      "module": "driver"
    },
    {
      "endpoint": {
        "method": "POST",
        "normalized_path": "/drivers/orders/{param}/complete",
        "path": "/drivers/orders/:id/complete",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/driver/driver.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/driver/driver.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Create complete' })",
        "@ApiTags('driver')",
        "@ApiParam({ name: 'param', description: 'param ID' })",
        "@ApiResponse({ status: 201, description: 'Created', type: CreateCompleteDto })",
        "@ApiResponse({ status: 400, description: 'Bad request' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "CreateCompleteDto",
        "CompleteDto"
      ],
      "priority": "HIGH",
      "module": "driver"
    },
    {
      "endpoint": {
        "method": "POST",
        "normalized_path": "/drivers/orders/{param}/reject",
        "path": "/drivers/orders/:id/reject",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/driver/driver.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/driver/driver.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Create reject' })",
        "@ApiTags('driver')",
        "@ApiParam({ name: 'param', description: 'param ID' })",
        "@ApiResponse({ status: 201, description: 'Created', type: CreateRejectDto })",
        "@ApiResponse({ status: 400, description: 'Bad request' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "CreateRejectDto",
        "RejectDto"
      ],
      "priority": "HIGH",
      "module": "driver"
    },
    {
      "endpoint": {
        "method": "POST",
        "normalized_path": "/drivers/orders/{param}/start-delivery",
        "path": "/drivers/orders/:id/start-delivery",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/driver/driver.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/driver/driver.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Create start-delivery' })",
        "@ApiTags('driver')",
        "@ApiParam({ name: 'param', description: 'param ID' })",
        "@ApiResponse({ status: 201, description: 'Created', type: CreateStart-deliveryDto })",
        "@ApiResponse({ status: 400, description: 'Bad request' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "CreateStart-deliveryDto",
        "Start-deliveryDto"
      ],
      "priority": "HIGH",
      "module": "driver"
    },
    {
      "endpoint": {
        "method": "POST",
        "normalized_path": "/drivers/{param}/documents/{param}/verify",
        "path": "/drivers/:driverId/documents/:docId/verify",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/driver/driver.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/driver/driver.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Create verify' })",
        "@ApiTags('driver')",
        "@ApiParam({ name: 'param', description: 'param ID' })",
        "@ApiParam({ name: 'param', description: 'param ID' })",
        "@ApiResponse({ status: 201, description: 'Created', type: CreateVerifyDto })",
        "@ApiResponse({ status: 400, description: 'Bad request' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "CreateVerifyDto",
        "VerifyDto"
      ],
      "priority": "MEDIUM",
      "module": "driver"
    },
    {
      "endpoint": {
        "method": "POST",
        "normalized_path": "/er/accounts",
        "path": "/er/accounts",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/er/er.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/er/er.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Create accounts' })",
        "@ApiTags('er')",
        "@ApiResponse({ status: 201, description: 'Created', type: CreateAccountsDto })",
        "@ApiResponse({ status: 400, description: 'Bad request' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "CreateAccountsDto",
        "AccountsDto"
      ],
      "priority": "LOW",
      "module": "er"
    },
    {
      "endpoint": {
        "method": "POST",
        "normalized_path": "/er/attendance/check-in",
        "path": "/er/attendance/check-in",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/er/er.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/er/er.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Create check-in' })",
        "@ApiTags('er')",
        "@ApiResponse({ status: 201, description: 'Created', type: CreateCheck-inDto })",
        "@ApiResponse({ status: 400, description: 'Bad request' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "CreateCheck-inDto",
        "Check-inDto"
      ],
      "priority": "LOW",
      "module": "er"
    },
    {
      "endpoint": {
        "method": "POST",
        "normalized_path": "/er/attendance/check-out",
        "path": "/er/attendance/check-out",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/er/er.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/er/er.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Create check-out' })",
        "@ApiTags('er')",
        "@ApiResponse({ status: 201, description: 'Created', type: CreateCheck-outDto })",
        "@ApiResponse({ status: 400, description: 'Bad request' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "CreateCheck-outDto",
        "Check-outDto"
      ],
      "priority": "LOW",
      "module": "er"
    },
    {
      "endpoint": {
        "method": "POST",
        "normalized_path": "/er/employees",
        "path": "/er/employees",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/er/er.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/er/er.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Create employees' })",
        "@ApiTags('er')",
        "@ApiResponse({ status: 201, description: 'Created', type: CreateEmployeesDto })",
        "@ApiResponse({ status: 400, description: 'Bad request' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "CreateEmployeesDto",
        "EmployeesDto"
      ],
      "priority": "LOW",
      "module": "er"
    },
    {
      "endpoint": {
        "method": "POST",
        "normalized_path": "/er/journal-entries",
        "path": "/er/journal-entries",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/er/er.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/er/er.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Create journal-entries' })",
        "@ApiTags('er')",
        "@ApiResponse({ status: 201, description: 'Created', type: CreateJournal-entriesDto })",
        "@ApiResponse({ status: 400, description: 'Bad request' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "CreateJournal-entriesDto",
        "Journal-entriesDto"
      ],
      "priority": "LOW",
      "module": "er"
    },
    {
      "endpoint": {
        "method": "POST",
        "normalized_path": "/er/leave-requests",
        "path": "/er/leave-requests",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/er/er.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/er/er.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Create leave-requests' })",
        "@ApiTags('er')",
        "@ApiResponse({ status: 201, description: 'Created', type: CreateLeave-requestsDto })",
        "@ApiResponse({ status: 400, description: 'Bad request' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "CreateLeave-requestsDto",
        "Leave-requestsDto"
      ],
      "priority": "LOW",
      "module": "er"
    },
    {
      "endpoint": {
        "method": "POST",
        "normalized_path": "/er/payroll/generate",
        "path": "/er/payroll/generate",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/er/er.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/er/er.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Create generate' })",
        "@ApiTags('er')",
        "@ApiResponse({ status: 201, description: 'Created', type: CreateGenerateDto })",
        "@ApiResponse({ status: 400, description: 'Bad request' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "CreateGenerateDto",
        "GenerateDto"
      ],
      "priority": "LOW",
      "module": "er"
    },
    {
      "endpoint": {
        "method": "POST",
        "normalized_path": "/finance/commission-plans",
        "path": "/finance/commission-plans",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/finance/finance.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/finance/finance.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Create commission-plans' })",
        "@ApiTags('finance')",
        "@ApiResponse({ status: 201, description: 'Created', type: CreateCommission-plansDto })",
        "@ApiResponse({ status: 400, description: 'Bad request' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "CreateCommission-plansDto",
        "Commission-plansDto"
      ],
      "priority": "LOW",
      "module": "finance"
    },
    {
      "endpoint": {
        "method": "POST",
        "normalized_path": "/finance/commissions",
        "path": "/finance/commissions",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/finance/finance.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/finance/finance.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Create commissions' })",
        "@ApiTags('finance')",
        "@ApiResponse({ status: 201, description: 'Created', type: CreateCommissionsDto })",
        "@ApiResponse({ status: 400, description: 'Bad request' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "CreateCommissionsDto",
        "CommissionsDto"
      ],
      "priority": "LOW",
      "module": "finance"
    },
    {
      "endpoint": {
        "method": "POST",
        "normalized_path": "/finance/coupons",
        "path": "/finance/coupons",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/finance/finance.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/finance/finance.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Create coupons' })",
        "@ApiTags('finance')",
        "@ApiResponse({ status: 201, description: 'Created', type: CreateCouponsDto })",
        "@ApiResponse({ status: 400, description: 'Bad request' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "CreateCouponsDto",
        "CouponsDto"
      ],
      "priority": "LOW",
      "module": "finance"
    },
    {
      "endpoint": {
        "method": "POST",
        "normalized_path": "/finance/coupons/validate",
        "path": "/finance/coupons/validate",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/finance/finance.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/finance/finance.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Create validate' })",
        "@ApiTags('finance')",
        "@ApiResponse({ status: 201, description: 'Created', type: CreateValidateDto })",
        "@ApiResponse({ status: 400, description: 'Bad request' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "CreateValidateDto",
        "ValidateDto"
      ],
      "priority": "LOW",
      "module": "finance"
    },
    {
      "endpoint": {
        "method": "POST",
        "normalized_path": "/finance/payouts/batches",
        "path": "/finance/payouts/batches",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/finance/finance.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/finance/finance.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Create batches' })",
        "@ApiTags('finance')",
        "@ApiResponse({ status: 201, description: 'Created', type: CreateBatchesDto })",
        "@ApiResponse({ status: 400, description: 'Bad request' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "CreateBatchesDto",
        "BatchesDto"
      ],
      "priority": "LOW",
      "module": "finance"
    },
    {
      "endpoint": {
        "method": "POST",
        "normalized_path": "/finance/reconciliations",
        "path": "/finance/reconciliations",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/finance/finance.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/finance/finance.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Create reconciliations' })",
        "@ApiTags('finance')",
        "@ApiResponse({ status: 201, description: 'Created', type: CreateReconciliationsDto })",
        "@ApiResponse({ status: 400, description: 'Bad request' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "CreateReconciliationsDto",
        "ReconciliationsDto"
      ],
      "priority": "LOW",
      "module": "finance"
    },
    {
      "endpoint": {
        "method": "POST",
        "normalized_path": "/finance/reconciliations/{param}/issues",
        "path": "/finance/reconciliations/:id/issues",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/finance/finance.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/finance/finance.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Create issues' })",
        "@ApiTags('finance')",
        "@ApiParam({ name: 'param', description: 'param ID' })",
        "@ApiResponse({ status: 201, description: 'Created', type: CreateIssuesDto })",
        "@ApiResponse({ status: 400, description: 'Bad request' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "CreateIssuesDto",
        "IssuesDto"
      ],
      "priority": "LOW",
      "module": "finance"
    },
    {
      "endpoint": {
        "method": "POST",
        "normalized_path": "/finance/reports/daily",
        "path": "/finance/reports/daily",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/finance/finance.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/finance/finance.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Create daily' })",
        "@ApiTags('finance')",
        "@ApiResponse({ status: 201, description: 'Created', type: CreateDailyDto })",
        "@ApiResponse({ status: 400, description: 'Bad request' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "CreateDailyDto",
        "DailyDto"
      ],
      "priority": "LOW",
      "module": "finance"
    },
    {
      "endpoint": {
        "method": "POST",
        "normalized_path": "/finance/settlements",
        "path": "/finance/settlements",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/finance/finance.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/finance/finance.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Create settlements' })",
        "@ApiTags('finance')",
        "@ApiResponse({ status: 201, description: 'Created', type: CreateSettlementsDto })",
        "@ApiResponse({ status: 400, description: 'Bad request' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "CreateSettlementsDto",
        "SettlementsDto"
      ],
      "priority": "LOW",
      "module": "finance"
    },
    {
      "endpoint": {
        "method": "POST",
        "normalized_path": "/legal/admin/privacy-policy",
        "path": "/legal/admin/privacy-policy",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/legal/legal.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/legal/legal.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Create privacy-policy' })",
        "@ApiTags('legal')",
        "@ApiResponse({ status: 201, description: 'Created', type: CreatePrivacy-policyDto })",
        "@ApiResponse({ status: 400, description: 'Bad request' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "CreatePrivacy-policyDto",
        "Privacy-policyDto"
      ],
      "priority": "HIGH",
      "module": "legal"
    },
    {
      "endpoint": {
        "method": "POST",
        "normalized_path": "/legal/admin/terms-of-service",
        "path": "/legal/admin/terms-of-service",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/legal/legal.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/legal/legal.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Create terms-of-service' })",
        "@ApiTags('legal')",
        "@ApiResponse({ status: 201, description: 'Created', type: CreateTerms-of-serviceDto })",
        "@ApiResponse({ status: 400, description: 'Bad request' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "CreateTerms-of-serviceDto",
        "Terms-of-serviceDto"
      ],
      "priority": "HIGH",
      "module": "legal"
    },
    {
      "endpoint": {
        "method": "POST",
        "normalized_path": "/legal/consent",
        "path": "/legal/consent",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/legal/legal.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/legal/legal.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Create consent' })",
        "@ApiTags('legal')",
        "@ApiResponse({ status: 201, description: 'Created', type: CreateConsentDto })",
        "@ApiResponse({ status: 400, description: 'Bad request' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "CreateConsentDto",
        "ConsentDto"
      ],
      "priority": "LOW",
      "module": "legal"
    },
    {
      "endpoint": {
        "method": "POST",
        "normalized_path": "/marketer/files/upload",
        "path": "/marketer/files/upload",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/marketer/marketer.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/marketer/marketer.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Create upload' })",
        "@ApiTags('marketer')",
        "@ApiResponse({ status: 201, description: 'Created', type: CreateUploadDto })",
        "@ApiResponse({ status: 400, description: 'Bad request' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "CreateUploadDto",
        "UploadDto"
      ],
      "priority": "LOW",
      "module": "marketer"
    },
    {
      "endpoint": {
        "method": "POST",
        "normalized_path": "/marketer/referrals/generate-code",
        "path": "/marketer/referrals/generate-code",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/marketer/marketer.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/marketer/marketer.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Create generate-code' })",
        "@ApiTags('marketer')",
        "@ApiResponse({ status: 201, description: 'Created', type: CreateGenerate-codeDto })",
        "@ApiResponse({ status: 400, description: 'Bad request' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "CreateGenerate-codeDto",
        "Generate-codeDto"
      ],
      "priority": "LOW",
      "module": "marketer"
    },
    {
      "endpoint": {
        "method": "POST",
        "normalized_path": "/merchant",
        "path": "/merchant",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/merchant/merchant.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/merchant/merchant.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Create merchant' })",
        "@ApiTags('merchant')",
        "@ApiResponse({ status: 201, description: 'Created', type: CreateMerchantDto })",
        "@ApiResponse({ status: 400, description: 'Bad request' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "CreateMerchantDto",
        "MerchantDto"
      ],
      "priority": "LOW",
      "module": "merchant"
    },
    {
      "endpoint": {
        "method": "POST",
        "normalized_path": "/merchant/attributes",
        "path": "/merchant/attributes",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/merchant/merchant.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/merchant/merchant.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Create attributes' })",
        "@ApiTags('merchant')",
        "@ApiResponse({ status: 201, description: 'Created', type: CreateAttributesDto })",
        "@ApiResponse({ status: 400, description: 'Bad request' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "CreateAttributesDto",
        "AttributesDto"
      ],
      "priority": "LOW",
      "module": "merchant"
    },
    {
      "endpoint": {
        "method": "POST",
        "normalized_path": "/merchant/catalog/products",
        "path": "/merchant/catalog/products",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/merchant/merchant.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/merchant/merchant.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Create products' })",
        "@ApiTags('merchant')",
        "@ApiResponse({ status: 201, description: 'Created', type: CreateProductsDto })",
        "@ApiResponse({ status: 400, description: 'Bad request' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "CreateProductsDto",
        "ProductsDto"
      ],
      "priority": "LOW",
      "module": "merchant"
    },
    {
      "endpoint": {
        "method": "POST",
        "normalized_path": "/merchant/categories",
        "path": "/merchant/categories",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/merchant/merchant.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/merchant/merchant.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Create categories' })",
        "@ApiTags('merchant')",
        "@ApiResponse({ status: 201, description: 'Created', type: CreateCategoriesDto })",
        "@ApiResponse({ status: 400, description: 'Bad request' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "CreateCategoriesDto",
        "CategoriesDto"
      ],
      "priority": "LOW",
      "module": "merchant"
    },
    {
      "endpoint": {
        "method": "POST",
        "normalized_path": "/merchant/products",
        "path": "/merchant/products",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/merchant/merchant.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/merchant/merchant.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Create products' })",
        "@ApiTags('merchant')",
        "@ApiResponse({ status: 201, description: 'Created', type: CreateProductsDto })",
        "@ApiResponse({ status: 400, description: 'Bad request' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "CreateProductsDto",
        "ProductsDto"
      ],
      "priority": "LOW",
      "module": "merchant"
    },
    {
      "endpoint": {
        "method": "POST",
        "normalized_path": "/notifications",
        "path": "/notifications",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/notification/notification.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/notification/notification.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Create notifications' })",
        "@ApiTags('notification')",
        "@ApiResponse({ status: 201, description: 'Created', type: CreateNotificationsDto })",
        "@ApiResponse({ status: 400, description: 'Bad request' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "CreateNotificationsDto",
        "NotificationsDto"
      ],
      "priority": "LOW",
      "module": "notification"
    },
    {
      "endpoint": {
        "method": "POST",
        "normalized_path": "/notifications/read-all",
        "path": "/notifications/read-all",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/notification/notification.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/notification/notification.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Create read-all' })",
        "@ApiTags('notification')",
        "@ApiResponse({ status: 201, description: 'Created', type: CreateRead-allDto })",
        "@ApiResponse({ status: 400, description: 'Bad request' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "CreateRead-allDto",
        "Read-allDto"
      ],
      "priority": "LOW",
      "module": "notification"
    },
    {
      "endpoint": {
        "method": "POST",
        "normalized_path": "/notifications/send-bulk",
        "path": "/notifications/send-bulk",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/notification/notification.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/notification/notification.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Create send-bulk' })",
        "@ApiTags('notification')",
        "@ApiResponse({ status: 201, description: 'Created', type: CreateSend-bulkDto })",
        "@ApiResponse({ status: 400, description: 'Bad request' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "CreateSend-bulkDto",
        "Send-bulkDto"
      ],
      "priority": "LOW",
      "module": "notification"
    },
    {
      "endpoint": {
        "method": "POST",
        "normalized_path": "/notifications/suppression",
        "path": "/notifications/suppression",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/notification/notification.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/notification/notification.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Create suppression' })",
        "@ApiTags('notification')",
        "@ApiResponse({ status: 201, description: 'Created', type: CreateSuppressionDto })",
        "@ApiResponse({ status: 400, description: 'Bad request' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "CreateSuppressionDto",
        "SuppressionDto"
      ],
      "priority": "LOW",
      "module": "notification"
    },
    {
      "endpoint": {
        "method": "POST",
        "normalized_path": "/notifications/{param}/read",
        "path": "/notifications/:id/read",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/notification/notification.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/notification/notification.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Create read' })",
        "@ApiTags('notification')",
        "@ApiParam({ name: 'param', description: 'param ID' })",
        "@ApiResponse({ status: 201, description: 'Created', type: CreateReadDto })",
        "@ApiResponse({ status: 400, description: 'Bad request' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "CreateReadDto",
        "ReadDto"
      ],
      "priority": "LOW",
      "module": "notification"
    },
    {
      "endpoint": {
        "method": "POST",
        "normalized_path": "/onboarding",
        "path": "/onboarding",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/onboarding/onboarding.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/onboarding/onboarding.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Create onboarding' })",
        "@ApiTags('onboarding')",
        "@ApiResponse({ status: 201, description: 'Created', type: CreateOnboardingDto })",
        "@ApiResponse({ status: 400, description: 'Bad request' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "CreateOnboardingDto",
        "OnboardingDto"
      ],
      "priority": "LOW",
      "module": "onboarding"
    },
    {
      "endpoint": {
        "method": "POST",
        "normalized_path": "/onboarding/quick-onboard",
        "path": "/onboarding/quick-onboard",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/onboarding/onboarding.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/onboarding/onboarding.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Create quick-onboard' })",
        "@ApiTags('onboarding')",
        "@ApiResponse({ status: 201, description: 'Created', type: CreateQuick-onboardDto })",
        "@ApiResponse({ status: 400, description: 'Bad request' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "CreateQuick-onboardDto",
        "Quick-onboardDto"
      ],
      "priority": "LOW",
      "module": "onboarding"
    },
    {
      "endpoint": {
        "method": "POST",
        "normalized_path": "/orders-cqrs",
        "path": "/orders-cqrs",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/order/order-cqrs.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/order/order-cqrs.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Create orders-cqrs' })",
        "@ApiTags('order')",
        "@ApiResponse({ status: 201, description: 'Created', type: CreateOrders-cqrsDto })",
        "@ApiResponse({ status: 400, description: 'Bad request' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "CreateOrders-cqrsDto",
        "Orders-cqrsDto"
      ],
      "priority": "HIGH",
      "module": "order"
    },
    {
      "endpoint": {
        "method": "POST",
        "normalized_path": "/orders-cqrs/{param}/assign-driver",
        "path": "/orders-cqrs/:id/assign-driver",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/order/order-cqrs.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/order/order-cqrs.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Create assign-driver' })",
        "@ApiTags('order')",
        "@ApiParam({ name: 'param', description: 'param ID' })",
        "@ApiResponse({ status: 201, description: 'Created', type: CreateAssign-driverDto })",
        "@ApiResponse({ status: 400, description: 'Bad request' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "CreateAssign-driverDto",
        "Assign-driverDto"
      ],
      "priority": "HIGH",
      "module": "order"
    },
    {
      "endpoint": {
        "method": "POST",
        "normalized_path": "/orders-cqrs/{param}/cancel",
        "path": "/orders-cqrs/:id/cancel",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/order/order-cqrs.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/order/order-cqrs.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Create cancel' })",
        "@ApiTags('order')",
        "@ApiParam({ name: 'param', description: 'param ID' })",
        "@ApiResponse({ status: 201, description: 'Created', type: CreateCancelDto })",
        "@ApiResponse({ status: 400, description: 'Bad request' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "CreateCancelDto",
        "CancelDto"
      ],
      "priority": "HIGH",
      "module": "order"
    },
    {
      "endpoint": {
        "method": "POST",
        "normalized_path": "/promotions/{param}/click",
        "path": "/promotions/:id/click",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/promotion/promotion.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/promotion/promotion.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Create click' })",
        "@ApiTags('promotion')",
        "@ApiParam({ name: 'param', description: 'param ID' })",
        "@ApiResponse({ status: 201, description: 'Created', type: CreateClickDto })",
        "@ApiResponse({ status: 400, description: 'Bad request' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "CreateClickDto",
        "ClickDto"
      ],
      "priority": "LOW",
      "module": "promotion"
    },
    {
      "endpoint": {
        "method": "POST",
        "normalized_path": "/promotions/{param}/conversion",
        "path": "/promotions/:id/conversion",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/promotion/promotion.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/promotion/promotion.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Create conversion' })",
        "@ApiTags('promotion')",
        "@ApiParam({ name: 'param', description: 'param ID' })",
        "@ApiResponse({ status: 201, description: 'Created', type: CreateConversionDto })",
        "@ApiResponse({ status: 400, description: 'Bad request' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "CreateConversionDto",
        "ConversionDto"
      ],
      "priority": "LOW",
      "module": "promotion"
    },
    {
      "endpoint": {
        "method": "POST",
        "normalized_path": "/shifts",
        "path": "/shifts",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/shift/shift.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/shift/shift.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Create shifts' })",
        "@ApiTags('shift')",
        "@ApiResponse({ status: 201, description: 'Created', type: CreateShiftsDto })",
        "@ApiResponse({ status: 400, description: 'Bad request' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "CreateShiftsDto",
        "ShiftsDto"
      ],
      "priority": "LOW",
      "module": "shift"
    },
    {
      "endpoint": {
        "method": "POST",
        "normalized_path": "/shifts/{param}/assign/{param}",
        "path": "/shifts/:shiftId/assign/:driverId",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/shift/shift.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/shift/shift.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Create assign' })",
        "@ApiTags('shift')",
        "@ApiParam({ name: 'param', description: 'param ID' })",
        "@ApiParam({ name: 'param', description: 'param ID' })",
        "@ApiResponse({ status: 201, description: 'Created', type: CreateAssignDto })",
        "@ApiResponse({ status: 400, description: 'Bad request' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "CreateAssignDto",
        "AssignDto"
      ],
      "priority": "LOW",
      "module": "shift"
    },
    {
      "endpoint": {
        "method": "POST",
        "normalized_path": "/support/tickets",
        "path": "/support/tickets",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/support/support.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/support/support.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Create tickets' })",
        "@ApiTags('support')",
        "@ApiResponse({ status: 201, description: 'Created', type: CreateTicketsDto })",
        "@ApiResponse({ status: 400, description: 'Bad request' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "CreateTicketsDto",
        "TicketsDto"
      ],
      "priority": "LOW",
      "module": "support"
    },
    {
      "endpoint": {
        "method": "POST",
        "normalized_path": "/users/addresses",
        "path": "/users/addresses",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/user/user.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/user/user.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Create addresses' })",
        "@ApiTags('user')",
        "@ApiResponse({ status: 201, description: 'Created', type: CreateAddressesDto })",
        "@ApiResponse({ status: 400, description: 'Bad request' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "CreateAddressesDto",
        "AddressesDto"
      ],
      "priority": "MEDIUM",
      "module": "user"
    },
    {
      "endpoint": {
        "method": "POST",
        "normalized_path": "/users/addresses/{param}/set-default",
        "path": "/users/addresses/:addressId/set-default",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/user/user.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/user/user.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Create set-default' })",
        "@ApiTags('user')",
        "@ApiParam({ name: 'param', description: 'param ID' })",
        "@ApiResponse({ status: 201, description: 'Created', type: CreateSet-defaultDto })",
        "@ApiResponse({ status: 400, description: 'Bad request' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "CreateSet-defaultDto",
        "Set-defaultDto"
      ],
      "priority": "MEDIUM",
      "module": "user"
    },
    {
      "endpoint": {
        "method": "POST",
        "normalized_path": "/users/pin/change",
        "path": "/users/pin/change",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/user/user.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/user/user.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Create change' })",
        "@ApiTags('user')",
        "@ApiResponse({ status: 201, description: 'Created', type: CreateChangeDto })",
        "@ApiResponse({ status: 400, description: 'Bad request' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "CreateChangeDto",
        "ChangeDto"
      ],
      "priority": "MEDIUM",
      "module": "user"
    },
    {
      "endpoint": {
        "method": "POST",
        "normalized_path": "/users/pin/set",
        "path": "/users/pin/set",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/user/user.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/user/user.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Create set' })",
        "@ApiTags('user')",
        "@ApiResponse({ status: 201, description: 'Created', type: CreateSetDto })",
        "@ApiResponse({ status: 400, description: 'Bad request' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "CreateSetDto",
        "SetDto"
      ],
      "priority": "MEDIUM",
      "module": "user"
    },
    {
      "endpoint": {
        "method": "POST",
        "normalized_path": "/users/pin/verify",
        "path": "/users/pin/verify",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/user/user.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/user/user.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Create verify' })",
        "@ApiTags('user')",
        "@ApiResponse({ status: 201, description: 'Created', type: CreateVerifyDto })",
        "@ApiResponse({ status: 400, description: 'Bad request' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "CreateVerifyDto",
        "VerifyDto"
      ],
      "priority": "MEDIUM",
      "module": "user"
    },
    {
      "endpoint": {
        "method": "POST",
        "normalized_path": "/utility/calculate-price",
        "path": "/utility/calculate-price",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/utility/utility.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/utility/utility.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Create calculate-price' })",
        "@ApiTags('utility')",
        "@ApiResponse({ status: 201, description: 'Created', type: CreateCalculate-priceDto })",
        "@ApiResponse({ status: 400, description: 'Bad request' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "CreateCalculate-priceDto",
        "Calculate-priceDto"
      ],
      "priority": "LOW",
      "module": "utility"
    },
    {
      "endpoint": {
        "method": "POST",
        "normalized_path": "/utility/daily",
        "path": "/utility/daily",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/utility/utility.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/utility/utility.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Create daily' })",
        "@ApiTags('utility')",
        "@ApiResponse({ status: 201, description: 'Created', type: CreateDailyDto })",
        "@ApiResponse({ status: 400, description: 'Bad request' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "CreateDailyDto",
        "DailyDto"
      ],
      "priority": "LOW",
      "module": "utility"
    },
    {
      "endpoint": {
        "method": "POST",
        "normalized_path": "/utility/order",
        "path": "/utility/order",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/utility/utility.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/utility/utility.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Create order' })",
        "@ApiTags('utility')",
        "@ApiResponse({ status: 201, description: 'Created', type: CreateOrderDto })",
        "@ApiResponse({ status: 400, description: 'Bad request' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "CreateOrderDto",
        "OrderDto"
      ],
      "priority": "HIGH",
      "module": "utility"
    },
    {
      "endpoint": {
        "method": "POST",
        "normalized_path": "/utility/order/{param}/assign-driver",
        "path": "/utility/order/:id/assign-driver",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/utility/utility.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/utility/utility.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Create assign-driver' })",
        "@ApiTags('utility')",
        "@ApiParam({ name: 'param', description: 'param ID' })",
        "@ApiResponse({ status: 201, description: 'Created', type: CreateAssign-driverDto })",
        "@ApiResponse({ status: 400, description: 'Bad request' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "CreateAssign-driverDto",
        "Assign-driverDto"
      ],
      "priority": "HIGH",
      "module": "utility"
    },
    {
      "endpoint": {
        "method": "POST",
        "normalized_path": "/utility/order/{param}/rate",
        "path": "/utility/order/:id/rate",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/utility/utility.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/utility/utility.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Create rate' })",
        "@ApiTags('utility')",
        "@ApiParam({ name: 'param', description: 'param ID' })",
        "@ApiResponse({ status: 201, description: 'Created', type: CreateRateDto })",
        "@ApiResponse({ status: 400, description: 'Bad request' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "CreateRateDto",
        "RateDto"
      ],
      "priority": "HIGH",
      "module": "utility"
    },
    {
      "endpoint": {
        "method": "POST",
        "normalized_path": "/utility/pricing",
        "path": "/utility/pricing",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/utility/utility.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/utility/utility.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Create pricing' })",
        "@ApiTags('utility')",
        "@ApiResponse({ status: 201, description: 'Created', type: CreatePricingDto })",
        "@ApiResponse({ status: 400, description: 'Bad request' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "CreatePricingDto",
        "PricingDto"
      ],
      "priority": "LOW",
      "module": "utility"
    },
    {
      "endpoint": {
        "method": "POST",
        "normalized_path": "/vendors",
        "path": "/vendors",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/vendor/vendor.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/vendor/vendor.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Create vendors' })",
        "@ApiTags('vendor')",
        "@ApiResponse({ status: 201, description: 'Created', type: CreateVendorsDto })",
        "@ApiResponse({ status: 400, description: 'Bad request' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "CreateVendorsDto",
        "VendorsDto"
      ],
      "priority": "MEDIUM",
      "module": "vendor"
    },
    {
      "endpoint": {
        "method": "POST",
        "normalized_path": "/vendors/account/delete-request",
        "path": "/vendors/account/delete-request",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/vendor/vendor.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/vendor/vendor.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Create delete-request' })",
        "@ApiTags('vendor')",
        "@ApiResponse({ status: 201, description: 'Created', type: CreateDelete-requestDto })",
        "@ApiResponse({ status: 400, description: 'Bad request' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "CreateDelete-requestDto",
        "Delete-requestDto"
      ],
      "priority": "MEDIUM",
      "module": "vendor"
    },
    {
      "endpoint": {
        "method": "POST",
        "normalized_path": "/vendors/settlements",
        "path": "/vendors/settlements",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/vendor/vendor.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/vendor/vendor.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Create settlements' })",
        "@ApiTags('vendor')",
        "@ApiResponse({ status: 201, description: 'Created', type: CreateSettlementsDto })",
        "@ApiResponse({ status: 400, description: 'Bad request' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "CreateSettlementsDto",
        "SettlementsDto"
      ],
      "priority": "MEDIUM",
      "module": "vendor"
    },
    {
      "endpoint": {
        "method": "POST",
        "normalized_path": "/vendors/{param}/reset-password",
        "path": "/vendors/:id/reset-password",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/vendor/vendor.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/vendor/vendor.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Create reset-password' })",
        "@ApiTags('vendor')",
        "@ApiParam({ name: 'param', description: 'param ID' })",
        "@ApiResponse({ status: 201, description: 'Created', type: CreateReset-passwordDto })",
        "@ApiResponse({ status: 400, description: 'Bad request' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "CreateReset-passwordDto",
        "Reset-passwordDto"
      ],
      "priority": "MEDIUM",
      "module": "vendor"
    },
    {
      "endpoint": {
        "method": "POST",
        "normalized_path": "/wallet/hold",
        "path": "/wallet/hold",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/wallet/wallet.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/wallet/wallet.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Create hold' })",
        "@ApiTags('wallet')",
        "@ApiResponse({ status: 201, description: 'Created', type: CreateHoldDto })",
        "@ApiResponse({ status: 400, description: 'Bad request' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "CreateHoldDto",
        "HoldDto"
      ],
      "priority": "LOW",
      "module": "wallet"
    },
    {
      "endpoint": {
        "method": "POST",
        "normalized_path": "/wallet/pay-bill",
        "path": "/wallet/pay-bill",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/wallet/wallet.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/wallet/wallet.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Create pay-bill' })",
        "@ApiTags('wallet')",
        "@ApiResponse({ status: 201, description: 'Created', type: CreatePay-billDto })",
        "@ApiResponse({ status: 400, description: 'Bad request' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "CreatePay-billDto",
        "Pay-billDto"
      ],
      "priority": "LOW",
      "module": "wallet"
    },
    {
      "endpoint": {
        "method": "POST",
        "normalized_path": "/wallet/refund",
        "path": "/wallet/refund",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/wallet/wallet.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/wallet/wallet.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Create refund' })",
        "@ApiTags('wallet')",
        "@ApiResponse({ status: 201, description: 'Created', type: CreateRefundDto })",
        "@ApiResponse({ status: 400, description: 'Bad request' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "CreateRefundDto",
        "RefundDto"
      ],
      "priority": "LOW",
      "module": "wallet"
    },
    {
      "endpoint": {
        "method": "POST",
        "normalized_path": "/wallet/refund/request",
        "path": "/wallet/refund/request",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/wallet/wallet.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/wallet/wallet.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Create request' })",
        "@ApiTags('wallet')",
        "@ApiResponse({ status: 201, description: 'Created', type: CreateRequestDto })",
        "@ApiResponse({ status: 400, description: 'Bad request' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "CreateRequestDto",
        "RequestDto"
      ],
      "priority": "LOW",
      "module": "wallet"
    },
    {
      "endpoint": {
        "method": "POST",
        "normalized_path": "/wallet/release",
        "path": "/wallet/release",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/wallet/wallet.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/wallet/wallet.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Create release' })",
        "@ApiTags('wallet')",
        "@ApiResponse({ status: 201, description: 'Created', type: CreateReleaseDto })",
        "@ApiResponse({ status: 400, description: 'Bad request' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "CreateReleaseDto",
        "ReleaseDto"
      ],
      "priority": "LOW",
      "module": "wallet"
    },
    {
      "endpoint": {
        "method": "POST",
        "normalized_path": "/wallet/topup/kuraimi",
        "path": "/wallet/topup/kuraimi",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/wallet/wallet.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/wallet/wallet.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Create kuraimi' })",
        "@ApiTags('wallet')",
        "@ApiResponse({ status: 201, description: 'Created', type: CreateKuraimiDto })",
        "@ApiResponse({ status: 400, description: 'Bad request' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "CreateKuraimiDto",
        "KuraimiDto"
      ],
      "priority": "LOW",
      "module": "wallet"
    },
    {
      "endpoint": {
        "method": "POST",
        "normalized_path": "/wallet/topup/verify",
        "path": "/wallet/topup/verify",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/wallet/wallet.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/wallet/wallet.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Create verify' })",
        "@ApiTags('wallet')",
        "@ApiResponse({ status: 201, description: 'Created', type: CreateVerifyDto })",
        "@ApiResponse({ status: 400, description: 'Bad request' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "CreateVerifyDto",
        "VerifyDto"
      ],
      "priority": "LOW",
      "module": "wallet"
    },
    {
      "endpoint": {
        "method": "POST",
        "normalized_path": "/wallet/transaction",
        "path": "/wallet/transaction",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/wallet/wallet.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/wallet/wallet.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Create transaction' })",
        "@ApiTags('wallet')",
        "@ApiResponse({ status: 201, description: 'Created', type: CreateTransactionDto })",
        "@ApiResponse({ status: 400, description: 'Bad request' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "CreateTransactionDto",
        "TransactionDto"
      ],
      "priority": "LOW",
      "module": "wallet"
    },
    {
      "endpoint": {
        "method": "POST",
        "normalized_path": "/wallet/transfer",
        "path": "/wallet/transfer",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/wallet/wallet.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/wallet/wallet.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Create transfer' })",
        "@ApiTags('wallet')",
        "@ApiResponse({ status: 201, description: 'Created', type: CreateTransferDto })",
        "@ApiResponse({ status: 400, description: 'Bad request' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "CreateTransferDto",
        "TransferDto"
      ],
      "priority": "LOW",
      "module": "wallet"
    },
    {
      "endpoint": {
        "method": "POST",
        "normalized_path": "/wallet/withdraw/request",
        "path": "/wallet/withdraw/request",
        "controller_file": "bthwani-project-main/backend-nest/src/modules/wallet/wallet.controller.ts"
      },
      "controllerPath": "bthwani-project-main/backend-nest/src/modules/wallet/wallet.controller.ts",
      "decorators": [
        "@ApiOperation({ summary: 'Create request' })",
        "@ApiTags('wallet')",
        "@ApiResponse({ status: 201, description: 'Created', type: CreateRequestDto })",
        "@ApiResponse({ status: 400, description: 'Bad request' })",
        "@ApiResponse({ status: 401, description: 'Unauthorized' })"
      ],
      "dtoNeeded": [
        "CreateRequestDto",
        "RequestDto"
      ],
      "priority": "LOW",
      "module": "wallet"
    }
  ]
}