{
  "generated_at": "2025-10-19T14:27:52.934Z",
  "total_routes": 552,
  "routes": [
    {
      "module": "admin",
      "controller": "AdminCMSController",
      "method": "POST",
      "path": "/admin/onboarding-slides",
      "auth_guard": "[Class] @ApiBearerAuth, @Auth(AuthType.JWT)",
      "dto_in": "@Body: any",
      "dto_out": "{ success: boolean; message: string; data: any; }",
      "statuses": "201",
      "file": "src\\modules\\admin\\admin-cms.controller.ts",
      "line": 24
    },
    {
      "module": "admin",
      "controller": "AdminCMSController",
      "method": "PUT",
      "path": "/admin/onboarding-slides/:id",
      "auth_guard": "[Class] @ApiBearerAuth, @Auth(AuthType.JWT)",
      "dto_in": "@Param: string, @Body: any",
      "dto_out": "{ success: boolean; message: string; data: any; }",
      "statuses": "200",
      "file": "src\\modules\\admin\\admin-cms.controller.ts",
      "line": 37
    },
    {
      "module": "admin",
      "controller": "AdminCMSController",
      "method": "DELETE",
      "path": "/admin/onboarding-slides/:id",
      "auth_guard": "[Class] @ApiBearerAuth, @Auth(AuthType.JWT)",
      "dto_in": "@Param: string",
      "dto_out": "{ success: boolean; message: string; }",
      "statuses": "200",
      "file": "src\\modules\\admin\\admin-cms.controller.ts",
      "line": 51
    },
    {
      "module": "admin",
      "controller": "AdminCMSController",
      "method": "PUT",
      "path": "/admin/pages/:id",
      "auth_guard": "[Class] @ApiBearerAuth, @Auth(AuthType.JWT)",
      "dto_in": "@Param: string, @Body: any",
      "dto_out": "{ success: boolean; message: string; data: any; }",
      "statuses": "200",
      "file": "src\\modules\\admin\\admin-cms.controller.ts",
      "line": 63
    },
    {
      "module": "admin",
      "controller": "AdminCMSController",
      "method": "DELETE",
      "path": "/admin/pages/:id",
      "auth_guard": "[Class] @ApiBearerAuth, @Auth(AuthType.JWT)",
      "dto_in": "@Param: string",
      "dto_out": "{ success: boolean; message: string; }",
      "statuses": "200",
      "file": "src\\modules\\admin\\admin-cms.controller.ts",
      "line": 77
    },
    {
      "module": "admin",
      "controller": "AdminCMSController",
      "method": "POST",
      "path": "/admin/strings",
      "auth_guard": "[Class] @ApiBearerAuth, @Auth(AuthType.JWT)",
      "dto_in": "@Body: any",
      "dto_out": "{ success: boolean; message: string; data: any; }",
      "statuses": "201",
      "file": "src\\modules\\admin\\admin-cms.controller.ts",
      "line": 89
    },
    {
      "module": "admin",
      "controller": "AdminCMSController",
      "method": "PUT",
      "path": "/admin/strings/:id",
      "auth_guard": "[Class] @ApiBearerAuth, @Auth(AuthType.JWT)",
      "dto_in": "@Param: string, @Body: any",
      "dto_out": "{ success: boolean; message: string; data: any; }",
      "statuses": "200",
      "file": "src\\modules\\admin\\admin-cms.controller.ts",
      "line": 102
    },
    {
      "module": "admin",
      "controller": "AdminCMSController",
      "method": "DELETE",
      "path": "/admin/strings/:id",
      "auth_guard": "[Class] @ApiBearerAuth, @Auth(AuthType.JWT)",
      "dto_in": "@Param: string",
      "dto_out": "{ success: boolean; message: string; }",
      "statuses": "200",
      "file": "src\\modules\\admin\\admin-cms.controller.ts",
      "line": 116
    },
    {
      "module": "admin",
      "controller": "AdminCMSController",
      "method": "POST",
      "path": "/admin/home-layouts",
      "auth_guard": "[Class] @ApiBearerAuth, @Auth(AuthType.JWT)",
      "dto_in": "@Body: any",
      "dto_out": "{ success: boolean; message: string; data: any; }",
      "statuses": "201",
      "file": "src\\modules\\admin\\admin-cms.controller.ts",
      "line": 128
    },
    {
      "module": "admin",
      "controller": "AdminCMSController",
      "method": "PUT",
      "path": "/admin/home-layouts/:id",
      "auth_guard": "[Class] @ApiBearerAuth, @Auth(AuthType.JWT)",
      "dto_in": "@Param: string, @Body: any",
      "dto_out": "{ success: boolean; message: string; data: any; }",
      "statuses": "200",
      "file": "src\\modules\\admin\\admin-cms.controller.ts",
      "line": 141
    },
    {
      "module": "admin",
      "controller": "AdminCMSController",
      "method": "DELETE",
      "path": "/admin/home-layouts/:id",
      "auth_guard": "[Class] @ApiBearerAuth, @Auth(AuthType.JWT)",
      "dto_in": "@Param: string",
      "dto_out": "{ success: boolean; message: string; }",
      "statuses": "200",
      "file": "src\\modules\\admin\\admin-cms.controller.ts",
      "line": 155
    },
    {
      "module": "admin",
      "controller": "AdminCMSController",
      "method": "DELETE",
      "path": "/admin/wallet/coupons/:id",
      "auth_guard": "[Class] @ApiBearerAuth, @Auth(AuthType.JWT)",
      "dto_in": "@Param: string",
      "dto_out": "{ success: boolean; message: string; }",
      "statuses": "",
      "file": "src\\modules\\admin\\admin-cms.controller.ts",
      "line": 167
    },
    {
      "module": "admin",
      "controller": "AdminCMSController",
      "method": "DELETE",
      "path": "/admin/wallet/subscriptions/:id",
      "auth_guard": "[Class] @ApiBearerAuth, @Auth(AuthType.JWT)",
      "dto_in": "@Param: string",
      "dto_out": "{ success: boolean; message: string; }",
      "statuses": "",
      "file": "src\\modules\\admin\\admin-cms.controller.ts",
      "line": 175
    },
    {
      "module": "admin",
      "controller": "AdminCMSController",
      "method": "POST",
      "path": "/admin/reports/generate",
      "auth_guard": "[Class] @ApiBearerAuth, @Auth(AuthType.JWT)",
      "dto_in": "@Body: any",
      "dto_out": "{ success: boolean; message: string; }",
      "statuses": "",
      "file": "src\\modules\\admin\\admin-cms.controller.ts",
      "line": 183
    },
    {
      "module": "admin",
      "controller": "AdminCMSController",
      "method": "POST",
      "path": "/admin/reports/export/:id/:format",
      "auth_guard": "[Class] @ApiBearerAuth, @Auth(AuthType.JWT)",
      "dto_in": "@Param: string, @Param: string",
      "dto_out": "{ success: boolean; message: string; }",
      "statuses": "",
      "file": "src\\modules\\admin\\admin-cms.controller.ts",
      "line": 190
    },
    {
      "module": "admin",
      "controller": "AdminCMSController",
      "method": "GET",
      "path": "/admin/reports/realtime",
      "auth_guard": "[Class] @ApiBearerAuth, @Auth(AuthType.JWT)",
      "dto_in": "",
      "dto_out": "{ success: boolean; data: {}; }",
      "statuses": "",
      "file": "src\\modules\\admin\\admin-cms.controller.ts",
      "line": 199
    },
    {
      "module": "admin",
      "controller": "AdminCMSController",
      "method": "GET",
      "path": "/admin/wallet/settlements/export",
      "auth_guard": "[Class] @ApiBearerAuth, @Auth(AuthType.JWT)",
      "dto_in": "",
      "dto_out": "{ success: boolean; message: string; }",
      "statuses": "",
      "file": "src\\modules\\admin\\admin-cms.controller.ts",
      "line": 206
    },
    {
      "module": "admin",
      "controller": "AdminController",
      "method": "GET",
      "path": "/admin/dashboard",
      "auth_guard": "[Class] UnifiedAuthGuard, [Class] RolesGuard, [Class] @Auth(AuthType.JWT), [Class] @Roles('admin', 'superadmin'), [Class] @ApiBearerAuth",
      "dto_in": "",
      "dto_out": "import(\"C:/Users/Administrator/Desktop/bthwani_git/backend-nest/src/modules/admin/dto/dashboard.dto\").DashboardStatsDto",
      "statuses": "",
      "file": "src\\modules\\admin\\admin.controller.ts",
      "line": 34
    },
    {
      "module": "admin",
      "controller": "AdminController",
      "method": "GET",
      "path": "/admin/stats/today",
      "auth_guard": "[Class] UnifiedAuthGuard, [Class] RolesGuard, [Class] @Auth(AuthType.JWT), [Class] @Roles('admin', 'superadmin'), [Class] @ApiBearerAuth",
      "dto_in": "",
      "dto_out": "import(\"C:/Users/Administrator/Desktop/bthwani_git/backend-nest/src/modules/admin/dto/dashboard.dto\").TodayStatsDto",
      "statuses": "",
      "file": "src\\modules\\admin\\admin.controller.ts",
      "line": 40
    },
    {
      "module": "admin",
      "controller": "AdminController",
      "method": "GET",
      "path": "/admin/stats/financial",
      "auth_guard": "[Class] UnifiedAuthGuard, [Class] RolesGuard, [Class] @Auth(AuthType.JWT), [Class] @Roles('admin', 'superadmin'), [Class] @ApiBearerAuth",
      "dto_in": "",
      "dto_out": "import(\"C:/Users/Administrator/Desktop/bthwani_git/backend-nest/src/modules/admin/admin.service\").FinancialStats",
      "statuses": "",
      "file": "src\\modules\\admin\\admin.controller.ts",
      "line": 46
    },
    {
      "module": "admin",
      "controller": "AdminController",
      "method": "GET",
      "path": "/admin/dashboard/orders-by-status",
      "auth_guard": "[Class] UnifiedAuthGuard, [Class] RolesGuard, [Class] @Auth(AuthType.JWT), [Class] @Roles('admin', 'superadmin'), [Class] @ApiBearerAuth",
      "dto_in": "@Query: string, @Query: string",
      "dto_out": "import(\"C:/Users/Administrator/Desktop/bthwani_git/backend-nest/src/modules/admin/dto/dashboard.dto\").OrdersByStatusDto[]",
      "statuses": "",
      "file": "src\\modules\\admin\\admin.controller.ts",
      "line": 52
    },
    {
      "module": "admin",
      "controller": "AdminController",
      "method": "GET",
      "path": "/admin/dashboard/revenue",
      "auth_guard": "[Class] UnifiedAuthGuard, [Class] RolesGuard, [Class] @Auth(AuthType.JWT), [Class] @Roles('admin', 'superadmin'), [Class] @ApiBearerAuth",
      "dto_in": "@Query: 'daily' | 'weekly' | 'monthly', @Query: string, @Query: string",
      "dto_out": "import(\"C:/Users/Administrator/Desktop/bthwani_git/backend-nest/src/modules/admin/dto/dashboard.dto\").RevenueAnalyticsDto[]",
      "statuses": "",
      "file": "src\\modules\\admin\\admin.controller.ts",
      "line": 61
    },
    {
      "module": "admin",
      "controller": "AdminController",
      "method": "GET",
      "path": "/admin/dashboard/live-metrics",
      "auth_guard": "[Class] UnifiedAuthGuard, [Class] RolesGuard, [Class] @Auth(AuthType.JWT), [Class] @Roles('admin', 'superadmin'), [Class] @ApiBearerAuth",
      "dto_in": "",
      "dto_out": "import(\"C:/Users/Administrator/Desktop/bthwani_git/backend-nest/src/modules/admin/dto/dashboard.dto\").LiveMetricsDto",
      "statuses": "",
      "file": "src\\modules\\admin\\admin.controller.ts",
      "line": 75
    },
    {
      "module": "admin",
      "controller": "AdminController",
      "method": "GET",
      "path": "/admin/drivers",
      "auth_guard": "[Class] UnifiedAuthGuard, [Class] RolesGuard, [Class] @Auth(AuthType.JWT), [Class] @Roles('admin', 'superadmin'), [Class] @ApiBearerAuth",
      "dto_in": "@Query: string, @Query: boolean, @Query: number, @Query: number",
      "dto_out": "import(\"C:/Users/Administrator/Desktop/bthwani_git/backend-nest/src/modules/admin/dto/drivers.dto\").GetAllDriversResponseDto",
      "statuses": "",
      "file": "src\\modules\\admin\\admin.controller.ts",
      "line": 83
    },
    {
      "module": "admin",
      "controller": "AdminController",
      "method": "GET",
      "path": "/admin/drivers/:id",
      "auth_guard": "[Class] UnifiedAuthGuard, [Class] RolesGuard, [Class] @Auth(AuthType.JWT), [Class] @Roles('admin', 'superadmin'), [Class] @ApiBearerAuth",
      "dto_in": "@Param: string",
      "dto_out": "import(\"C:/Users/Administrator/Desktop/bthwani_git/backend-nest/src/modules/admin/dto/drivers.dto\").DriverDetailsDto",
      "statuses": "",
      "file": "src\\modules\\admin\\admin.controller.ts",
      "line": 99
    },
    {
      "module": "admin",
      "controller": "AdminController",
      "method": "GET",
      "path": "/admin/drivers/:id/performance",
      "auth_guard": "[Class] UnifiedAuthGuard, [Class] RolesGuard, [Class] @Auth(AuthType.JWT), [Class] @Roles('admin', 'superadmin'), [Class] @ApiBearerAuth",
      "dto_in": "@Param: string, @Query: string, @Query: string",
      "dto_out": "",
      "statuses": "",
      "file": "src\\modules\\admin\\admin.controller.ts",
      "line": 105
    },
    {
      "module": "admin",
      "controller": "AdminController",
      "method": "DELETE",
      "path": "/admin/drivers/:id",
      "auth_guard": "[Class] UnifiedAuthGuard, [Class] RolesGuard, [Class] @Auth(AuthType.JWT), [Class] @Roles('admin', 'superadmin'), [Class] @ApiBearerAuth",
      "dto_in": "@Param: string",
      "dto_out": "{ success: boolean; message: string; }",
      "statuses": "200, 404, 401",
      "file": "src\\modules\\admin\\admin.controller.ts",
      "line": 118
    },
    {
      "module": "admin",
      "controller": "AdminController",
      "method": "GET",
      "path": "/admin/drivers/:id/financials",
      "auth_guard": "[Class] UnifiedAuthGuard, [Class] RolesGuard, [Class] @Auth(AuthType.JWT), [Class] @Roles('admin', 'superadmin'), [Class] @ApiBearerAuth",
      "dto_in": "@Param: string",
      "dto_out": "import(\"C:/Users/Administrator/Desktop/bthwani_git/backend-nest/src/modules/admin/dto/drivers.dto\").DriverFinancialsDto",
      "statuses": "",
      "file": "src\\modules\\admin\\admin.controller.ts",
      "line": 128
    },
    {
      "module": "admin",
      "controller": "AdminController",
      "method": "POST",
      "path": "/admin/drivers/:id/ban",
      "auth_guard": "[Class] UnifiedAuthGuard, [Class] RolesGuard, [Class] @Auth(AuthType.JWT), [Class] @Roles('admin', 'superadmin'), [Class] @ApiBearerAuth",
      "dto_in": "@Param: string, @Body: { reason: string }",
      "dto_out": "{ success: boolean; message: string; }",
      "statuses": "",
      "file": "src\\modules\\admin\\admin.controller.ts",
      "line": 134
    },
    {
      "module": "admin",
      "controller": "AdminController",
      "method": "POST",
      "path": "/admin/drivers/:id/unban",
      "auth_guard": "[Class] UnifiedAuthGuard, [Class] RolesGuard, [Class] @Auth(AuthType.JWT), [Class] @Roles('admin', 'superadmin'), [Class] @ApiBearerAuth",
      "dto_in": "@Param: string",
      "dto_out": "{ success: boolean; message: string; }",
      "statuses": "",
      "file": "src\\modules\\admin\\admin.controller.ts",
      "line": 148
    },
    {
      "module": "admin",
      "controller": "AdminController",
      "method": "PATCH",
      "path": "/admin/drivers/:id/adjust-balance",
      "auth_guard": "[Class] UnifiedAuthGuard, [Class] RolesGuard, [Class] @Auth(AuthType.JWT), [Class] @Roles('admin', 'superadmin'), [Class] @ApiBearerAuth",
      "dto_in": "@Param: string, @Body: { amount: number; reason: string; type: 'credit' | 'debit' }",
      "dto_out": "import(\"C:/Users/Administrator/Desktop/bthwani_git/backend-nest/src/modules/admin/dto/drivers.dto\").AdjustDriverBalanceResponseDto",
      "statuses": "",
      "file": "src\\modules\\admin\\admin.controller.ts",
      "line": 157
    },
    {
      "module": "admin",
      "controller": "AdminController",
      "method": "GET",
      "path": "/admin/withdrawals",
      "auth_guard": "[Class] UnifiedAuthGuard, [Class] RolesGuard, [Class] @Auth(AuthType.JWT), [Class] @Roles('admin', 'superadmin'), [Class] @ApiBearerAuth",
      "dto_in": "@Query: string, @Query: string, @Query: number, @Query: number",
      "dto_out": "import(\"C:/Users/Administrator/Desktop/bthwani_git/backend-nest/src/modules/admin/dto/withdrawals.dto\").GetWithdrawalsResponseDto",
      "statuses": "",
      "file": "src\\modules\\admin\\admin.controller.ts",
      "line": 175
    },
    {
      "module": "admin",
      "controller": "AdminController",
      "method": "GET",
      "path": "/admin/withdrawals/pending",
      "auth_guard": "[Class] UnifiedAuthGuard, [Class] RolesGuard, [Class] @Auth(AuthType.JWT), [Class] @Roles('admin', 'superadmin'), [Class] @ApiBearerAuth",
      "dto_in": "",
      "dto_out": "import(\"C:/Users/Administrator/Desktop/bthwani_git/backend-nest/src/modules/admin/dto/withdrawals.dto\").GetPendingWithdrawalsResponseDto",
      "statuses": "",
      "file": "src\\modules\\admin\\admin.controller.ts",
      "line": 191
    },
    {
      "module": "admin",
      "controller": "AdminController",
      "method": "PATCH",
      "path": "/admin/withdrawals/:id/approve",
      "auth_guard": "[Class] UnifiedAuthGuard, [Class] RolesGuard, [Class] @Auth(AuthType.JWT), [Class] @Roles('admin', 'superadmin'), [Class] @ApiBearerAuth",
      "dto_in": "@Param: string, @Body: { transactionRef?: string; notes?: string }",
      "dto_out": "",
      "statuses": "",
      "file": "src\\modules\\admin\\admin.controller.ts",
      "line": 197
    },
    {
      "module": "admin",
      "controller": "AdminController",
      "method": "PATCH",
      "path": "/admin/withdrawals/:id/reject",
      "auth_guard": "[Class] UnifiedAuthGuard, [Class] RolesGuard, [Class] @Auth(AuthType.JWT), [Class] @Roles('admin', 'superadmin'), [Class] @ApiBearerAuth",
      "dto_in": "@Param: string, @Body: { reason: string }",
      "dto_out": "",
      "statuses": "",
      "file": "src\\modules\\admin\\admin.controller.ts",
      "line": 212
    },
    {
      "module": "admin",
      "controller": "AdminController",
      "method": "GET",
      "path": "/admin/vendors/pending",
      "auth_guard": "[Class] UnifiedAuthGuard, [Class] RolesGuard, [Class] @Auth(AuthType.JWT), [Class] @Roles('admin', 'superadmin'), [Class] @ApiBearerAuth",
      "dto_in": "",
      "dto_out": "{ data: (import(\"mongoose\").Document<unknown, {}, import(\"C:/Users/Administrator/Desktop/bthwani_git/backend-nest/src/modules/vendor/entities/vendor.entity\").Vendor, {}, {}> & import(\"C:/Users/Administrator/Desktop/bthwani_git/backend-nest/src/modules/vendor/entities/vendor.entity\").Vendor & Required<{ _id: unknown; }> & { __v: number; })[]; total: number; }",
      "statuses": "",
      "file": "src\\modules\\admin\\admin.controller.ts",
      "line": 230
    },
    {
      "module": "admin",
      "controller": "AdminController",
      "method": "POST",
      "path": "/admin/vendors/:id/approve",
      "auth_guard": "[Class] UnifiedAuthGuard, [Class] RolesGuard, [Class] @Auth(AuthType.JWT), [Class] @Roles('admin', 'superadmin'), [Class] @ApiBearerAuth",
      "dto_in": "@Param: string",
      "dto_out": "{ success: boolean; message: string; }",
      "statuses": "",
      "file": "src\\modules\\admin\\admin.controller.ts",
      "line": 236
    },
    {
      "module": "admin",
      "controller": "AdminController",
      "method": "POST",
      "path": "/admin/vendors/:id/reject",
      "auth_guard": "[Class] UnifiedAuthGuard, [Class] RolesGuard, [Class] @Auth(AuthType.JWT), [Class] @Roles('admin', 'superadmin'), [Class] @ApiBearerAuth",
      "dto_in": "@Param: string, @Body: { reason: string }",
      "dto_out": "{ success: boolean; message: string; }",
      "statuses": "",
      "file": "src\\modules\\admin\\admin.controller.ts",
      "line": 245
    },
    {
      "module": "admin",
      "controller": "AdminController",
      "method": "POST",
      "path": "/admin/vendors/:id/suspend",
      "auth_guard": "[Class] UnifiedAuthGuard, [Class] RolesGuard, [Class] @Auth(AuthType.JWT), [Class] @Roles('admin', 'superadmin'), [Class] @ApiBearerAuth",
      "dto_in": "@Param: string, @Body: { reason: string }",
      "dto_out": "{ success: boolean; message: string; }",
      "statuses": "",
      "file": "src\\modules\\admin\\admin.controller.ts",
      "line": 255
    },
    {
      "module": "admin",
      "controller": "AdminController",
      "method": "GET",
      "path": "/admin/users",
      "auth_guard": "[Class] UnifiedAuthGuard, [Class] RolesGuard, [Class] @Auth(AuthType.JWT), [Class] @Roles('admin', 'superadmin'), [Class] @ApiBearerAuth",
      "dto_in": "@Query: string, @Query: boolean, @Query: number, @Query: number",
      "dto_out": "{ data: (import(\"mongoose\").Document<unknown, {}, import(\"C:/Users/Administrator/Desktop/bthwani_git/backend-nest/src/modules/auth/entities/user.entity\").User, {}, {}> & import(\"C:/Users/Administrator/Desktop/bthwani_git/backend-nest/src/modules/auth/entities/user.entity\").User & Required<{ _id: unknown; }> & { __v: number; })[]; total: number; page: number; limit: number; totalPages: number; }",
      "statuses": "",
      "file": "src\\modules\\admin\\admin.controller.ts",
      "line": 267
    },
    {
      "module": "admin",
      "controller": "AdminController",
      "method": "GET",
      "path": "/admin/users/:id",
      "auth_guard": "[Class] UnifiedAuthGuard, [Class] RolesGuard, [Class] @Auth(AuthType.JWT), [Class] @Roles('admin', 'superadmin'), [Class] @ApiBearerAuth",
      "dto_in": "@Param: string",
      "dto_out": "{ user: import(\"mongoose\").Document<unknown, {}, import(\"C:/Users/Administrator/Desktop/bthwani_git/backend-nest/src/modules/auth/entities/user.entity\").User, {}, {}> & import(\"C:/Users/Administrator/Desktop/bthwani_git/backend-nest/src/modules/auth/entities/user.entity\").User & Required<{ _id: unknown; }> & { __v: number; }; orderStats: { totalOrders: number; totalSpent: number; completedOrders: number; }; }",
      "statuses": "",
      "file": "src\\modules\\admin\\admin.controller.ts",
      "line": 283
    },
    {
      "module": "admin",
      "controller": "AdminController",
      "method": "POST",
      "path": "/admin/users/:id/ban",
      "auth_guard": "[Class] UnifiedAuthGuard, [Class] RolesGuard, [Class] @Auth(AuthType.JWT), [Class] @Roles('admin', 'superadmin'), [Class] @ApiBearerAuth",
      "dto_in": "@Param: string, @Body: { reason: string }",
      "dto_out": "{ success: boolean; message: string; }",
      "statuses": "",
      "file": "src\\modules\\admin\\admin.controller.ts",
      "line": 289
    },
    {
      "module": "admin",
      "controller": "AdminController",
      "method": "POST",
      "path": "/admin/users/:id/unban",
      "auth_guard": "[Class] UnifiedAuthGuard, [Class] RolesGuard, [Class] @Auth(AuthType.JWT), [Class] @Roles('admin', 'superadmin'), [Class] @ApiBearerAuth",
      "dto_in": "@Param: string",
      "dto_out": "{ success: boolean; message: string; }",
      "statuses": "",
      "file": "src\\modules\\admin\\admin.controller.ts",
      "line": 303
    },
    {
      "module": "admin",
      "controller": "AdminController",
      "method": "GET",
      "path": "/admin/reports/daily",
      "auth_guard": "[Class] UnifiedAuthGuard, [Class] RolesGuard, [Class] @Auth(AuthType.JWT), [Class] @Roles('admin', 'superadmin'), [Class] @ApiBearerAuth",
      "dto_in": "@Query: string",
      "dto_out": "{ date: Date; orders: number; revenue: number; newUsers: number; }",
      "statuses": "",
      "file": "src\\modules\\admin\\admin.controller.ts",
      "line": 314
    },
    {
      "module": "admin",
      "controller": "AdminController",
      "method": "POST",
      "path": "/admin/reports/export/:type/:format",
      "auth_guard": "[Class] UnifiedAuthGuard, [Class] RolesGuard, [Class] @Auth(AuthType.JWT), [Class] @Roles('admin', 'superadmin'), [Class] @ApiBearerAuth",
      "dto_in": "@Param: string, @Param: string, @Body: any",
      "dto_out": "{ success: boolean; message: string; type: string; format: string; }",
      "statuses": "200",
      "file": "src\\modules\\admin\\admin.controller.ts",
      "line": 320
    },
    {
      "module": "admin",
      "controller": "AdminController",
      "method": "GET",
      "path": "/admin/drivers/:id/attendance",
      "auth_guard": "[Class] UnifiedAuthGuard, [Class] RolesGuard, [Class] @Auth(AuthType.JWT), [Class] @Roles('admin', 'superadmin'), [Class] @ApiBearerAuth",
      "dto_in": "@Param: string, @Query: number, @Query: number",
      "dto_out": "{ data: (import(\"mongoose\").Document<unknown, {}, import(\"C:/Users/Administrator/Desktop/bthwani_git/backend-nest/src/modules/er/entities/attendance.entity\").Attendance, {}, {}> & import(\"C:/Users/Administrator/Desktop/bthwani_git/backend-nest/src/modules/er/entities/attendance.entity\").Attendance & Required<{ _id: unknown; }> & { __v: number; })[]; summary: { present: number; absent: number; late: number; totalDays: number; }; }",
      "statuses": "",
      "file": "src\\modules\\admin\\admin.controller.ts",
      "line": 353
    },
    {
      "module": "admin",
      "controller": "AdminController",
      "method": "GET",
      "path": "/admin/drivers/attendance/summary",
      "auth_guard": "[Class] UnifiedAuthGuard, [Class] RolesGuard, [Class] @Auth(AuthType.JWT), [Class] @Roles('admin', 'superadmin'), [Class] @ApiBearerAuth",
      "dto_in": "@Query: string",
      "dto_out": "{ data: (import(\"mongoose\").Document<unknown, {}, import(\"C:/Users/Administrator/Desktop/bthwani_git/backend-nest/src/modules/er/entities/attendance.entity\").Attendance, {}, {}> & import(\"C:/Users/Administrator/Desktop/bthwani_git/backend-nest/src/modules/er/entities/attendance.entity\").Attendance & Required<{ _id: unknown; }> & { __v: number; })[]; total: number; summary: any[]; }",
      "statuses": "",
      "file": "src\\modules\\admin\\admin.controller.ts",
      "line": 363
    },
    {
      "module": "admin",
      "controller": "AdminController",
      "method": "POST",
      "path": "/admin/drivers/:id/attendance/adjust",
      "auth_guard": "[Class] UnifiedAuthGuard, [Class] RolesGuard, [Class] @Auth(AuthType.JWT), [Class] @Roles('admin', 'superadmin'), [Class] @ApiBearerAuth",
      "dto_in": "@Param: string, @Body: {\r\n      date: string;\r\n      checkIn?: string;\r\n      checkOut?: string;\r\n      reason: string;\r\n    }",
      "dto_out": "{ success: boolean; message: string; }",
      "statuses": "",
      "file": "src\\modules\\admin\\admin.controller.ts",
      "line": 369
    },
    {
      "module": "admin",
      "controller": "AdminController",
      "method": "DELETE",
      "path": "/admin/drivers/shifts/:id",
      "auth_guard": "[Class] UnifiedAuthGuard, [Class] RolesGuard, [Class] @Auth(AuthType.JWT), [Class] @Roles('admin', 'superadmin'), [Class] @ApiBearerAuth",
      "dto_in": "@Param: string",
      "dto_out": "",
      "statuses": "200, 404, 401",
      "file": "src\\modules\\admin\\admin.controller.ts",
      "line": 392
    },
    {
      "module": "admin",
      "controller": "AdminController",
      "method": "DELETE",
      "path": "/admin/drivers/assets/:id",
      "auth_guard": "[Class] UnifiedAuthGuard, [Class] RolesGuard, [Class] @Auth(AuthType.JWT), [Class] @Roles('admin', 'superadmin'), [Class] @ApiBearerAuth",
      "dto_in": "@Param: string",
      "dto_out": "{ success: boolean; message: string; }",
      "statuses": "200, 404, 401",
      "file": "src\\modules\\admin\\admin.controller.ts",
      "line": 404
    },
    {
      "module": "admin",
      "controller": "AdminController",
      "method": "GET",
      "path": "/admin/drivers/leave-requests",
      "auth_guard": "[Class] UnifiedAuthGuard, [Class] RolesGuard, [Class] @Auth(AuthType.JWT), [Class] @Roles('admin', 'superadmin'), [Class] @ApiBearerAuth",
      "dto_in": "@Query: string, @Query: number, @Query: number",
      "dto_out": "{ data: (import(\"mongoose\").Document<unknown, {}, import(\"C:/Users/Administrator/Desktop/bthwani_git/backend-nest/src/modules/er/entities/leave-request.entity\").LeaveRequest, {}, {}> & import(\"C:/Users/Administrator/Desktop/bthwani_git/backend-nest/src/modules/er/entities/leave-request.entity\").LeaveRequest & Required<{ _id: unknown; }> & { __v: number; })[]; total: number; page: number; limit: number; totalPages: number; }",
      "statuses": "",
      "file": "src\\modules\\admin\\admin.controller.ts",
      "line": 416
    },
    {
      "module": "admin",
      "controller": "AdminController",
      "method": "PATCH",
      "path": "/admin/drivers/leave-requests/:id/approve",
      "auth_guard": "[Class] UnifiedAuthGuard, [Class] RolesGuard, [Class] @Auth(AuthType.JWT), [Class] @Roles('admin', 'superadmin'), [Class] @ApiBearerAuth",
      "dto_in": "@Param: string",
      "dto_out": "{ success: boolean; message: string; }",
      "statuses": "",
      "file": "src\\modules\\admin\\admin.controller.ts",
      "line": 426
    },
    {
      "module": "admin",
      "controller": "AdminController",
      "method": "PATCH",
      "path": "/admin/drivers/leave-requests/:id/reject",
      "auth_guard": "[Class] UnifiedAuthGuard, [Class] RolesGuard, [Class] @Auth(AuthType.JWT), [Class] @Roles('admin', 'superadmin'), [Class] @ApiBearerAuth",
      "dto_in": "@Param: string, @Body: { reason: string }",
      "dto_out": "{ success: boolean; message: string; }",
      "statuses": "",
      "file": "src\\modules\\admin\\admin.controller.ts",
      "line": 435
    },
    {
      "module": "admin",
      "controller": "AdminController",
      "method": "DELETE",
      "path": "/admin/drivers/leave-requests/:id",
      "auth_guard": "[Class] UnifiedAuthGuard, [Class] RolesGuard, [Class] @Auth(AuthType.JWT), [Class] @Roles('admin', 'superadmin'), [Class] @ApiBearerAuth",
      "dto_in": "@Param: string",
      "dto_out": "{ success: boolean; message: string; }",
      "statuses": "200, 404, 401",
      "file": "src\\modules\\admin\\admin.controller.ts",
      "line": 449
    },
    {
      "module": "admin",
      "controller": "AdminController",
      "method": "GET",
      "path": "/admin/drivers/:id/leave-balance",
      "auth_guard": "[Class] UnifiedAuthGuard, [Class] RolesGuard, [Class] @Auth(AuthType.JWT), [Class] @Roles('admin', 'superadmin'), [Class] @ApiBearerAuth",
      "dto_in": "@Param: string",
      "dto_out": "{ annual: number; sick: number; emergency: number; used: number; remaining: number; }",
      "statuses": "",
      "file": "src\\modules\\admin\\admin.controller.ts",
      "line": 459
    },
    {
      "module": "admin",
      "controller": "AdminController",
      "method": "PATCH",
      "path": "/admin/drivers/:id/leave-balance/adjust",
      "auth_guard": "[Class] UnifiedAuthGuard, [Class] RolesGuard, [Class] @Auth(AuthType.JWT), [Class] @Roles('admin', 'superadmin'), [Class] @ApiBearerAuth",
      "dto_in": "@Param: string, @Body: { days: number; type: 'add' | 'deduct' }",
      "dto_out": "{ success: boolean; message: string; newBalance: number; }",
      "statuses": "",
      "file": "src\\modules\\admin\\admin.controller.ts",
      "line": 465
    },
    {
      "module": "admin",
      "controller": "AdminController",
      "method": "GET",
      "path": "/admin/quality/metrics",
      "auth_guard": "[Class] UnifiedAuthGuard, [Class] RolesGuard, [Class] @Auth(AuthType.JWT), [Class] @Roles('admin', 'superadmin'), [Class] @ApiBearerAuth",
      "dto_in": "@Query: string, @Query: string",
      "dto_out": "{ orderRating: number; driverRating: number; }",
      "statuses": "",
      "file": "src\\modules\\admin\\admin.controller.ts",
      "line": 477
    },
    {
      "module": "admin",
      "controller": "AdminController",
      "method": "GET",
      "path": "/admin/settings",
      "auth_guard": "[Class] UnifiedAuthGuard, [Class] RolesGuard, [Class] @Auth(AuthType.JWT), [Class] @Roles('admin', 'superadmin'), [Class] @ApiBearerAuth",
      "dto_in": "",
      "dto_out": "{ data: (import(\"mongoose\").Document<unknown, {}, import(\"C:/Users/Administrator/Desktop/bthwani_git/backend-nest/src/modules/admin/entities/app-settings.entity\").AppSettings, {}, {}> & import(\"C:/Users/Administrator/Desktop/bthwani_git/backend-nest/src/modules/admin/entities/app-settings.entity\").AppSettings & Required<{ _id: unknown; }> & { __v: number; })[]; total: number; }",
      "statuses": "",
      "file": "src\\modules\\admin\\admin.controller.ts",
      "line": 491
    },
    {
      "module": "admin",
      "controller": "AdminController",
      "method": "PATCH",
      "path": "/admin/settings",
      "auth_guard": "[Class] UnifiedAuthGuard, [Class] RolesGuard, [Class] @Auth(AuthType.JWT), [Class] @Roles('admin', 'superadmin'), [Class] @ApiBearerAuth",
      "dto_in": "@Body: any",
      "dto_out": "import(\"C:/Users/Administrator/Desktop/bthwani_git/backend-nest/src/modules/admin/entities/app-settings.entity\").AppSettings",
      "statuses": "",
      "file": "src\\modules\\admin\\admin.controller.ts",
      "line": 497
    },
    {
      "module": "admin",
      "controller": "AdminController",
      "method": "GET",
      "path": "/admin/settings/feature-flags",
      "auth_guard": "[Class] UnifiedAuthGuard, [Class] RolesGuard, [Class] @Auth(AuthType.JWT), [Class] @Roles('admin', 'superadmin'), [Class] @ApiBearerAuth",
      "dto_in": "",
      "dto_out": "{ data: (import(\"mongoose\").Document<unknown, {}, import(\"C:/Users/Administrator/Desktop/bthwani_git/backend-nest/src/modules/admin/entities/feature-flag.entity\").FeatureFlag, {}, {}> & import(\"C:/Users/Administrator/Desktop/bthwani_git/backend-nest/src/modules/admin/entities/feature-flag.entity\").FeatureFlag & Required<{ _id: unknown; }> & { __v: number; })[]; total: number; }",
      "statuses": "",
      "file": "src\\modules\\admin\\admin.controller.ts",
      "line": 514
    },
    {
      "module": "admin",
      "controller": "AdminController",
      "method": "PATCH",
      "path": "/admin/settings/feature-flags/:flag",
      "auth_guard": "[Class] UnifiedAuthGuard, [Class] RolesGuard, [Class] @Auth(AuthType.JWT), [Class] @Roles('admin', 'superadmin'), [Class] @ApiBearerAuth",
      "dto_in": "@Param: string, @Body: { enabled: boolean }",
      "dto_out": "import(\"C:/Users/Administrator/Desktop/bthwani_git/backend-nest/src/modules/admin/entities/feature-flag.entity\").FeatureFlag",
      "statuses": "",
      "file": "src\\modules\\admin\\admin.controller.ts",
      "line": 520
    },
    {
      "module": "admin",
      "controller": "AdminController",
      "method": "POST",
      "path": "/admin/backup/create",
      "auth_guard": "[Class] UnifiedAuthGuard, [Class] RolesGuard, [Class] @Auth(AuthType.JWT), [Class] @Roles('admin', 'superadmin'), [Class] @ApiBearerAuth",
      "dto_in": "@Body: { collections?: string[]; description?: string }",
      "dto_out": "{ success: boolean; message: string; backupId: string; collections: string[]; description: string; adminId: string; }",
      "statuses": "",
      "file": "src\\modules\\admin\\admin.controller.ts",
      "line": 532
    },
    {
      "module": "admin",
      "controller": "AdminController",
      "method": "GET",
      "path": "/admin/backup/list",
      "auth_guard": "[Class] UnifiedAuthGuard, [Class] RolesGuard, [Class] @Auth(AuthType.JWT), [Class] @Roles('admin', 'superadmin'), [Class] @ApiBearerAuth",
      "dto_in": "@Query: number, @Query: number",
      "dto_out": "{ data: (import(\"mongoose\").Document<unknown, {}, import(\"C:/Users/Administrator/Desktop/bthwani_git/backend-nest/src/modules/admin/entities/backup-record.entity\").BackupRecord, {}, {}> & import(\"C:/Users/Administrator/Desktop/bthwani_git/backend-nest/src/modules/admin/entities/backup-record.entity\").BackupRecord & Required<{ _id: unknown; }> & { __v: number; })[]; total: number; page: number; limit: number; totalPages: number; }",
      "statuses": "",
      "file": "src\\modules\\admin\\admin.controller.ts",
      "line": 554
    },
    {
      "module": "admin",
      "controller": "AdminController",
      "method": "POST",
      "path": "/admin/backup/:id/restore",
      "auth_guard": "[Class] UnifiedAuthGuard, [Class] RolesGuard, [Class] @Auth(AuthType.JWT), [Class] @Roles('admin', 'superadmin'), [Class] @ApiBearerAuth",
      "dto_in": "@Param: string",
      "dto_out": "{ success: boolean; message: string; }",
      "statuses": "",
      "file": "src\\modules\\admin\\admin.controller.ts",
      "line": 563
    },
    {
      "module": "admin",
      "controller": "AdminController",
      "method": "GET",
      "path": "/admin/backup/:id/download",
      "auth_guard": "[Class] UnifiedAuthGuard, [Class] RolesGuard, [Class] @Auth(AuthType.JWT), [Class] @Roles('admin', 'superadmin'), [Class] @ApiBearerAuth",
      "dto_in": "@Param: string",
      "dto_out": "{ url: string; size: number; expiresAt: Date; }",
      "statuses": "",
      "file": "src\\modules\\admin\\admin.controller.ts",
      "line": 572
    },
    {
      "module": "admin",
      "controller": "AdminController",
      "method": "GET",
      "path": "/admin/data-deletion/requests",
      "auth_guard": "[Class] UnifiedAuthGuard, [Class] RolesGuard, [Class] @Auth(AuthType.JWT), [Class] @Roles('admin', 'superadmin'), [Class] @ApiBearerAuth",
      "dto_in": "@Query: string",
      "dto_out": "{ data: (import(\"mongoose\").Document<unknown, {}, import(\"C:/Users/Administrator/Desktop/bthwani_git/backend-nest/src/modules/legal/entities/data-deletion-request.entity\").DataDeletionRequest, {}, {}> & import(\"C:/Users/Administrator/Desktop/bthwani_git/backend-nest/src/modules/legal/entities/data-deletion-request.entity\").DataDeletionRequest & Required<{ _id: unknown; }> & { __v: number; })[]; total: number; }",
      "statuses": "",
      "file": "src\\modules\\admin\\admin.controller.ts",
      "line": 580
    },
    {
      "module": "admin",
      "controller": "AdminController",
      "method": "PATCH",
      "path": "/admin/data-deletion/:id/approve",
      "auth_guard": "[Class] UnifiedAuthGuard, [Class] RolesGuard, [Class] @Auth(AuthType.JWT), [Class] @Roles('admin', 'superadmin'), [Class] @ApiBearerAuth",
      "dto_in": "@Param: string",
      "dto_out": "{ success: boolean; message: string; scheduledDate: Date; }",
      "statuses": "",
      "file": "src\\modules\\admin\\admin.controller.ts",
      "line": 586
    },
    {
      "module": "admin",
      "controller": "AdminController",
      "method": "PATCH",
      "path": "/admin/data-deletion/:id/reject",
      "auth_guard": "[Class] UnifiedAuthGuard, [Class] RolesGuard, [Class] @Auth(AuthType.JWT), [Class] @Roles('admin', 'superadmin'), [Class] @ApiBearerAuth",
      "dto_in": "@Param: string, @Body: { reason: string }",
      "dto_out": "{ success: boolean; message: string; }",
      "statuses": "",
      "file": "src\\modules\\admin\\admin.controller.ts",
      "line": 595
    },
    {
      "module": "admin",
      "controller": "AdminController",
      "method": "GET",
      "path": "/admin/security/password-attempts",
      "auth_guard": "[Class] UnifiedAuthGuard, [Class] RolesGuard, [Class] @Auth(AuthType.JWT), [Class] @Roles('admin', 'superadmin'), [Class] @ApiBearerAuth",
      "dto_in": "@Query: number",
      "dto_out": "{ data: any[]; total: number; }",
      "statuses": "",
      "file": "src\\modules\\admin\\admin.controller.ts",
      "line": 611
    },
    {
      "module": "admin",
      "controller": "AdminController",
      "method": "POST",
      "path": "/admin/security/reset-password/:userId",
      "auth_guard": "[Class] UnifiedAuthGuard, [Class] RolesGuard, [Class] @Auth(AuthType.JWT), [Class] @Roles('admin', 'superadmin'), [Class] @ApiBearerAuth",
      "dto_in": "@Param: string, @Body: { tempPassword?: string }",
      "dto_out": "{ success: boolean; message: string; tempPassword: string; }",
      "statuses": "",
      "file": "src\\modules\\admin\\admin.controller.ts",
      "line": 617
    },
    {
      "module": "admin",
      "controller": "AdminController",
      "method": "POST",
      "path": "/admin/security/unlock-account/:userId",
      "auth_guard": "[Class] UnifiedAuthGuard, [Class] RolesGuard, [Class] @Auth(AuthType.JWT), [Class] @Roles('admin', 'superadmin'), [Class] @ApiBearerAuth",
      "dto_in": "@Param: string",
      "dto_out": "{ success: boolean; message: string; }",
      "statuses": "",
      "file": "src\\modules\\admin\\admin.controller.ts",
      "line": 631
    },
    {
      "module": "admin",
      "controller": "AdminController",
      "method": "GET",
      "path": "/admin/marketers",
      "auth_guard": "[Class] UnifiedAuthGuard, [Class] RolesGuard, [Class] @Auth(AuthType.JWT), [Class] @Roles('admin', 'superadmin'), [Class] @ApiBearerAuth",
      "dto_in": "@Query: string, @Query: number, @Query: number",
      "dto_out": "import(\"C:/Users/Administrator/Desktop/bthwani_git/backend-nest/src/modules/admin/dto/marketer.dto\").GetAllMarketersResponseDto",
      "statuses": "",
      "file": "src\\modules\\admin\\admin.controller.ts",
      "line": 645
    },
    {
      "module": "admin",
      "controller": "AdminController",
      "method": "GET",
      "path": "/admin/marketers/:id",
      "auth_guard": "[Class] UnifiedAuthGuard, [Class] RolesGuard, [Class] @Auth(AuthType.JWT), [Class] @Roles('admin', 'superadmin'), [Class] @ApiBearerAuth",
      "dto_in": "@Param: string",
      "dto_out": "import(\"C:/Users/Administrator/Desktop/bthwani_git/backend-nest/src/modules/admin/dto/marketer.dto\").GetMarketerDetailsResponseDto",
      "statuses": "",
      "file": "src\\modules\\admin\\admin.controller.ts",
      "line": 655
    },
    {
      "module": "admin",
      "controller": "AdminController",
      "method": "POST",
      "path": "/admin/marketers",
      "auth_guard": "[Class] UnifiedAuthGuard, [Class] RolesGuard, [Class] @Auth(AuthType.JWT), [Class] @Roles('admin', 'superadmin'), [Class] @ApiBearerAuth",
      "dto_in": "@Body: {\r\n      fullName: string;\r\n      phone: string;\r\n      email?: string;\r\n      territory?: string;\r\n    }",
      "dto_out": "import(\"C:/Users/Administrator/Desktop/bthwani_git/backend-nest/src/modules/admin/dto/marketer.dto\").CreateMarketerResponseDto",
      "statuses": "",
      "file": "src\\modules\\admin\\admin.controller.ts",
      "line": 661
    },
    {
      "module": "admin",
      "controller": "AdminController",
      "method": "PATCH",
      "path": "/admin/marketers/:id",
      "auth_guard": "[Class] UnifiedAuthGuard, [Class] RolesGuard, [Class] @Auth(AuthType.JWT), [Class] @Roles('admin', 'superadmin'), [Class] @ApiBearerAuth",
      "dto_in": "@Param: string, @Body: any",
      "dto_out": "import(\"C:/Users/Administrator/Desktop/bthwani_git/backend-nest/src/modules/admin/dto/marketer.dto\").UpdateMarketerResponseDto",
      "statuses": "",
      "file": "src\\modules\\admin\\admin.controller.ts",
      "line": 695
    },
    {
      "module": "admin",
      "controller": "AdminController",
      "method": "GET",
      "path": "/admin/marketers/:id/performance",
      "auth_guard": "[Class] UnifiedAuthGuard, [Class] RolesGuard, [Class] @Auth(AuthType.JWT), [Class] @Roles('admin', 'superadmin'), [Class] @ApiBearerAuth",
      "dto_in": "@Param: string, @Query: string, @Query: string",
      "dto_out": "import(\"C:/Users/Administrator/Desktop/bthwani_git/backend-nest/src/modules/admin/dto/marketer.dto\").GetMarketerPerformanceResponseDto",
      "statuses": "",
      "file": "src\\modules\\admin\\admin.controller.ts",
      "line": 709
    },
    {
      "module": "admin",
      "controller": "AdminController",
      "method": "GET",
      "path": "/admin/marketers/:id/stores",
      "auth_guard": "[Class] UnifiedAuthGuard, [Class] RolesGuard, [Class] @Auth(AuthType.JWT), [Class] @Roles('admin', 'superadmin'), [Class] @ApiBearerAuth",
      "dto_in": "@Param: string",
      "dto_out": "import(\"C:/Users/Administrator/Desktop/bthwani_git/backend-nest/src/modules/admin/dto/marketer.dto\").GetMarketerStoresResponseDto",
      "statuses": "",
      "file": "src\\modules\\admin\\admin.controller.ts",
      "line": 722
    },
    {
      "module": "admin",
      "controller": "AdminController",
      "method": "POST",
      "path": "/admin/marketers/:id/activate",
      "auth_guard": "[Class] UnifiedAuthGuard, [Class] RolesGuard, [Class] @Auth(AuthType.JWT), [Class] @Roles('admin', 'superadmin'), [Class] @ApiBearerAuth",
      "dto_in": "@Param: string",
      "dto_out": "import(\"C:/Users/Administrator/Desktop/bthwani_git/backend-nest/src/modules/admin/dto/marketer.dto\").ActivateMarketerResponseDto",
      "statuses": "",
      "file": "src\\modules\\admin\\admin.controller.ts",
      "line": 730
    },
    {
      "module": "admin",
      "controller": "AdminController",
      "method": "POST",
      "path": "/admin/marketers/:id/deactivate",
      "auth_guard": "[Class] UnifiedAuthGuard, [Class] RolesGuard, [Class] @Auth(AuthType.JWT), [Class] @Roles('admin', 'superadmin'), [Class] @ApiBearerAuth",
      "dto_in": "@Param: string, @Body: { reason: string }",
      "dto_out": "import(\"C:/Users/Administrator/Desktop/bthwani_git/backend-nest/src/modules/admin/dto/marketer.dto\").DeactivateMarketerResponseDto",
      "statuses": "",
      "file": "src\\modules\\admin\\admin.controller.ts",
      "line": 739
    },
    {
      "module": "admin",
      "controller": "AdminController",
      "method": "GET",
      "path": "/admin/marketers/statistics",
      "auth_guard": "[Class] UnifiedAuthGuard, [Class] RolesGuard, [Class] @Auth(AuthType.JWT), [Class] @Roles('admin', 'superadmin'), [Class] @ApiBearerAuth",
      "dto_in": "@Query: string, @Query: string",
      "dto_out": "import(\"C:/Users/Administrator/Desktop/bthwani_git/backend-nest/src/modules/admin/dto/marketer.dto\").GetMarketersStatisticsResponseDto",
      "statuses": "",
      "file": "src\\modules\\admin\\admin.controller.ts",
      "line": 753
    },
    {
      "module": "admin",
      "controller": "AdminController",
      "method": "GET",
      "path": "/admin/marketers/export",
      "auth_guard": "[Class] UnifiedAuthGuard, [Class] RolesGuard, [Class] @Auth(AuthType.JWT), [Class] @Roles('admin', 'superadmin'), [Class] @ApiBearerAuth",
      "dto_in": "",
      "dto_out": "",
      "statuses": "",
      "file": "src\\modules\\admin\\admin.controller.ts",
      "line": 762
    },
    {
      "module": "admin",
      "controller": "AdminController",
      "method": "GET",
      "path": "/admin/audit-logs",
      "auth_guard": "[Class] UnifiedAuthGuard, [Class] RolesGuard, [Class] @Auth(AuthType.JWT), [Class] @Roles('admin', 'superadmin'), [Class] @ApiBearerAuth",
      "dto_in": "@Query: string, @Query: string, @Query: string, @Query: string",
      "dto_out": "{ data: (import(\"mongoose\").Document<unknown, {}, import(\"C:/Users/Administrator/Desktop/bthwani_git/backend-nest/src/modules/admin/entities/audit-log.entity\").AuditLog, {}, {}> & import(\"C:/Users/Administrator/Desktop/bthwani_git/backend-nest/src/modules/admin/entities/audit-log.entity\").AuditLog & Required<{ _id: unknown; }> & { __v: number; })[]; total: number; page: number; limit: number; totalPages: number; }",
      "statuses": "",
      "file": "src\\modules\\admin\\admin.controller.ts",
      "line": 779
    },
    {
      "module": "admin",
      "controller": "AdminController",
      "method": "GET",
      "path": "/admin/audit-logs/:id",
      "auth_guard": "[Class] UnifiedAuthGuard, [Class] RolesGuard, [Class] @Auth(AuthType.JWT), [Class] @Roles('admin', 'superadmin'), [Class] @ApiBearerAuth",
      "dto_in": "@Param: string",
      "dto_out": "{ log: import(\"mongoose\").Document<unknown, {}, import(\"C:/Users/Administrator/Desktop/bthwani_git/backend-nest/src/modules/admin/entities/audit-log.entity\").AuditLog, {}, {}> & import(\"C:/Users/Administrator/Desktop/bthwani_git/backend-nest/src/modules/admin/entities/audit-log.entity\").AuditLog & Required<{ _id: unknown; }> & { __v: number; }; }",
      "statuses": "",
      "file": "src\\modules\\admin\\admin.controller.ts",
      "line": 790
    },
    {
      "module": "admin",
      "controller": "AdminController",
      "method": "GET",
      "path": "/admin/system/health",
      "auth_guard": "[Class] UnifiedAuthGuard, [Class] RolesGuard, [Class] @Auth(AuthType.JWT), [Class] @Roles('admin', 'superadmin'), [Class] @ApiBearerAuth",
      "dto_in": "",
      "dto_out": "",
      "statuses": "",
      "file": "src\\modules\\admin\\admin.controller.ts",
      "line": 798
    },
    {
      "module": "admin",
      "controller": "AdminController",
      "method": "GET",
      "path": "/admin/system/metrics",
      "auth_guard": "[Class] UnifiedAuthGuard, [Class] RolesGuard, [Class] @Auth(AuthType.JWT), [Class] @Roles('admin', 'superadmin'), [Class] @ApiBearerAuth",
      "dto_in": "",
      "dto_out": "",
      "statuses": "",
      "file": "src\\modules\\admin\\admin.controller.ts",
      "line": 804
    },
    {
      "module": "admin",
      "controller": "AdminController",
      "method": "GET",
      "path": "/admin/database/stats",
      "auth_guard": "[Class] UnifiedAuthGuard, [Class] RolesGuard, [Class] @Auth(AuthType.JWT), [Class] @Roles('admin', 'superadmin'), [Class] @ApiBearerAuth",
      "dto_in": "",
      "dto_out": "{ users: number; orders: number; drivers: number; stores: number; vendors: number; }",
      "statuses": "",
      "file": "src\\modules\\admin\\admin.controller.ts",
      "line": 814
    },
    {
      "module": "admin",
      "controller": "AdminController",
      "method": "GET",
      "path": "/admin/orders/stats/by-city",
      "auth_guard": "[Class] UnifiedAuthGuard, [Class] RolesGuard, [Class] @Auth(AuthType.JWT), [Class] @Roles('admin', 'superadmin'), [Class] @ApiBearerAuth",
      "dto_in": "@Query: string, @Query: string",
      "dto_out": "{ data: any[]; }",
      "statuses": "",
      "file": "src\\modules\\admin\\admin.controller.ts",
      "line": 836
    },
    {
      "module": "admin",
      "controller": "AdminController",
      "method": "GET",
      "path": "/admin/orders/stats/by-payment-method",
      "auth_guard": "[Class] UnifiedAuthGuard, [Class] RolesGuard, [Class] @Auth(AuthType.JWT), [Class] @Roles('admin', 'superadmin'), [Class] @ApiBearerAuth",
      "dto_in": "",
      "dto_out": "{ data: any[]; }",
      "statuses": "",
      "file": "src\\modules\\admin\\admin.controller.ts",
      "line": 845
    },
    {
      "module": "admin",
      "controller": "AdminController",
      "method": "GET",
      "path": "/admin/drivers/stats/by-status",
      "auth_guard": "[Class] UnifiedAuthGuard, [Class] RolesGuard, [Class] @Auth(AuthType.JWT), [Class] @Roles('admin', 'superadmin'), [Class] @ApiBearerAuth",
      "dto_in": "",
      "dto_out": "{ data: any[]; }",
      "statuses": "",
      "file": "src\\modules\\admin\\admin.controller.ts",
      "line": 857
    },
    {
      "module": "admin",
      "controller": "AdminController",
      "method": "GET",
      "path": "/admin/users/:id/orders-history",
      "auth_guard": "[Class] UnifiedAuthGuard, [Class] RolesGuard, [Class] @Auth(AuthType.JWT), [Class] @Roles('admin', 'superadmin'), [Class] @ApiBearerAuth",
      "dto_in": "@Param: string",
      "dto_out": "{ data: (import(\"mongoose\").Document<unknown, {}, import(\"C:/Users/Administrator/Desktop/bthwani_git/backend-nest/src/modules/order/entities/order.entity\").Order, {}, {}> & import(\"C:/Users/Administrator/Desktop/bthwani_git/backend-nest/src/modules/order/entities/order.entity\").Order & Required<{ _id: unknown; }> & { __v: number; })[]; total: number; }",
      "statuses": "",
      "file": "src\\modules\\admin\\admin.controller.ts",
      "line": 871
    },
    {
      "module": "admin",
      "controller": "AdminController",
      "method": "POST",
      "path": "/admin/cache/clear",
      "auth_guard": "[Class] UnifiedAuthGuard, [Class] RolesGuard, [Class] @Auth(AuthType.JWT), [Class] @Roles('admin', 'superadmin'), [Class] @ApiBearerAuth",
      "dto_in": "",
      "dto_out": "{ success: boolean; message: string; timestamp: string; error?: undefined; } | { success: boolean; message: string; error: string; timestamp: string; }",
      "statuses": "",
      "file": "src\\modules\\admin\\admin.controller.ts",
      "line": 897
    },
    {
      "module": "admin",
      "controller": "AdminController",
      "method": "GET",
      "path": "/admin/cache/stats",
      "auth_guard": "[Class] UnifiedAuthGuard, [Class] RolesGuard, [Class] @Auth(AuthType.JWT), [Class] @Roles('admin', 'superadmin'), [Class] @ApiBearerAuth",
      "dto_in": "",
      "dto_out": "{ success: boolean; type: string; connected: boolean; performance: { writeLatencyMs: number; readLatencyMs: number; totalLatencyMs: number; status: string; }; config: { ttl: number; maxItems: number; redisHost: string; redisPort: string; }; timestamp: string; error?: undefined; } | { success: boolean; type: string; connected: boolean; error: string; timestamp: string; performance?: undefined; config?: undefined; }",
      "statuses": "",
      "file": "src\\modules\\admin\\admin.controller.ts",
      "line": 903
    },
    {
      "module": "admin",
      "controller": "AdminController",
      "method": "GET",
      "path": "/admin/roles",
      "auth_guard": "[Class] UnifiedAuthGuard, [Class] RolesGuard, [Class] @Auth(AuthType.JWT), [Class] @Roles('admin', 'superadmin'), [Class] @ApiBearerAuth",
      "dto_in": "",
      "dto_out": "",
      "statuses": "",
      "file": "src\\modules\\admin\\admin.controller.ts",
      "line": 911
    },
    {
      "module": "admin",
      "controller": "AdminController",
      "method": "POST",
      "path": "/admin/roles",
      "auth_guard": "[Class] UnifiedAuthGuard, [Class] RolesGuard, [Class] @Auth(AuthType.JWT), [Class] @Roles('admin', 'superadmin'), [Class] @ApiBearerAuth",
      "dto_in": "@Body: { name: string; permissions: string[] }",
      "dto_out": "",
      "statuses": "",
      "file": "src\\modules\\admin\\admin.controller.ts",
      "line": 917
    },
    {
      "module": "admin",
      "controller": "AdminController",
      "method": "PATCH",
      "path": "/admin/roles/:id",
      "auth_guard": "[Class] UnifiedAuthGuard, [Class] RolesGuard, [Class] @Auth(AuthType.JWT), [Class] @Roles('admin', 'superadmin'), [Class] @ApiBearerAuth",
      "dto_in": "",
      "dto_out": "",
      "statuses": "",
      "file": "src\\modules\\admin\\admin.controller.ts",
      "line": 934
    },
    {
      "module": "akhdimni",
      "controller": "AkhdimniController",
      "method": "POST",
      "path": "/akhdimni/errands/calculate-fee",
      "auth_guard": "[Class] @ApiBearerAuth, @Auth(AuthType.FIREBASE)",
      "dto_in": "@Body: CalculateFeeDto",
      "dto_out": "import(\"C:/Users/Administrator/Desktop/bthwani_git/backend-nest/src/modules/akhdimni/dto/calculate-fee.dto\").FeeCalculationResult",
      "statuses": "201, 400, 401",
      "file": "src\\modules\\akhdimni\\akhdimni.controller.ts",
      "line": 36
    },
    {
      "module": "akhdimni",
      "controller": "AkhdimniController",
      "method": "POST",
      "path": "/akhdimni/errands",
      "auth_guard": "[Class] @ApiBearerAuth, @Auth(AuthType.FIREBASE)",
      "dto_in": "@Body: CreateErrandDto",
      "dto_out": "import(\"C:/Users/Administrator/Desktop/bthwani_git/backend-nest/src/modules/akhdimni/entities/errand-order.entity\").ErrandOrder",
      "statuses": "201, 400, 401",
      "file": "src\\modules\\akhdimni\\akhdimni.controller.ts",
      "line": 46
    },
    {
      "module": "akhdimni",
      "controller": "AkhdimniController",
      "method": "GET",
      "path": "/akhdimni/my-errands",
      "auth_guard": "[Class] @ApiBearerAuth, @Auth(AuthType.FIREBASE)",
      "dto_in": "@Query: string",
      "dto_out": "any[]",
      "statuses": "200, 401",
      "file": "src\\modules\\akhdimni\\akhdimni.controller.ts",
      "line": 59
    },
    {
      "module": "akhdimni",
      "controller": "AkhdimniController",
      "method": "GET",
      "path": "/akhdimni/errands/:id",
      "auth_guard": "[Class] @ApiBearerAuth, @Auth(AuthType.FIREBASE)",
      "dto_in": "@Param: string",
      "dto_out": "import(\"C:/Users/Administrator/Desktop/bthwani_git/backend-nest/src/modules/akhdimni/entities/errand-order.entity\").ErrandOrder",
      "statuses": "200, 404, 401",
      "file": "src\\modules\\akhdimni\\akhdimni.controller.ts",
      "line": 71
    },
    {
      "module": "akhdimni",
      "controller": "AkhdimniController",
      "method": "PATCH",
      "path": "/akhdimni/errands/:id/cancel",
      "auth_guard": "[Class] @ApiBearerAuth, @Auth(AuthType.FIREBASE)",
      "dto_in": "@Param: string, @Body: { reason: string }",
      "dto_out": "import(\"C:/Users/Administrator/Desktop/bthwani_git/backend-nest/src/modules/akhdimni/entities/errand-order.entity\").ErrandOrder",
      "statuses": "200, 404, 400, 401",
      "file": "src\\modules\\akhdimni\\akhdimni.controller.ts",
      "line": 82
    },
    {
      "module": "akhdimni",
      "controller": "AkhdimniController",
      "method": "POST",
      "path": "/akhdimni/errands/:id/rate",
      "auth_guard": "[Class] @ApiBearerAuth, @Auth(AuthType.FIREBASE)",
      "dto_in": "@Param: string, @Body: RateErrandDto",
      "dto_out": "import(\"C:/Users/Administrator/Desktop/bthwani_git/backend-nest/src/modules/akhdimni/entities/errand-order.entity\").ErrandOrder",
      "statuses": "201, 400, 401",
      "file": "src\\modules\\akhdimni\\akhdimni.controller.ts",
      "line": 94
    },
    {
      "module": "akhdimni",
      "controller": "AkhdimniController",
      "method": "GET",
      "path": "/akhdimni/driver/my-errands",
      "auth_guard": "[Class] @ApiBearerAuth, @Auth(AuthType.FIREBASE), @Roles('driver')",
      "dto_in": "@Query: string",
      "dto_out": "any[]",
      "statuses": "200, 401",
      "file": "src\\modules\\akhdimni\\akhdimni.controller.ts",
      "line": 107
    },
    {
      "module": "akhdimni",
      "controller": "AkhdimniController",
      "method": "PATCH",
      "path": "/akhdimni/errands/:id/status",
      "auth_guard": "[Class] @ApiBearerAuth, @Auth(AuthType.FIREBASE), @Roles('driver')",
      "dto_in": "@Param: string, @Body: UpdateErrandStatusDto",
      "dto_out": "import(\"C:/Users/Administrator/Desktop/bthwani_git/backend-nest/src/modules/akhdimni/entities/errand-order.entity\").ErrandOrder",
      "statuses": "200, 404, 400, 401",
      "file": "src\\modules\\akhdimni\\akhdimni.controller.ts",
      "line": 120
    },
    {
      "module": "akhdimni",
      "controller": "AkhdimniController",
      "method": "GET",
      "path": "/akhdimni/admin/errands",
      "auth_guard": "[Class] @ApiBearerAuth, @Auth(AuthType.JWT), @Roles('admin', 'superadmin')",
      "dto_in": "@Query: string, @Query: number, @Query: string",
      "dto_out": "import(\"C:/Users/Administrator/Desktop/bthwani_git/backend-nest/src/modules/akhdimni/services/akhdimni.service\").PaginatedOrdersResult",
      "statuses": "200, 401",
      "file": "src\\modules\\akhdimni\\akhdimni.controller.ts",
      "line": 138
    },
    {
      "module": "akhdimni",
      "controller": "AkhdimniController",
      "method": "POST",
      "path": "/akhdimni/admin/errands/:id/assign-driver",
      "auth_guard": "[Class] @ApiBearerAuth, @Auth(AuthType.JWT), @Roles('admin', 'superadmin')",
      "dto_in": "@Param: string, @Body: AssignDriverDto",
      "dto_out": "import(\"C:/Users/Administrator/Desktop/bthwani_git/backend-nest/src/modules/akhdimni/entities/errand-order.entity\").ErrandOrder",
      "statuses": "201, 400, 401",
      "file": "src\\modules\\akhdimni\\akhdimni.controller.ts",
      "line": 152
    },
    {
      "module": "akhdimni",
      "controller": "ErrandsController",
      "method": "POST",
      "path": "/errands/order",
      "auth_guard": "[Class] @ApiBearerAuth, @Auth(AuthType.FIREBASE)",
      "dto_in": "@Body: CreateErrandDto",
      "dto_out": "import(\"C:/Users/Administrator/Desktop/bthwani_git/backend-nest/src/modules/akhdimni/entities/errand-order.entity\").ErrandOrder",
      "statuses": "201, 400, 401",
      "file": "src\\modules\\akhdimni\\errands.controller.ts",
      "line": 30
    },
    {
      "module": "akhdimni",
      "controller": "ErrandsController",
      "method": "GET",
      "path": "/errands/user/:id",
      "auth_guard": "[Class] @ApiBearerAuth, @Auth(AuthType.FIREBASE)",
      "dto_in": "@Param: string, @Query: string",
      "dto_out": "any[]",
      "statuses": "200, 401",
      "file": "src\\modules\\akhdimni\\errands.controller.ts",
      "line": 43
    },
    {
      "module": "akhdimni",
      "controller": "ErrandsController",
      "method": "GET",
      "path": "/errands/categories",
      "auth_guard": "[Class] @ApiBearerAuth, @Auth(AuthType.FIREBASE)",
      "dto_in": "",
      "dto_out": "{ success: boolean; data: { id: string; name: string; icon: string; }[]; }",
      "statuses": "200",
      "file": "src\\modules\\akhdimni\\errands.controller.ts",
      "line": 56
    },
    {
      "module": "akhdimni",
      "controller": "ErrandsController",
      "method": "GET",
      "path": "/errands/drivers/available",
      "auth_guard": "[Class] @ApiBearerAuth, @Auth(AuthType.FIREBASE)",
      "dto_in": "@Query: number, @Query: number",
      "dto_out": "{ success: boolean; data: never[]; message: string; }",
      "statuses": "200",
      "file": "src\\modules\\akhdimni\\errands.controller.ts",
      "line": 73
    },
    {
      "module": "akhdimni",
      "controller": "ErrandsController",
      "method": "GET",
      "path": "/errands/:id",
      "auth_guard": "[Class] @ApiBearerAuth, @Auth(AuthType.FIREBASE)",
      "dto_in": "@Param: string",
      "dto_out": "import(\"C:/Users/Administrator/Desktop/bthwani_git/backend-nest/src/modules/akhdimni/entities/errand-order.entity\").ErrandOrder",
      "statuses": "200, 404, 401",
      "file": "src\\modules\\akhdimni\\errands.controller.ts",
      "line": 91
    },
    {
      "module": "analytics",
      "controller": "AnalyticsController",
      "method": "GET",
      "path": "/analytics/roas/daily",
      "auth_guard": "[Class] UnifiedAuthGuard, [Class] RolesGuard, @Auth(AuthType.JWT), @Roles('admin', 'superadmin')",
      "dto_in": "@Query: string, @Query: string, @Query: string",
      "dto_out": "{ data: (import(\"mongoose\").Document<unknown, {}, import(\"C:/Users/Administrator/Desktop/bthwani_git/backend-nest/src/modules/analytics/entities/roas-daily.entity\").RoasDaily, {}, {}> & import(\"C:/Users/Administrator/Desktop/bthwani_git/backend-nest/src/modules/analytics/entities/roas-daily.entity\").RoasDaily & Required<{ _id: unknown; }> & { __v: number; })[]; }",
      "statuses": "200, 401",
      "file": "src\\modules\\analytics\\analytics.controller.ts",
      "line": 17
    },
    {
      "module": "analytics",
      "controller": "AnalyticsController",
      "method": "GET",
      "path": "/analytics/roas/summary",
      "auth_guard": "[Class] UnifiedAuthGuard, [Class] RolesGuard, @Auth(AuthType.JWT), @Roles('admin', 'superadmin')",
      "dto_in": "@Query: string, @Query: string",
      "dto_out": "",
      "statuses": "200, 401",
      "file": "src\\modules\\analytics\\analytics.controller.ts",
      "line": 32
    },
    {
      "module": "analytics",
      "controller": "AnalyticsController",
      "method": "GET",
      "path": "/analytics/roas/by-platform",
      "auth_guard": "[Class] UnifiedAuthGuard, [Class] RolesGuard, @Auth(AuthType.JWT), @Roles('admin', 'superadmin')",
      "dto_in": "@Query: string, @Query: string",
      "dto_out": "{ data: any[]; }",
      "statuses": "200, 401",
      "file": "src\\modules\\analytics\\analytics.controller.ts",
      "line": 46
    },
    {
      "module": "analytics",
      "controller": "AnalyticsController",
      "method": "POST",
      "path": "/analytics/roas/calculate",
      "auth_guard": "[Class] UnifiedAuthGuard, [Class] RolesGuard, @Auth(AuthType.JWT), @Roles('admin', 'superadmin')",
      "dto_in": "@Body: { date: string }",
      "dto_out": "{ success: boolean; message: string; }",
      "statuses": "201, 400, 401",
      "file": "src\\modules\\analytics\\analytics.controller.ts",
      "line": 60
    },
    {
      "module": "analytics",
      "controller": "AnalyticsController",
      "method": "POST",
      "path": "/analytics/adspend",
      "auth_guard": "[Class] UnifiedAuthGuard, [Class] RolesGuard, @Auth(AuthType.JWT), @Roles('admin', 'superadmin')",
      "dto_in": "@Body: {\r\n      date: string;\r\n      platform: string;\r\n      campaignName: string;\r\n      amount: number;\r\n      impressions?: number;\r\n      clicks?: number;\r\n      conversions?: number;\r\n    }",
      "dto_out": "{ success: boolean; adSpend: import(\"mongoose\").Document<unknown, {}, import(\"C:/Users/Administrator/Desktop/bthwani_git/backend-nest/src/modules/analytics/entities/adspend.entity\").AdSpend, {}, {}> & import(\"C:/Users/Administrator/Desktop/bthwani_git/backend-nest/src/modules/analytics/entities/adspend.entity\").AdSpend & Required<{ _id: unknown; }> & { __v: number; }; }",
      "statuses": "201, 400, 401",
      "file": "src\\modules\\analytics\\analytics.controller.ts",
      "line": 75
    },
    {
      "module": "analytics",
      "controller": "AnalyticsController",
      "method": "GET",
      "path": "/analytics/adspend",
      "auth_guard": "[Class] UnifiedAuthGuard, [Class] RolesGuard, @Auth(AuthType.JWT), @Roles('admin', 'superadmin')",
      "dto_in": "@Query: string, @Query: string, @Query: string",
      "dto_out": "{ data: (import(\"mongoose\").Document<unknown, {}, import(\"C:/Users/Administrator/Desktop/bthwani_git/backend-nest/src/modules/analytics/entities/adspend.entity\").AdSpend, {}, {}> & import(\"C:/Users/Administrator/Desktop/bthwani_git/backend-nest/src/modules/analytics/entities/adspend.entity\").AdSpend & Required<{ _id: unknown; }> & { __v: number; })[]; total: number; }",
      "statuses": "200, 401",
      "file": "src\\modules\\analytics\\analytics.controller.ts",
      "line": 99
    },
    {
      "module": "analytics",
      "controller": "AnalyticsController",
      "method": "GET",
      "path": "/analytics/adspend/summary",
      "auth_guard": "[Class] UnifiedAuthGuard, [Class] RolesGuard, @Auth(AuthType.JWT), @Roles('admin', 'superadmin')",
      "dto_in": "@Query: string, @Query: string",
      "dto_out": "",
      "statuses": "200, 401",
      "file": "src\\modules\\analytics\\analytics.controller.ts",
      "line": 114
    },
    {
      "module": "analytics",
      "controller": "AnalyticsController",
      "method": "GET",
      "path": "/analytics/kpis",
      "auth_guard": "[Class] UnifiedAuthGuard, [Class] RolesGuard, @Auth(AuthType.JWT), @Roles('admin', 'superadmin')",
      "dto_in": "@Query: string, @Query: string",
      "dto_out": "{ orders: any; revenue: any; conversionRate: number; cancellationRate: number; }",
      "statuses": "200, 401",
      "file": "src\\modules\\analytics\\analytics.controller.ts",
      "line": 130
    },
    {
      "module": "analytics",
      "controller": "AnalyticsController",
      "method": "GET",
      "path": "/analytics/kpis/real-time",
      "auth_guard": "[Class] UnifiedAuthGuard, [Class] RolesGuard, @Auth(AuthType.JWT), @Roles('admin', 'superadmin')",
      "dto_in": "",
      "dto_out": "{ recentOrders: number; activeOrders: number; timestamp: Date; }",
      "statuses": "200, 401",
      "file": "src\\modules\\analytics\\analytics.controller.ts",
      "line": 144
    },
    {
      "module": "analytics",
      "controller": "AnalyticsController",
      "method": "GET",
      "path": "/analytics/kpis/trends",
      "auth_guard": "[Class] UnifiedAuthGuard, [Class] RolesGuard, @Auth(AuthType.JWT), @Roles('admin', 'superadmin')",
      "dto_in": "@Query: string, @Query: 'daily' | 'weekly' | 'monthly'",
      "dto_out": "{ data: never[]; }",
      "statuses": "200, 401",
      "file": "src\\modules\\analytics\\analytics.controller.ts",
      "line": 155
    },
    {
      "module": "analytics",
      "controller": "AnalyticsController",
      "method": "POST",
      "path": "/analytics/events/track",
      "auth_guard": "[Class] UnifiedAuthGuard, [Class] RolesGuard, @Auth(AuthType.JWT), @Roles('admin', 'superadmin')",
      "dto_in": "@Body: {\r\n      eventType: string;\r\n      userId?: string;\r\n      source?: string;\r\n      medium?: string;\r\n      campaign?: string;\r\n      metadata?: any;\r\n    }",
      "dto_out": "{ success: boolean; eventId: unknown; }",
      "statuses": "201, 400, 401",
      "file": "src\\modules\\analytics\\analytics.controller.ts",
      "line": 171
    },
    {
      "module": "analytics",
      "controller": "AnalyticsController",
      "method": "GET",
      "path": "/analytics/events",
      "auth_guard": "[Class] UnifiedAuthGuard, [Class] RolesGuard, @Auth(AuthType.JWT), @Roles('admin', 'superadmin')",
      "dto_in": "@Query: string, @Query: string, @Query: string",
      "dto_out": "{ data: (import(\"mongoose\").Document<unknown, {}, import(\"C:/Users/Administrator/Desktop/bthwani_git/backend-nest/src/modules/analytics/entities/marketing-event.entity\").MarketingEvent, {}, {}> & import(\"C:/Users/Administrator/Desktop/bthwani_git/backend-nest/src/modules/analytics/entities/marketing-event.entity\").MarketingEvent & Required<{ _id: unknown; }> & { __v: number; })[]; total: number; }",
      "statuses": "200, 401",
      "file": "src\\modules\\analytics\\analytics.controller.ts",
      "line": 194
    },
    {
      "module": "analytics",
      "controller": "AnalyticsController",
      "method": "GET",
      "path": "/analytics/events/summary",
      "auth_guard": "[Class] UnifiedAuthGuard, [Class] RolesGuard, @Auth(AuthType.JWT), @Roles('admin', 'superadmin')",
      "dto_in": "@Query: string, @Query: string",
      "dto_out": "{ data: any[]; }",
      "statuses": "200, 401",
      "file": "src\\modules\\analytics\\analytics.controller.ts",
      "line": 209
    },
    {
      "module": "analytics",
      "controller": "AnalyticsController",
      "method": "GET",
      "path": "/analytics/funnel/conversion",
      "auth_guard": "[Class] UnifiedAuthGuard, [Class] RolesGuard, @Auth(AuthType.JWT), @Roles('admin', 'superadmin')",
      "dto_in": "@Query: string, @Query: string",
      "dto_out": "{ stages: { name: string; count: number; }[]; }",
      "statuses": "200, 401",
      "file": "src\\modules\\analytics\\analytics.controller.ts",
      "line": 225
    },
    {
      "module": "analytics",
      "controller": "AnalyticsController",
      "method": "GET",
      "path": "/analytics/funnel/drop-off",
      "auth_guard": "[Class] UnifiedAuthGuard, [Class] RolesGuard, @Auth(AuthType.JWT), @Roles('admin', 'superadmin')",
      "dto_in": "",
      "dto_out": "{ dropOffPoints: never[]; }",
      "statuses": "200, 401",
      "file": "src\\modules\\analytics\\analytics.controller.ts",
      "line": 239
    },
    {
      "module": "analytics",
      "controller": "AnalyticsController",
      "method": "GET",
      "path": "/analytics/users/growth",
      "auth_guard": "[Class] UnifiedAuthGuard, [Class] RolesGuard, @Auth(AuthType.JWT), @Roles('admin', 'superadmin')",
      "dto_in": "@Query: 'daily' | 'weekly' | 'monthly'",
      "dto_out": "{ data: never[]; }",
      "statuses": "200, 401",
      "file": "src\\modules\\analytics\\analytics.controller.ts",
      "line": 252
    },
    {
      "module": "analytics",
      "controller": "AnalyticsController",
      "method": "GET",
      "path": "/analytics/users/retention",
      "auth_guard": "[Class] UnifiedAuthGuard, [Class] RolesGuard, @Auth(AuthType.JWT), @Roles('admin', 'superadmin')",
      "dto_in": "",
      "dto_out": "{ retentionRate: number; cohorts: never[]; }",
      "statuses": "200, 401",
      "file": "src\\modules\\analytics\\analytics.controller.ts",
      "line": 263
    },
    {
      "module": "analytics",
      "controller": "AnalyticsController",
      "method": "GET",
      "path": "/analytics/users/cohort",
      "auth_guard": "[Class] UnifiedAuthGuard, [Class] RolesGuard, @Auth(AuthType.JWT), @Roles('admin', 'superadmin')",
      "dto_in": "@Query: string",
      "dto_out": "{ cohort: {}; retention: never[]; }",
      "statuses": "200, 401",
      "file": "src\\modules\\analytics\\analytics.controller.ts",
      "line": 274
    },
    {
      "module": "analytics",
      "controller": "AnalyticsController",
      "method": "GET",
      "path": "/analytics/revenue/forecast",
      "auth_guard": "[Class] UnifiedAuthGuard, [Class] RolesGuard, @Auth(AuthType.JWT), @Roles('admin', 'superadmin')",
      "dto_in": "",
      "dto_out": "{ forecast: never[]; }",
      "statuses": "200, 401",
      "file": "src\\modules\\analytics\\analytics.controller.ts",
      "line": 287
    },
    {
      "module": "analytics",
      "controller": "AnalyticsController",
      "method": "GET",
      "path": "/analytics/revenue/breakdown",
      "auth_guard": "[Class] UnifiedAuthGuard, [Class] RolesGuard, @Auth(AuthType.JWT), @Roles('admin', 'superadmin')",
      "dto_in": "@Query: string, @Query: string",
      "dto_out": "",
      "statuses": "200, 401",
      "file": "src\\modules\\analytics\\analytics.controller.ts",
      "line": 298
    },
    {
      "module": "analytics",
      "controller": "AnalyticsController",
      "method": "GET",
      "path": "/analytics/advanced/dashboard-overview",
      "auth_guard": "[Class] UnifiedAuthGuard, [Class] RolesGuard, @Auth(AuthType.JWT), @Roles('admin', 'superadmin')",
      "dto_in": "@Query: string, @Query: string",
      "dto_out": "{ revenue: { total: number; growth: number; }; orders: { total: number; growth: number; }; users: { total: number; active: number; new: number; }; drivers: { total: number; active: number; }; stores: { total: number; active: number; }; topMetrics: never[]; }",
      "statuses": "200, 401",
      "file": "src\\modules\\analytics\\analytics.controller.ts",
      "line": 314
    },
    {
      "module": "analytics",
      "controller": "AnalyticsController",
      "method": "GET",
      "path": "/analytics/advanced/cohort-analysis-advanced",
      "auth_guard": "[Class] UnifiedAuthGuard, [Class] RolesGuard, @Auth(AuthType.JWT), @Roles('admin', 'superadmin')",
      "dto_in": "@Query: string",
      "dto_out": "{ cohorts: never[]; retentionMatrix: never[]; }",
      "statuses": "200, 401",
      "file": "src\\modules\\analytics\\analytics.controller.ts",
      "line": 328
    },
    {
      "module": "analytics",
      "controller": "AnalyticsController",
      "method": "GET",
      "path": "/analytics/advanced/funnel-analysis",
      "auth_guard": "[Class] UnifiedAuthGuard, [Class] RolesGuard, @Auth(AuthType.JWT), @Roles('admin', 'superadmin')",
      "dto_in": "@Query: string",
      "dto_out": "{ stages: { name: string; users: number; conversion: number; }[]; }",
      "statuses": "200, 401",
      "file": "src\\modules\\analytics\\analytics.controller.ts",
      "line": 339
    },
    {
      "module": "analytics",
      "controller": "AnalyticsController",
      "method": "GET",
      "path": "/analytics/advanced/retention",
      "auth_guard": "[Class] UnifiedAuthGuard, [Class] RolesGuard, @Auth(AuthType.JWT), @Roles('admin', 'superadmin')",
      "dto_in": "@Query: string",
      "dto_out": "{ period: string; rate: number; byPeriod: never[]; }",
      "statuses": "200, 401",
      "file": "src\\modules\\analytics\\analytics.controller.ts",
      "line": 350
    },
    {
      "module": "analytics",
      "controller": "AnalyticsController",
      "method": "GET",
      "path": "/analytics/advanced/ltv",
      "auth_guard": "[Class] UnifiedAuthGuard, [Class] RolesGuard, @Auth(AuthType.JWT), @Roles('admin', 'superadmin')",
      "dto_in": "",
      "dto_out": "{ averageLTV: number; bySegment: never[]; trend: never[]; }",
      "statuses": "200, 401",
      "file": "src\\modules\\analytics\\analytics.controller.ts",
      "line": 361
    },
    {
      "module": "analytics",
      "controller": "AnalyticsController",
      "method": "GET",
      "path": "/analytics/advanced/churn-rate",
      "auth_guard": "[Class] UnifiedAuthGuard, [Class] RolesGuard, @Auth(AuthType.JWT), @Roles('admin', 'superadmin')",
      "dto_in": "@Query: string",
      "dto_out": "{ period: string; rate: number; byPeriod: never[]; reasons: never[]; }",
      "statuses": "200, 401",
      "file": "src\\modules\\analytics\\analytics.controller.ts",
      "line": 372
    },
    {
      "module": "analytics",
      "controller": "AnalyticsController",
      "method": "GET",
      "path": "/analytics/advanced/geographic-distribution",
      "auth_guard": "[Class] UnifiedAuthGuard, [Class] RolesGuard, @Auth(AuthType.JWT), @Roles('admin', 'superadmin')",
      "dto_in": "@Query: string",
      "dto_out": "{ byCity: never[]; byRegion: never[]; total: number; }",
      "statuses": "200, 401",
      "file": "src\\modules\\analytics\\analytics.controller.ts",
      "line": 383
    },
    {
      "module": "analytics",
      "controller": "AnalyticsController",
      "method": "GET",
      "path": "/analytics/advanced/peak-hours",
      "auth_guard": "[Class] UnifiedAuthGuard, [Class] RolesGuard, @Auth(AuthType.JWT), @Roles('admin', 'superadmin')",
      "dto_in": "",
      "dto_out": "{ byHour: never[]; peakHour: string; byDayOfWeek: never[]; }",
      "statuses": "200, 401",
      "file": "src\\modules\\analytics\\analytics.controller.ts",
      "line": 394
    },
    {
      "module": "analytics",
      "controller": "AnalyticsController",
      "method": "GET",
      "path": "/analytics/advanced/product-performance",
      "auth_guard": "[Class] UnifiedAuthGuard, [Class] RolesGuard, @Auth(AuthType.JWT), @Roles('admin', 'superadmin')",
      "dto_in": "@Query: string, @Query: string",
      "dto_out": "{ topProducts: never[]; slowMoving: never[]; trending: never[]; }",
      "statuses": "200, 401",
      "file": "src\\modules\\analytics\\analytics.controller.ts",
      "line": 405
    },
    {
      "module": "analytics",
      "controller": "AnalyticsController",
      "method": "GET",
      "path": "/analytics/advanced/driver-performance",
      "auth_guard": "[Class] UnifiedAuthGuard, [Class] RolesGuard, @Auth(AuthType.JWT), @Roles('admin', 'superadmin')",
      "dto_in": "@Query: string, @Query: string",
      "dto_out": "{ topDrivers: never[]; averageDeliveryTime: number; completionRate: number; }",
      "statuses": "200, 401",
      "file": "src\\modules\\analytics\\analytics.controller.ts",
      "line": 419
    },
    {
      "module": "auth",
      "controller": "AuthController",
      "method": "POST",
      "path": "/auth/firebase/login",
      "auth_guard": "@Public",
      "dto_in": "@Body: FirebaseAuthDto",
      "dto_out": "{ user: { id: any; fullName: any; aliasName: any; email: any; phone: any; profileImage: any; emailVerified: any; classification: any; role: any; addresses: any; defaultAddressId: any; language: any; theme: any; wallet: any; isActive: any; createdAt: any; updatedAt: any; }; token: { accessToken: string; tokenType: string; expiresIn: string; }; }",
      "statuses": "201, 400, 401",
      "file": "src\\modules\\auth\\auth.controller.ts",
      "line": 51
    },
    {
      "module": "auth",
      "controller": "AuthController",
      "method": "POST",
      "path": "/auth/consent",
      "auth_guard": "UnifiedAuthGuard, @Auth(AuthType.FIREBASE)",
      "dto_in": "@Body: ConsentDto",
      "dto_out": "{ success: boolean; message: string; data: import(\"C:/Users/Administrator/Desktop/bthwani_git/backend-nest/src/modules/auth/entities/user-consent.entity\").UserConsent; }",
      "statuses": "201, 400, 401",
      "file": "src\\modules\\auth\\auth.controller.ts",
      "line": 64
    },
    {
      "module": "auth",
      "controller": "AuthController",
      "method": "POST",
      "path": "/auth/consent/bulk",
      "auth_guard": "UnifiedAuthGuard, @Auth(AuthType.FIREBASE)",
      "dto_in": "@Body: BulkConsentDto",
      "dto_out": "{ success: boolean; message: string; data: import(\"C:/Users/Administrator/Desktop/bthwani_git/backend-nest/src/modules/auth/entities/user-consent.entity\").UserConsent[]; }",
      "statuses": "201, 400, 401",
      "file": "src\\modules\\auth\\auth.controller.ts",
      "line": 95
    },
    {
      "module": "auth",
      "controller": "AuthController",
      "method": "DELETE",
      "path": "/auth/consent/:type",
      "auth_guard": "UnifiedAuthGuard, @Auth(AuthType.FIREBASE)",
      "dto_in": "@Param: ConsentType, @Body: string",
      "dto_out": "{ success: boolean; message: string; data: import(\"C:/Users/Administrator/Desktop/bthwani_git/backend-nest/src/modules/auth/entities/user-consent.entity\").UserConsent; }",
      "statuses": "200, 404, 401",
      "file": "src\\modules\\auth\\auth.controller.ts",
      "line": 125
    },
    {
      "module": "auth",
      "controller": "AuthController",
      "method": "GET",
      "path": "/auth/consent/history",
      "auth_guard": "UnifiedAuthGuard, @Auth(AuthType.FIREBASE)",
      "dto_in": "@Query: ConsentType",
      "dto_out": "{ success: boolean; data: import(\"C:/Users/Administrator/Desktop/bthwani_git/backend-nest/src/modules/auth/entities/user-consent.entity\").UserConsent[]; count: number; }",
      "statuses": "200, 401",
      "file": "src\\modules\\auth\\auth.controller.ts",
      "line": 153
    },
    {
      "module": "auth",
      "controller": "AuthController",
      "method": "GET",
      "path": "/auth/consent/summary",
      "auth_guard": "UnifiedAuthGuard, @Auth(AuthType.FIREBASE)",
      "dto_in": "",
      "dto_out": "{ success: boolean; data: any; }",
      "statuses": "200, 401",
      "file": "src\\modules\\auth\\auth.controller.ts",
      "line": 174
    },
    {
      "module": "auth",
      "controller": "AuthController",
      "method": "GET",
      "path": "/auth/consent/check/:type",
      "auth_guard": "UnifiedAuthGuard, @Auth(AuthType.FIREBASE)",
      "dto_in": "@Param: ConsentType",
      "dto_out": "{ success: boolean; data: { consentType: import(\"C:/Users/Administrator/Desktop/bthwani_git/backend-nest/src/modules/auth/dto/consent.dto\").ConsentType; hasActiveConsent: boolean; }; }",
      "statuses": "200, 404, 401",
      "file": "src\\modules\\auth\\auth.controller.ts",
      "line": 190
    },
    {
      "module": "auth",
      "controller": "AuthController",
      "method": "POST",
      "path": "/auth/forgot",
      "auth_guard": "@Public",
      "dto_in": "@Body: ForgotPasswordDto",
      "dto_out": "{ success: boolean; message: string; userMessage: string; }",
      "statuses": "201, 400, 404",
      "file": "src\\modules\\auth\\auth.controller.ts",
      "line": 217
    },
    {
      "module": "auth",
      "controller": "AuthController",
      "method": "POST",
      "path": "/auth/reset/verify",
      "auth_guard": "@Public",
      "dto_in": "@Body: VerifyResetCodeDto",
      "dto_out": "{ success: boolean; message: string; data: { valid: boolean; }; }",
      "statuses": "200, 400, 404",
      "file": "src\\modules\\auth\\auth.controller.ts",
      "line": 233
    },
    {
      "module": "auth",
      "controller": "AuthController",
      "method": "POST",
      "path": "/auth/reset",
      "auth_guard": "@Public",
      "dto_in": "@Body: ResetPasswordDto",
      "dto_out": "{ success: boolean; message: string; userMessage: string; }",
      "statuses": "200, 400, 404",
      "file": "src\\modules\\auth\\auth.controller.ts",
      "line": 252
    },
    {
      "module": "auth",
      "controller": "AuthController",
      "method": "POST",
      "path": "/auth/verify-otp",
      "auth_guard": "@Public",
      "dto_in": "@Body: VerifyOtpDto",
      "dto_out": "{ success: boolean; message: string; data: { verified: boolean; user?: any; token?: any; }; }",
      "statuses": "200, 400, 404",
      "file": "src\\modules\\auth\\auth.controller.ts",
      "line": 272
    },
    {
      "module": "cart",
      "controller": "CartController",
      "method": "GET",
      "path": "/delivery/cart",
      "auth_guard": "[Class] @ApiBearerAuth, @Auth(AuthType.FIREBASE)",
      "dto_in": "",
      "dto_out": "import(\"C:/Users/Administrator/Desktop/bthwani_git/backend-nest/src/modules/cart/entities/cart.entity\").Cart",
      "statuses": "200, 401",
      "file": "src\\modules\\cart\\cart.controller.ts",
      "line": 38
    },
    {
      "module": "cart",
      "controller": "CartController",
      "method": "GET",
      "path": "/delivery/cart/user/:userId",
      "auth_guard": "[Class] @ApiBearerAuth, @Auth(AuthType.FIREBASE)",
      "dto_in": "@Param: string",
      "dto_out": "import(\"C:/Users/Administrator/Desktop/bthwani_git/backend-nest/src/modules/cart/entities/cart.entity\").Cart",
      "statuses": "200, 404, 401",
      "file": "src\\modules\\cart\\cart.controller.ts",
      "line": 47
    },
    {
      "module": "cart",
      "controller": "CartController",
      "method": "GET",
      "path": "/delivery/cart/:cartId",
      "auth_guard": "[Class] @ApiBearerAuth, @Auth(AuthType.FIREBASE)",
      "dto_in": "@Param: string",
      "dto_out": "import(\"C:/Users/Administrator/Desktop/bthwani_git/backend-nest/src/modules/cart/entities/cart.entity\").Cart",
      "statuses": "200, 404, 401",
      "file": "src\\modules\\cart\\cart.controller.ts",
      "line": 58
    },
    {
      "module": "cart",
      "controller": "CartController",
      "method": "DELETE",
      "path": "/delivery/cart/:id",
      "auth_guard": "[Class] @ApiBearerAuth, @Auth(AuthType.FIREBASE)",
      "dto_in": "@Param: string",
      "dto_out": "import(\"C:/Users/Administrator/Desktop/bthwani_git/backend-nest/src/modules/cart/entities/cart.entity\").Cart",
      "statuses": "200, 404, 401",
      "file": "src\\modules\\cart\\cart.controller.ts",
      "line": 69
    },
    {
      "module": "cart",
      "controller": "CartController",
      "method": "POST",
      "path": "/delivery/cart/items",
      "auth_guard": "[Class] @ApiBearerAuth, @Auth(AuthType.FIREBASE)",
      "dto_in": "@Body: AddToCartDto",
      "dto_out": "import(\"C:/Users/Administrator/Desktop/bthwani_git/backend-nest/src/modules/cart/entities/cart.entity\").Cart",
      "statuses": "201, 400, 401",
      "file": "src\\modules\\cart\\cart.controller.ts",
      "line": 80
    },
    {
      "module": "cart",
      "controller": "CartController",
      "method": "POST",
      "path": "/delivery/cart/add",
      "auth_guard": "[Class] @ApiBearerAuth, @Auth(AuthType.FIREBASE)",
      "dto_in": "@Body: any",
      "dto_out": "import(\"C:/Users/Administrator/Desktop/bthwani_git/backend-nest/src/modules/cart/entities/cart.entity\").Cart",
      "statuses": "201, 400, 401",
      "file": "src\\modules\\cart\\cart.controller.ts",
      "line": 93
    },
    {
      "module": "cart",
      "controller": "CartController",
      "method": "PATCH",
      "path": "/delivery/cart/items/:productId",
      "auth_guard": "[Class] @ApiBearerAuth, @Auth(AuthType.FIREBASE)",
      "dto_in": "@Param: string, @Body: UpdateCartItemDto",
      "dto_out": "import(\"C:/Users/Administrator/Desktop/bthwani_git/backend-nest/src/modules/cart/entities/cart.entity\").Cart",
      "statuses": "200, 404, 400, 401",
      "file": "src\\modules\\cart\\cart.controller.ts",
      "line": 117
    },
    {
      "module": "cart",
      "controller": "CartController",
      "method": "PATCH",
      "path": "/delivery/cart/:productId",
      "auth_guard": "[Class] @ApiBearerAuth, @Auth(AuthType.FIREBASE)",
      "dto_in": "@Param: string, @Body: UpdateCartItemDto",
      "dto_out": "import(\"C:/Users/Administrator/Desktop/bthwani_git/backend-nest/src/modules/cart/entities/cart.entity\").Cart",
      "statuses": "200, 404, 400, 401",
      "file": "src\\modules\\cart\\cart.controller.ts",
      "line": 133
    },
    {
      "module": "cart",
      "controller": "CartController",
      "method": "DELETE",
      "path": "/delivery/cart/items/:productId",
      "auth_guard": "[Class] @ApiBearerAuth, @Auth(AuthType.FIREBASE)",
      "dto_in": "@Param: string",
      "dto_out": "import(\"C:/Users/Administrator/Desktop/bthwani_git/backend-nest/src/modules/cart/entities/cart.entity\").Cart",
      "statuses": "200, 404, 401",
      "file": "src\\modules\\cart\\cart.controller.ts",
      "line": 149
    },
    {
      "module": "cart",
      "controller": "CartController",
      "method": "DELETE",
      "path": "/delivery/cart/:productId",
      "auth_guard": "[Class] @ApiBearerAuth, @Auth(AuthType.FIREBASE)",
      "dto_in": "@Param: string",
      "dto_out": "import(\"C:/Users/Administrator/Desktop/bthwani_git/backend-nest/src/modules/cart/entities/cart.entity\").Cart",
      "statuses": "200, 404, 401",
      "file": "src\\modules\\cart\\cart.controller.ts",
      "line": 163
    },
    {
      "module": "cart",
      "controller": "CartController",
      "method": "DELETE",
      "path": "/delivery/cart",
      "auth_guard": "[Class] @ApiBearerAuth, @Auth(AuthType.FIREBASE)",
      "dto_in": "",
      "dto_out": "import(\"C:/Users/Administrator/Desktop/bthwani_git/backend-nest/src/modules/cart/entities/cart.entity\").Cart",
      "statuses": "200, 404, 401",
      "file": "src\\modules\\cart\\cart.controller.ts",
      "line": 177
    },
    {
      "module": "cart",
      "controller": "CartController",
      "method": "PATCH",
      "path": "/delivery/cart/note",
      "auth_guard": "[Class] @ApiBearerAuth, @Auth(AuthType.FIREBASE)",
      "dto_in": "@Body: AddNoteDto",
      "dto_out": "import(\"C:/Users/Administrator/Desktop/bthwani_git/backend-nest/src/modules/cart/entities/cart.entity\").Cart",
      "statuses": "200, 404, 400, 401",
      "file": "src\\modules\\cart\\cart.controller.ts",
      "line": 187
    },
    {
      "module": "cart",
      "controller": "CartController",
      "method": "PATCH",
      "path": "/delivery/cart/delivery-address",
      "auth_guard": "[Class] @ApiBearerAuth, @Auth(AuthType.FIREBASE)",
      "dto_in": "@Body: AddDeliveryAddressDto",
      "dto_out": "import(\"C:/Users/Administrator/Desktop/bthwani_git/backend-nest/src/modules/cart/entities/cart.entity\").Cart",
      "statuses": "200, 404, 400, 401",
      "file": "src\\modules\\cart\\cart.controller.ts",
      "line": 198
    },
    {
      "module": "cart",
      "controller": "CartController",
      "method": "GET",
      "path": "/delivery/cart/count",
      "auth_guard": "[Class] @ApiBearerAuth, @Auth(AuthType.FIREBASE)",
      "dto_in": "",
      "dto_out": "{ count: number; }",
      "statuses": "200, 401",
      "file": "src\\modules\\cart\\cart.controller.ts",
      "line": 212
    },
    {
      "module": "cart",
      "controller": "CartController",
      "method": "GET",
      "path": "/delivery/cart/fee",
      "auth_guard": "[Class] @ApiBearerAuth, @Auth(AuthType.FIREBASE)",
      "dto_in": "",
      "dto_out": "{ subtotal: number; deliveryFee: number; total: number; }",
      "statuses": "200, 401",
      "file": "src\\modules\\cart\\cart.controller.ts",
      "line": 222
    },
    {
      "module": "cart",
      "controller": "CartController",
      "method": "POST",
      "path": "/delivery/cart/merge",
      "auth_guard": "[Class] @ApiBearerAuth, @Auth(AuthType.FIREBASE)",
      "dto_in": "@Body: any",
      "dto_out": "import(\"C:/Users/Administrator/Desktop/bthwani_git/backend-nest/src/modules/cart/entities/cart.entity\").Cart",
      "statuses": "201, 400, 401",
      "file": "src\\modules\\cart\\cart.controller.ts",
      "line": 238
    },
    {
      "module": "cart",
      "controller": "CartController",
      "method": "GET",
      "path": "/delivery/cart/shein",
      "auth_guard": "[Class] @ApiBearerAuth, @Auth(AuthType.FIREBASE)",
      "dto_in": "",
      "dto_out": "import(\"C:/Users/Administrator/Desktop/bthwani_git/backend-nest/src/modules/cart/entities/shein-cart.entity\").SheinCart",
      "statuses": "200, 401",
      "file": "src\\modules\\cart\\cart.controller.ts",
      "line": 252
    },
    {
      "module": "cart",
      "controller": "CartController",
      "method": "POST",
      "path": "/delivery/cart/shein/items",
      "auth_guard": "[Class] @ApiBearerAuth, @Auth(AuthType.FIREBASE)",
      "dto_in": "@Body: AddToSheinCartDto",
      "dto_out": "import(\"C:/Users/Administrator/Desktop/bthwani_git/backend-nest/src/modules/cart/entities/shein-cart.entity\").SheinCart",
      "statuses": "201, 400, 401",
      "file": "src\\modules\\cart\\cart.controller.ts",
      "line": 261
    },
    {
      "module": "cart",
      "controller": "CartController",
      "method": "PATCH",
      "path": "/delivery/cart/shein/items/:sheinProductId",
      "auth_guard": "[Class] @ApiBearerAuth, @Auth(AuthType.FIREBASE)",
      "dto_in": "@Param: string, @Body: UpdateSheinCartItemDto",
      "dto_out": "import(\"C:/Users/Administrator/Desktop/bthwani_git/backend-nest/src/modules/cart/entities/shein-cart.entity\").SheinCart",
      "statuses": "200, 404, 400, 401",
      "file": "src\\modules\\cart\\cart.controller.ts",
      "line": 274
    },
    {
      "module": "cart",
      "controller": "CartController",
      "method": "DELETE",
      "path": "/delivery/cart/shein/items/:sheinProductId",
      "auth_guard": "[Class] @ApiBearerAuth, @Auth(AuthType.FIREBASE)",
      "dto_in": "@Param: string",
      "dto_out": "import(\"C:/Users/Administrator/Desktop/bthwani_git/backend-nest/src/modules/cart/entities/shein-cart.entity\").SheinCart",
      "statuses": "200, 404, 401",
      "file": "src\\modules\\cart\\cart.controller.ts",
      "line": 294
    },
    {
      "module": "cart",
      "controller": "CartController",
      "method": "DELETE",
      "path": "/delivery/cart/shein",
      "auth_guard": "[Class] @ApiBearerAuth, @Auth(AuthType.FIREBASE)",
      "dto_in": "",
      "dto_out": "import(\"C:/Users/Administrator/Desktop/bthwani_git/backend-nest/src/modules/cart/entities/shein-cart.entity\").SheinCart",
      "statuses": "200, 404, 401",
      "file": "src\\modules\\cart\\cart.controller.ts",
      "line": 308
    },
    {
      "module": "cart",
      "controller": "CartController",
      "method": "PATCH",
      "path": "/delivery/cart/shein/shipping",
      "auth_guard": "[Class] @ApiBearerAuth, @Auth(AuthType.FIREBASE)",
      "dto_in": "@Body: UpdateSheinShippingDto",
      "dto_out": "import(\"C:/Users/Administrator/Desktop/bthwani_git/backend-nest/src/modules/cart/entities/shein-cart.entity\").SheinCart",
      "statuses": "200, 404, 400, 401",
      "file": "src\\modules\\cart\\cart.controller.ts",
      "line": 318
    },
    {
      "module": "cart",
      "controller": "CartController",
      "method": "PATCH",
      "path": "/delivery/cart/shein/note",
      "auth_guard": "[Class] @ApiBearerAuth, @Auth(AuthType.FIREBASE)",
      "dto_in": "@Body: AddNoteDto",
      "dto_out": "import(\"C:/Users/Administrator/Desktop/bthwani_git/backend-nest/src/modules/cart/entities/shein-cart.entity\").SheinCart",
      "statuses": "200, 404, 400, 401",
      "file": "src\\modules\\cart\\cart.controller.ts",
      "line": 332
    },
    {
      "module": "cart",
      "controller": "CartController",
      "method": "GET",
      "path": "/delivery/cart/combined",
      "auth_guard": "[Class] @ApiBearerAuth, @Auth(AuthType.FIREBASE)",
      "dto_in": "",
      "dto_out": "{ regularCart: { items: import(\"C:/Users/Administrator/Desktop/bthwani_git/backend-nest/src/modules/cart/entities/cart.entity\").CartItem[]; total: number; itemsCount: number; }; sheinCart: { items: import(\"C:/Users/Administrator/Desktop/bthwani_git/backend-nest/src/modules/cart/entities/shein-cart.entity\").SheinCartItem[]; subtotal: number; shipping: number; serviceFee: number; total: number; itemsCount: number; }; grandTotal: number; }",
      "statuses": "200, 401",
      "file": "src\\modules\\cart\\cart.controller.ts",
      "line": 348
    },
    {
      "module": "cart",
      "controller": "CartController",
      "method": "DELETE",
      "path": "/delivery/cart/combined/clear-all",
      "auth_guard": "[Class] @ApiBearerAuth, @Auth(AuthType.FIREBASE)",
      "dto_in": "",
      "dto_out": "{ message: string; }",
      "statuses": "200, 404, 401",
      "file": "src\\modules\\cart\\cart.controller.ts",
      "line": 383
    },
    {
      "module": "cart",
      "controller": "CartController",
      "method": "GET",
      "path": "/delivery/cart/abandoned",
      "auth_guard": "[Class] @ApiBearerAuth, @Auth(AuthType.FIREBASE)",
      "dto_in": "",
      "dto_out": "(import(\"mongoose\").Document<unknown, {}, import(\"C:/Users/Administrator/Desktop/bthwani_git/backend-nest/src/modules/cart/entities/cart.entity\").Cart, {}, {}> & import(\"C:/Users/Administrator/Desktop/bthwani_git/backend-nest/src/modules/cart/entities/cart.entity\").Cart & Required<{ _id: unknown; }> & { __v: number; })[]",
      "statuses": "200, 401",
      "file": "src\\modules\\cart\\cart.controller.ts",
      "line": 399
    },
    {
      "module": "cart",
      "controller": "CartController",
      "method": "DELETE",
      "path": "/delivery/cart/:cartId/items/:productId",
      "auth_guard": "[Class] @ApiBearerAuth, @Auth(AuthType.FIREBASE)",
      "dto_in": "@Param: string, @Param: string",
      "dto_out": "{ success: boolean; message: string; }",
      "statuses": "200, 404, 401",
      "file": "src\\modules\\cart\\cart.controller.ts",
      "line": 414
    },
    {
      "module": "cart",
      "controller": "CartController",
      "method": "POST",
      "path": "/delivery/cart/:cartId/retarget/push",
      "auth_guard": "[Class] @ApiBearerAuth, @Auth(AuthType.FIREBASE)",
      "dto_in": "@Param: string, @Body: any",
      "dto_out": "{ success: boolean; message: string; }",
      "statuses": "201, 400, 401",
      "file": "src\\modules\\cart\\cart.controller.ts",
      "line": 437
    },
    {
      "module": "content",
      "controller": "ContentController",
      "method": "GET",
      "path": "/content/banners",
      "auth_guard": "",
      "dto_in": "@Query: string",
      "dto_out": "any[]",
      "statuses": "200, 401",
      "file": "src\\modules\\content\\content.controller.ts",
      "line": 35
    },
    {
      "module": "content",
      "controller": "ContentController",
      "method": "POST",
      "path": "/content/banners/:id/click",
      "auth_guard": "",
      "dto_in": "@Param: string",
      "dto_out": "{ message: string; }",
      "statuses": "201, 400, 401",
      "file": "src\\modules\\content\\content.controller.ts",
      "line": 43
    },
    {
      "module": "content",
      "controller": "ContentController",
      "method": "POST",
      "path": "/content/banners",
      "auth_guard": "@Auth(AuthType.JWT), @Roles('admin', 'superadmin')",
      "dto_in": "@Body: CreateBannerDto",
      "dto_out": "import(\"C:/Users/Administrator/Desktop/bthwani_git/backend-nest/src/modules/content/entities/banner.entity\").Banner",
      "statuses": "201, 400, 401",
      "file": "src\\modules\\content\\content.controller.ts",
      "line": 54
    },
    {
      "module": "content",
      "controller": "ContentController",
      "method": "GET",
      "path": "/content/admin/banners",
      "auth_guard": "@Auth(AuthType.JWT), @Roles('admin', 'superadmin')",
      "dto_in": "",
      "dto_out": "any[]",
      "statuses": "200, 401",
      "file": "src\\modules\\content\\content.controller.ts",
      "line": 69
    },
    {
      "module": "content",
      "controller": "ContentController",
      "method": "PATCH",
      "path": "/content/banners/:id",
      "auth_guard": "@Auth(AuthType.JWT), @Roles('admin', 'superadmin')",
      "dto_in": "@Param: string, @Body: UpdateBannerDto",
      "dto_out": "import(\"C:/Users/Administrator/Desktop/bthwani_git/backend-nest/src/modules/content/entities/banner.entity\").Banner",
      "statuses": "200, 404, 400, 401",
      "file": "src\\modules\\content\\content.controller.ts",
      "line": 80
    },
    {
      "module": "content",
      "controller": "ContentController",
      "method": "DELETE",
      "path": "/content/banners/:id",
      "auth_guard": "@Auth(AuthType.JWT), @Roles('admin', 'superadmin')",
      "dto_in": "@Param: string",
      "dto_out": "{ message: string; }",
      "statuses": "200, 404, 401",
      "file": "src\\modules\\content\\content.controller.ts",
      "line": 94
    },
    {
      "module": "content",
      "controller": "ContentController",
      "method": "GET",
      "path": "/content/stores/:storeId/sections",
      "auth_guard": "",
      "dto_in": "@Param: string",
      "dto_out": "any[]",
      "statuses": "200, 404, 401",
      "file": "src\\modules\\content\\content.controller.ts",
      "line": 110
    },
    {
      "module": "content",
      "controller": "ContentController",
      "method": "POST",
      "path": "/content/sections",
      "auth_guard": "@Auth(AuthType.VENDOR_JWT)",
      "dto_in": "@Body: CreateStoreSectionDto",
      "dto_out": "import(\"C:/Users/Administrator/Desktop/bthwani_git/backend-nest/src/modules/content/entities/store-section.entity\").StoreSection",
      "statuses": "201, 400, 401",
      "file": "src\\modules\\content\\content.controller.ts",
      "line": 120
    },
    {
      "module": "content",
      "controller": "ContentController",
      "method": "PATCH",
      "path": "/content/sections/:id",
      "auth_guard": "@Auth(AuthType.VENDOR_JWT)",
      "dto_in": "@Param: string, @Body: UpdateStoreSectionDto",
      "dto_out": "import(\"C:/Users/Administrator/Desktop/bthwani_git/backend-nest/src/modules/content/entities/store-section.entity\").StoreSection",
      "statuses": "200, 404, 400, 401",
      "file": "src\\modules\\content\\content.controller.ts",
      "line": 131
    },
    {
      "module": "content",
      "controller": "ContentController",
      "method": "DELETE",
      "path": "/content/sections/:id",
      "auth_guard": "@Auth(AuthType.VENDOR_JWT)",
      "dto_in": "@Param: string",
      "dto_out": "{ message: string; }",
      "statuses": "200, 404, 401",
      "file": "src\\modules\\content\\content.controller.ts",
      "line": 147
    },
    {
      "module": "content",
      "controller": "ContentController",
      "method": "GET",
      "path": "/content/subscription-plans",
      "auth_guard": "",
      "dto_in": "",
      "dto_out": "any[]",
      "statuses": "200, 401",
      "file": "src\\modules\\content\\content.controller.ts",
      "line": 162
    },
    {
      "module": "content",
      "controller": "ContentController",
      "method": "POST",
      "path": "/content/subscription-plans",
      "auth_guard": "@Auth(AuthType.JWT), @Roles('admin', 'superadmin')",
      "dto_in": "@Body: CreateSubscriptionPlanDto",
      "dto_out": "import(\"C:/Users/Administrator/Desktop/bthwani_git/backend-nest/src/modules/content/entities/subscription.entity\").SubscriptionPlan",
      "statuses": "201, 400, 401",
      "file": "src\\modules\\content\\content.controller.ts",
      "line": 170
    },
    {
      "module": "content",
      "controller": "ContentController",
      "method": "POST",
      "path": "/content/subscribe",
      "auth_guard": "@Auth(AuthType.FIREBASE)",
      "dto_in": "@Body: SubscribeDto",
      "dto_out": "import(\"C:/Users/Administrator/Desktop/bthwani_git/backend-nest/src/modules/content/entities/subscription.entity\").UserSubscription",
      "statuses": "201, 400, 401",
      "file": "src\\modules\\content\\content.controller.ts",
      "line": 182
    },
    {
      "module": "content",
      "controller": "ContentController",
      "method": "GET",
      "path": "/content/my-subscription",
      "auth_guard": "@Auth(AuthType.FIREBASE)",
      "dto_in": "",
      "dto_out": "import(\"C:/Users/Administrator/Desktop/bthwani_git/backend-nest/src/modules/content/entities/subscription.entity\").UserSubscription | null",
      "statuses": "200, 401",
      "file": "src\\modules\\content\\content.controller.ts",
      "line": 196
    },
    {
      "module": "content",
      "controller": "ContentController",
      "method": "PATCH",
      "path": "/content/my-subscription/cancel",
      "auth_guard": "@Auth(AuthType.FIREBASE)",
      "dto_in": "@Body: { reason: string }",
      "dto_out": "import(\"C:/Users/Administrator/Desktop/bthwani_git/backend-nest/src/modules/content/entities/subscription.entity\").UserSubscription",
      "statuses": "200, 404, 400, 401",
      "file": "src\\modules\\content\\content.controller.ts",
      "line": 206
    },
    {
      "module": "content",
      "controller": "ContentController",
      "method": "GET",
      "path": "/content/pages",
      "auth_guard": "",
      "dto_in": "@Query: string",
      "dto_out": "(import(\"mongoose\").FlattenMaps<import(\"C:/Users/Administrator/Desktop/bthwani_git/backend-nest/src/modules/content/entities/banner.entity\").Banner> & Required<{ _id: import(\"mongoose\").FlattenMaps<unknown>; }> & { __v: number; })[]",
      "statuses": "200, 401",
      "file": "src\\modules\\content\\content.controller.ts",
      "line": 224
    },
    {
      "module": "content",
      "controller": "ContentController",
      "method": "GET",
      "path": "/content/pages/:slug",
      "auth_guard": "",
      "dto_in": "@Param: string",
      "dto_out": "import(\"mongoose\").Document<unknown, {}, import(\"C:/Users/Administrator/Desktop/bthwani_git/backend-nest/src/modules/content/entities/banner.entity\").Banner, {}, {}> & import(\"C:/Users/Administrator/Desktop/bthwani_git/backend-nest/src/modules/content/entities/banner.entity\").Banner & Required<{ _id: unknown; }> & { __v: number; }",
      "statuses": "200, 404, 401",
      "file": "src\\modules\\content\\content.controller.ts",
      "line": 232
    },
    {
      "module": "content",
      "controller": "ContentController",
      "method": "POST",
      "path": "/content/admin/pages",
      "auth_guard": "@Auth(AuthType.JWT), @Roles('admin', 'superadmin')",
      "dto_in": "@Body: any",
      "dto_out": "{ success: boolean; message: string; page: unknown; }",
      "statuses": "201, 400, 401",
      "file": "src\\modules\\content\\content.controller.ts",
      "line": 242
    },
    {
      "module": "content",
      "controller": "ContentController",
      "method": "PATCH",
      "path": "/content/admin/pages/:id",
      "auth_guard": "@Auth(AuthType.JWT), @Roles('admin', 'superadmin')",
      "dto_in": "@Param: string, @Body: any",
      "dto_out": "{ success: boolean; message: string; }",
      "statuses": "200, 404, 400, 401",
      "file": "src\\modules\\content\\content.controller.ts",
      "line": 255
    },
    {
      "module": "content",
      "controller": "ContentController",
      "method": "GET",
      "path": "/content/app-settings",
      "auth_guard": "",
      "dto_in": "",
      "dto_out": "{ maintenanceMode: boolean; allowRegistration: boolean; minAppVersion: string; forceUpdate: boolean; supportWhatsapp: string; supportEmail: string; socialMedia: { twitter: string; instagram: string; facebook: string; }; }",
      "statuses": "200, 401",
      "file": "src\\modules\\content\\content.controller.ts",
      "line": 271
    },
    {
      "module": "content",
      "controller": "ContentController",
      "method": "PATCH",
      "path": "/content/admin/app-settings",
      "auth_guard": "@Auth(AuthType.JWT), @Roles('admin', 'superadmin')",
      "dto_in": "@Body: any",
      "dto_out": "{ success: boolean; message: string; settings: unknown; }",
      "statuses": "200, 404, 400, 401",
      "file": "src\\modules\\content\\content.controller.ts",
      "line": 279
    },
    {
      "module": "content",
      "controller": "ContentController",
      "method": "GET",
      "path": "/content/faqs",
      "auth_guard": "",
      "dto_in": "@Query: string",
      "dto_out": "{ data: { question: string; answer: string; category: string; order: number; }[]; }",
      "statuses": "200, 401",
      "file": "src\\modules\\content\\content.controller.ts",
      "line": 298
    },
    {
      "module": "content",
      "controller": "ContentController",
      "method": "POST",
      "path": "/content/admin/faqs",
      "auth_guard": "@Auth(AuthType.JWT), @Roles('admin', 'superadmin')",
      "dto_in": "@Body: any",
      "dto_out": "{ success: boolean; message: string; faq: unknown; }",
      "statuses": "201, 400, 401",
      "file": "src\\modules\\content\\content.controller.ts",
      "line": 306
    },
    {
      "module": "content",
      "controller": "ContentController",
      "method": "PATCH",
      "path": "/content/admin/faqs/:id",
      "auth_guard": "@Auth(AuthType.JWT), @Roles('admin', 'superadmin')",
      "dto_in": "@Param: string, @Body: any",
      "dto_out": "{ success: boolean; message: string; }",
      "statuses": "200, 404, 400, 401",
      "file": "src\\modules\\content\\content.controller.ts",
      "line": 319
    },
    {
      "module": "content",
      "controller": "ContentController",
      "method": "DELETE",
      "path": "/content/admin/faqs/:id",
      "auth_guard": "@Auth(AuthType.JWT), @Roles('admin', 'superadmin')",
      "dto_in": "@Param: string",
      "dto_out": "{ success: boolean; message: string; }",
      "statuses": "200, 404, 401",
      "file": "src\\modules\\content\\content.controller.ts",
      "line": 333
    },
    {
      "module": "driver",
      "controller": "DriverController",
      "method": "POST",
      "path": "/drivers",
      "auth_guard": "[Class] UnifiedAuthGuard, [Class] RolesGuard, [Class] @ApiBearerAuth, @Auth(AuthType.JWT), @Roles('admin', 'superadmin')",
      "dto_in": "@Body: CreateDriverDto",
      "dto_out": "import(\"C:/Users/Administrator/Desktop/bthwani_git/backend-nest/src/modules/driver/entities/driver.entity\").Driver",
      "statuses": "201, 400, 401",
      "file": "src\\modules\\driver\\driver.controller.ts",
      "line": 32
    },
    {
      "module": "driver",
      "controller": "DriverController",
      "method": "GET",
      "path": "/drivers/available",
      "auth_guard": "[Class] UnifiedAuthGuard, [Class] RolesGuard, [Class] @ApiBearerAuth, @Auth(AuthType.JWT)",
      "dto_in": "@Query: CursorPaginationDto",
      "dto_out": "{ data: import(\"C:/Users/Administrator/Desktop/bthwani_git/backend-nest/src/modules/driver/entities/driver.entity\").Driver[]; pagination: { nextCursor: string | null; hasMore: boolean; limit: number; }; }",
      "statuses": "200, 401",
      "file": "src\\modules\\driver\\driver.controller.ts",
      "line": 43
    },
    {
      "module": "driver",
      "controller": "DriverController",
      "method": "GET",
      "path": "/drivers/:id",
      "auth_guard": "[Class] UnifiedAuthGuard, [Class] RolesGuard, [Class] @ApiBearerAuth, @Auth(AuthType.JWT)",
      "dto_in": "@Param: string",
      "dto_out": "import(\"C:/Users/Administrator/Desktop/bthwani_git/backend-nest/src/modules/driver/entities/driver.entity\").Driver",
      "statuses": "200, 404, 401",
      "file": "src\\modules\\driver\\driver.controller.ts",
      "line": 52
    },
    {
      "module": "driver",
      "controller": "DriverController",
      "method": "PATCH",
      "path": "/drivers/location",
      "auth_guard": "[Class] UnifiedAuthGuard, [Class] RolesGuard, [Class] @ApiBearerAuth, @Auth(AuthType.JWT), @Roles('driver')",
      "dto_in": "@Body: UpdateLocationDto",
      "dto_out": "import(\"C:/Users/Administrator/Desktop/bthwani_git/backend-nest/src/modules/driver/entities/driver.entity\").Driver",
      "statuses": "200, 404, 400, 401",
      "file": "src\\modules\\driver\\driver.controller.ts",
      "line": 63
    },
    {
      "module": "driver",
      "controller": "DriverController",
      "method": "PATCH",
      "path": "/drivers/availability",
      "auth_guard": "[Class] UnifiedAuthGuard, [Class] RolesGuard, [Class] @ApiBearerAuth, @Auth(AuthType.JWT), @Roles('driver')",
      "dto_in": "@Body: boolean",
      "dto_out": "import(\"C:/Users/Administrator/Desktop/bthwani_git/backend-nest/src/modules/driver/entities/driver.entity\").Driver",
      "statuses": "200, 404, 400, 401",
      "file": "src\\modules\\driver\\driver.controller.ts",
      "line": 78
    },
    {
      "module": "driver",
      "controller": "DriverController",
      "method": "GET",
      "path": "/drivers/profile",
      "auth_guard": "[Class] UnifiedAuthGuard, [Class] RolesGuard, [Class] @ApiBearerAuth, @Auth(AuthType.JWT), @Roles('driver')",
      "dto_in": "",
      "dto_out": "import(\"C:/Users/Administrator/Desktop/bthwani_git/backend-nest/src/modules/driver/entities/driver.entity\").Driver",
      "statuses": "200, 401",
      "file": "src\\modules\\driver\\driver.controller.ts",
      "line": 96
    },
    {
      "module": "driver",
      "controller": "DriverController",
      "method": "PATCH",
      "path": "/drivers/profile",
      "auth_guard": "[Class] UnifiedAuthGuard, [Class] RolesGuard, [Class] @ApiBearerAuth, @Auth(AuthType.JWT), @Roles('driver')",
      "dto_in": "@Body: any",
      "dto_out": "import(\"C:/Users/Administrator/Desktop/bthwani_git/backend-nest/src/modules/driver/entities/driver.entity\").Driver",
      "statuses": "200, 404, 400, 401",
      "file": "src\\modules\\driver\\driver.controller.ts",
      "line": 106
    },
    {
      "module": "driver",
      "controller": "DriverController",
      "method": "GET",
      "path": "/drivers/earnings",
      "auth_guard": "[Class] UnifiedAuthGuard, [Class] RolesGuard, [Class] @ApiBearerAuth, @Auth(AuthType.JWT), @Roles('driver')",
      "dto_in": "@Query: string, @Query: string",
      "dto_out": "{ totalEarnings: number; ordersCount: number; averagePerOrder: number; }",
      "statuses": "200, 401",
      "file": "src\\modules\\driver\\driver.controller.ts",
      "line": 121
    },
    {
      "module": "driver",
      "controller": "DriverController",
      "method": "GET",
      "path": "/drivers/earnings/daily",
      "auth_guard": "[Class] UnifiedAuthGuard, [Class] RolesGuard, [Class] @ApiBearerAuth, @Auth(AuthType.JWT), @Roles('driver')",
      "dto_in": "",
      "dto_out": "{ earnings: number; ordersCount: number; }",
      "statuses": "200, 401",
      "file": "src\\modules\\driver\\driver.controller.ts",
      "line": 135
    },
    {
      "module": "driver",
      "controller": "DriverController",
      "method": "GET",
      "path": "/drivers/earnings/weekly",
      "auth_guard": "[Class] UnifiedAuthGuard, [Class] RolesGuard, [Class] @ApiBearerAuth, @Auth(AuthType.JWT), @Roles('driver')",
      "dto_in": "",
      "dto_out": "{ earnings: number; ordersCount: number; }",
      "statuses": "200, 401",
      "file": "src\\modules\\driver\\driver.controller.ts",
      "line": 145
    },
    {
      "module": "driver",
      "controller": "DriverController",
      "method": "GET",
      "path": "/drivers/statistics",
      "auth_guard": "[Class] UnifiedAuthGuard, [Class] RolesGuard, [Class] @ApiBearerAuth, @Auth(AuthType.JWT), @Roles('driver')",
      "dto_in": "",
      "dto_out": "{ totalOrders: number; completedOrders: number; cancelledOrders: number; totalEarnings: number; averageRating: number; }",
      "statuses": "200, 401",
      "file": "src\\modules\\driver\\driver.controller.ts",
      "line": 157
    },
    {
      "module": "driver",
      "controller": "DriverController",
      "method": "POST",
      "path": "/drivers/documents/upload",
      "auth_guard": "[Class] UnifiedAuthGuard, [Class] RolesGuard, [Class] @ApiBearerAuth, @Auth(AuthType.JWT), @Roles('driver')",
      "dto_in": "@Body: {\r\n      type: string;\r\n      fileUrl: string;\r\n      expiryDate?: string;\r\n    }",
      "dto_out": "{ success: boolean; message: string; }",
      "statuses": "201, 400, 401",
      "file": "src\\modules\\driver\\driver.controller.ts",
      "line": 169
    },
    {
      "module": "driver",
      "controller": "DriverController",
      "method": "GET",
      "path": "/drivers/documents",
      "auth_guard": "[Class] UnifiedAuthGuard, [Class] RolesGuard, [Class] @ApiBearerAuth, @Auth(AuthType.JWT), @Roles('driver')",
      "dto_in": "",
      "dto_out": "{ documents: unknown[]; }",
      "statuses": "200, 401",
      "file": "src\\modules\\driver\\driver.controller.ts",
      "line": 189
    },
    {
      "module": "driver",
      "controller": "DriverController",
      "method": "GET",
      "path": "/drivers/:driverId/documents",
      "auth_guard": "[Class] UnifiedAuthGuard, [Class] RolesGuard, [Class] @ApiBearerAuth, @Auth(AuthType.JWT), @Roles('admin', 'superadmin')",
      "dto_in": "@Param: string",
      "dto_out": "{ documents: unknown[]; }",
      "statuses": "200, 404, 401",
      "file": "src\\modules\\driver\\driver.controller.ts",
      "line": 199
    },
    {
      "module": "driver",
      "controller": "DriverController",
      "method": "POST",
      "path": "/drivers/:driverId/documents/:docId/verify",
      "auth_guard": "[Class] UnifiedAuthGuard, [Class] RolesGuard, [Class] @ApiBearerAuth, @Auth(AuthType.JWT), @Roles('admin', 'superadmin')",
      "dto_in": "@Param: string, @Param: string, @Body: { verified: boolean; notes?: string }",
      "dto_out": "{ message: string; driverId: string; docId: string; verified: boolean; adminId: string; }",
      "statuses": "201, 400, 401",
      "file": "src\\modules\\driver\\driver.controller.ts",
      "line": 211
    },
    {
      "module": "driver",
      "controller": "DriverController",
      "method": "POST",
      "path": "/drivers/vacations/request",
      "auth_guard": "[Class] UnifiedAuthGuard, [Class] RolesGuard, [Class] @ApiBearerAuth, @Auth(AuthType.JWT), @Roles('driver')",
      "dto_in": "@Body: {\r\n      startDate: string;\r\n      endDate: string;\r\n      type: string;\r\n      reason?: string;\r\n    }",
      "dto_out": "{ success: boolean; message: string; requestId: string; }",
      "statuses": "201, 400, 401",
      "file": "src\\modules\\driver\\driver.controller.ts",
      "line": 232
    },
    {
      "module": "driver",
      "controller": "DriverController",
      "method": "GET",
      "path": "/drivers/vacations/my",
      "auth_guard": "[Class] UnifiedAuthGuard, [Class] RolesGuard, [Class] @ApiBearerAuth, @Auth(AuthType.JWT), @Roles('driver')",
      "dto_in": "",
      "dto_out": "{ data: never[]; }",
      "statuses": "200, 401",
      "file": "src\\modules\\driver\\driver.controller.ts",
      "line": 253
    },
    {
      "module": "driver",
      "controller": "DriverController",
      "method": "PATCH",
      "path": "/drivers/vacations/:id/cancel",
      "auth_guard": "[Class] UnifiedAuthGuard, [Class] RolesGuard, [Class] @ApiBearerAuth, @Auth(AuthType.JWT), @Roles('driver')",
      "dto_in": "@Param: string",
      "dto_out": "{ success: boolean; message: string; }",
      "statuses": "200, 404, 400, 401",
      "file": "src\\modules\\driver\\driver.controller.ts",
      "line": 263
    },
    {
      "module": "driver",
      "controller": "DriverController",
      "method": "GET",
      "path": "/drivers/vacations/balance",
      "auth_guard": "[Class] UnifiedAuthGuard, [Class] RolesGuard, [Class] @ApiBearerAuth, @Auth(AuthType.JWT), @Roles('driver')",
      "dto_in": "",
      "dto_out": "{ annual: number; sick: number; used: number; remaining: number; }",
      "statuses": "200, 401",
      "file": "src\\modules\\driver\\driver.controller.ts",
      "line": 279
    },
    {
      "module": "driver",
      "controller": "DriverController",
      "method": "GET",
      "path": "/drivers/vacations/policy",
      "auth_guard": "[Class] UnifiedAuthGuard, [Class] RolesGuard, [Class] @ApiBearerAuth, @Auth(AuthType.JWT), @Roles('driver')",
      "dto_in": "",
      "dto_out": "{ annualLeave: number; sickLeave: number; emergencyLeave: number; rules: string; }",
      "statuses": "200, 401",
      "file": "src\\modules\\driver\\driver.controller.ts",
      "line": 289
    },
    {
      "module": "driver",
      "controller": "DriverController",
      "method": "GET",
      "path": "/drivers/orders/available",
      "auth_guard": "[Class] UnifiedAuthGuard, [Class] RolesGuard, [Class] @ApiBearerAuth, @Auth(AuthType.JWT), @Roles('driver')",
      "dto_in": "",
      "dto_out": "{ data: never[]; }",
      "statuses": "200, 401",
      "file": "src\\modules\\driver\\driver.controller.ts",
      "line": 304
    },
    {
      "module": "driver",
      "controller": "DriverController",
      "method": "POST",
      "path": "/drivers/orders/:id/accept",
      "auth_guard": "[Class] UnifiedAuthGuard, [Class] RolesGuard, [Class] @ApiBearerAuth, @Auth(AuthType.JWT), @Roles('driver')",
      "dto_in": "@Param: string",
      "dto_out": "{ success: boolean; message: string; }",
      "statuses": "201, 400, 401",
      "file": "src\\modules\\driver\\driver.controller.ts",
      "line": 314
    },
    {
      "module": "driver",
      "controller": "DriverController",
      "method": "POST",
      "path": "/drivers/orders/:id/reject",
      "auth_guard": "[Class] UnifiedAuthGuard, [Class] RolesGuard, [Class] @ApiBearerAuth, @Auth(AuthType.JWT), @Roles('driver')",
      "dto_in": "@Param: string, @Body: { reason: string }",
      "dto_out": "{ success: boolean; message: string; }",
      "statuses": "201, 400, 401",
      "file": "src\\modules\\driver\\driver.controller.ts",
      "line": 329
    },
    {
      "module": "driver",
      "controller": "DriverController",
      "method": "POST",
      "path": "/drivers/orders/:id/start-delivery",
      "auth_guard": "[Class] UnifiedAuthGuard, [Class] RolesGuard, [Class] @ApiBearerAuth, @Auth(AuthType.JWT), @Roles('driver')",
      "dto_in": "@Param: string",
      "dto_out": "{ success: boolean; message: string; }",
      "statuses": "201, 400, 401",
      "file": "src\\modules\\driver\\driver.controller.ts",
      "line": 345
    },
    {
      "module": "driver",
      "controller": "DriverController",
      "method": "POST",
      "path": "/drivers/orders/:id/complete",
      "auth_guard": "[Class] UnifiedAuthGuard, [Class] RolesGuard, [Class] @ApiBearerAuth, @Auth(AuthType.JWT), @Roles('driver')",
      "dto_in": "@Param: string",
      "dto_out": "{ success: boolean; message: string; }",
      "statuses": "201, 400, 401",
      "file": "src\\modules\\driver\\driver.controller.ts",
      "line": 360
    },
    {
      "module": "driver",
      "controller": "DriverController",
      "method": "GET",
      "path": "/drivers/orders/history",
      "auth_guard": "[Class] UnifiedAuthGuard, [Class] RolesGuard, [Class] @ApiBearerAuth, @Auth(AuthType.JWT), @Roles('driver')",
      "dto_in": "@Query: CursorPaginationDto",
      "dto_out": "{ data: never[]; pagination: { nextCursor: null; hasMore: boolean; limit: number; }; }",
      "statuses": "200, 401",
      "file": "src\\modules\\driver\\driver.controller.ts",
      "line": 375
    },
    {
      "module": "driver",
      "controller": "DriverController",
      "method": "POST",
      "path": "/drivers/issues/report",
      "auth_guard": "[Class] UnifiedAuthGuard, [Class] RolesGuard, [Class] @ApiBearerAuth, @Auth(AuthType.JWT), @Roles('driver')",
      "dto_in": "@Body: { type: string; description: string; orderId?: string }",
      "dto_out": "{ success: boolean; message: string; issueId: string; }",
      "statuses": "201, 400, 401",
      "file": "src\\modules\\driver\\driver.controller.ts",
      "line": 390
    },
    {
      "module": "driver",
      "controller": "DriverController",
      "method": "POST",
      "path": "/drivers/change-password",
      "auth_guard": "[Class] UnifiedAuthGuard, [Class] RolesGuard, [Class] @ApiBearerAuth, @Auth(AuthType.JWT), @Roles('driver')",
      "dto_in": "@Body: { oldPassword: string; newPassword: string }",
      "dto_out": "{ success: boolean; message: string; }",
      "statuses": "201, 400, 401",
      "file": "src\\modules\\driver\\driver.controller.ts",
      "line": 405
    },
    {
      "module": "er",
      "controller": "EmployeesCompatController",
      "method": "DELETE",
      "path": "/employees/:id",
      "auth_guard": "[Class] @ApiBearerAuth, @Auth(AuthType.JWT), @Roles('admin', 'superadmin')",
      "dto_in": "@Param: string",
      "dto_out": "",
      "statuses": "",
      "file": "src\\modules\\er\\employees-compat.controller.ts",
      "line": 19
    },
    {
      "module": "er",
      "controller": "ERController",
      "method": "POST",
      "path": "/er/employees",
      "auth_guard": "[Class] @ApiBearerAuth, @Auth(AuthType.JWT), @Roles('admin', 'superadmin')",
      "dto_in": "@Body: CreateEmployeeDto",
      "dto_out": "import(\"C:/Users/Administrator/Desktop/bthwani_git/backend-nest/src/modules/er/entities/employee.entity\").Employee",
      "statuses": "201, 400, 401",
      "file": "src\\modules\\er\\er.controller.ts",
      "line": 37
    },
    {
      "module": "er",
      "controller": "ERController",
      "method": "GET",
      "path": "/er/employees",
      "auth_guard": "[Class] @ApiBearerAuth, @Auth(AuthType.JWT), @Roles('admin', 'superadmin')",
      "dto_in": "@Query: string",
      "dto_out": "any[]",
      "statuses": "200, 401",
      "file": "src\\modules\\er\\er.controller.ts",
      "line": 49
    },
    {
      "module": "er",
      "controller": "ERController",
      "method": "GET",
      "path": "/er/employees/:id",
      "auth_guard": "[Class] @ApiBearerAuth, @Auth(AuthType.JWT), @Roles('admin', 'superadmin')",
      "dto_in": "@Param: string",
      "dto_out": "import(\"C:/Users/Administrator/Desktop/bthwani_git/backend-nest/src/modules/er/entities/employee.entity\").Employee",
      "statuses": "200, 404, 401",
      "file": "src\\modules\\er\\er.controller.ts",
      "line": 60
    },
    {
      "module": "er",
      "controller": "ERController",
      "method": "PATCH",
      "path": "/er/employees/:id",
      "auth_guard": "[Class] @ApiBearerAuth, @Auth(AuthType.JWT), @Roles('admin', 'superadmin')",
      "dto_in": "@Param: string, @Body: UpdateEmployeeDto",
      "dto_out": "import(\"C:/Users/Administrator/Desktop/bthwani_git/backend-nest/src/modules/er/entities/employee.entity\").Employee",
      "statuses": "200, 404, 400, 401",
      "file": "src\\modules\\er\\er.controller.ts",
      "line": 73
    },
    {
      "module": "er",
      "controller": "ERController",
      "method": "DELETE",
      "path": "/er/employees/:id",
      "auth_guard": "[Class] @ApiBearerAuth, @Auth(AuthType.JWT), @Roles('admin', 'superadmin')",
      "dto_in": "@Param: string",
      "dto_out": "",
      "statuses": "200, 404, 401",
      "file": "src\\modules\\er\\er.controller.ts",
      "line": 90
    },
    {
      "module": "er",
      "controller": "ERController",
      "method": "POST",
      "path": "/er/attendance/check-in",
      "auth_guard": "[Class] @ApiBearerAuth, @Auth(AuthType.JWT)",
      "dto_in": "@Body: { location?: { lat: number; lng: number } }",
      "dto_out": "import(\"C:/Users/Administrator/Desktop/bthwani_git/backend-nest/src/modules/er/entities/attendance.entity\").Attendance",
      "statuses": "201, 400, 401",
      "file": "src\\modules\\er\\er.controller.ts",
      "line": 105
    },
    {
      "module": "er",
      "controller": "ERController",
      "method": "POST",
      "path": "/er/attendance/check-out",
      "auth_guard": "[Class] @ApiBearerAuth, @Auth(AuthType.JWT)",
      "dto_in": "@Body: { location?: { lat: number; lng: number } }",
      "dto_out": "import(\"C:/Users/Administrator/Desktop/bthwani_git/backend-nest/src/modules/er/entities/attendance.entity\").Attendance",
      "statuses": "201, 400, 401",
      "file": "src\\modules\\er\\er.controller.ts",
      "line": 120
    },
    {
      "module": "er",
      "controller": "ERController",
      "method": "GET",
      "path": "/er/attendance/:employeeId",
      "auth_guard": "[Class] @ApiBearerAuth, @Auth(AuthType.JWT), @Roles('admin', 'superadmin')",
      "dto_in": "@Param: string, @Query: number, @Query: number",
      "dto_out": "any[]",
      "statuses": "200, 404, 401",
      "file": "src\\modules\\er\\er.controller.ts",
      "line": 135
    },
    {
      "module": "er",
      "controller": "ERController",
      "method": "POST",
      "path": "/er/leave-requests",
      "auth_guard": "[Class] @ApiBearerAuth, @Auth(AuthType.JWT)",
      "dto_in": "@Body: CreateLeaveRequestDto",
      "dto_out": "import(\"C:/Users/Administrator/Desktop/bthwani_git/backend-nest/src/modules/er/entities/leave-request.entity\").LeaveRequest",
      "statuses": "201, 400, 401",
      "file": "src\\modules\\er\\er.controller.ts",
      "line": 154
    },
    {
      "module": "er",
      "controller": "ERController",
      "method": "PATCH",
      "path": "/er/leave-requests/:id/approve",
      "auth_guard": "[Class] @ApiBearerAuth, @Auth(AuthType.JWT), @Roles('admin', 'superadmin')",
      "dto_in": "@Param: string",
      "dto_out": "import(\"C:/Users/Administrator/Desktop/bthwani_git/backend-nest/src/modules/er/entities/leave-request.entity\").LeaveRequest",
      "statuses": "200, 404, 400, 401",
      "file": "src\\modules\\er\\er.controller.ts",
      "line": 168
    },
    {
      "module": "er",
      "controller": "ERController",
      "method": "PATCH",
      "path": "/er/leave-requests/:id/reject",
      "auth_guard": "[Class] @ApiBearerAuth, @Auth(AuthType.JWT), @Roles('admin', 'superadmin')",
      "dto_in": "@Param: string, @Body: { reason: string }",
      "dto_out": "import(\"C:/Users/Administrator/Desktop/bthwani_git/backend-nest/src/modules/er/entities/leave-request.entity\").LeaveRequest",
      "statuses": "200, 404, 400, 401",
      "file": "src\\modules\\er\\er.controller.ts",
      "line": 185
    },
    {
      "module": "er",
      "controller": "ERController",
      "method": "POST",
      "path": "/er/payroll/generate",
      "auth_guard": "[Class] @ApiBearerAuth, @Auth(AuthType.JWT), @Roles('admin', 'superadmin')",
      "dto_in": "@Body: { employeeId: string; month: number; year: number }",
      "dto_out": "import(\"C:/Users/Administrator/Desktop/bthwani_git/backend-nest/src/modules/er/entities/payroll.entity\").Payroll",
      "statuses": "201, 400, 401",
      "file": "src\\modules\\er\\er.controller.ts",
      "line": 204
    },
    {
      "module": "er",
      "controller": "ERController",
      "method": "PATCH",
      "path": "/er/payroll/:id/approve",
      "auth_guard": "[Class] @ApiBearerAuth, @Auth(AuthType.JWT), @Roles('admin', 'superadmin')",
      "dto_in": "@Param: string",
      "dto_out": "import(\"C:/Users/Administrator/Desktop/bthwani_git/backend-nest/src/modules/er/entities/payroll.entity\").Payroll",
      "statuses": "200, 404, 400, 401",
      "file": "src\\modules\\er\\er.controller.ts",
      "line": 219
    },
    {
      "module": "er",
      "controller": "ERController",
      "method": "PATCH",
      "path": "/er/payroll/:id/mark-paid",
      "auth_guard": "[Class] @ApiBearerAuth, @Auth(AuthType.JWT), @Roles('admin', 'superadmin')",
      "dto_in": "@Param: string, @Body: { transactionRef: string }",
      "dto_out": "import(\"C:/Users/Administrator/Desktop/bthwani_git/backend-nest/src/modules/er/entities/payroll.entity\").Payroll",
      "statuses": "200, 404, 400, 401",
      "file": "src\\modules\\er\\er.controller.ts",
      "line": 236
    },
    {
      "module": "er",
      "controller": "ERController",
      "method": "POST",
      "path": "/er/accounts",
      "auth_guard": "[Class] @ApiBearerAuth, @Auth(AuthType.JWT), @Roles('admin', 'superadmin')",
      "dto_in": "@Body: CreateChartAccountDto",
      "dto_out": "import(\"C:/Users/Administrator/Desktop/bthwani_git/backend-nest/src/modules/er/entities/chart-of-accounts.entity\").ChartOfAccounts",
      "statuses": "201, 400, 401",
      "file": "src\\modules\\er\\er.controller.ts",
      "line": 255
    },
    {
      "module": "er",
      "controller": "ERController",
      "method": "GET",
      "path": "/er/accounts",
      "auth_guard": "[Class] @ApiBearerAuth, @Auth(AuthType.JWT), @Roles('admin', 'superadmin')",
      "dto_in": "@Query: string",
      "dto_out": "any[]",
      "statuses": "200, 401",
      "file": "src\\modules\\er\\er.controller.ts",
      "line": 267
    },
    {
      "module": "er",
      "controller": "ERController",
      "method": "GET",
      "path": "/er/accounts/:id",
      "auth_guard": "[Class] @ApiBearerAuth, @Auth(AuthType.JWT), @Roles('admin', 'superadmin')",
      "dto_in": "@Param: string",
      "dto_out": "import(\"C:/Users/Administrator/Desktop/bthwani_git/backend-nest/src/modules/er/entities/chart-of-accounts.entity\").ChartOfAccounts",
      "statuses": "200, 404, 401",
      "file": "src\\modules\\er\\er.controller.ts",
      "line": 278
    },
    {
      "module": "er",
      "controller": "ERController",
      "method": "POST",
      "path": "/er/journal-entries",
      "auth_guard": "[Class] @ApiBearerAuth, @Auth(AuthType.JWT), @Roles('admin', 'superadmin')",
      "dto_in": "@Body: CreateJournalEntryDto",
      "dto_out": "import(\"C:/Users/Administrator/Desktop/bthwani_git/backend-nest/src/modules/er/entities/journal-entry.entity\").JournalEntry",
      "statuses": "201, 400, 401",
      "file": "src\\modules\\er\\er.controller.ts",
      "line": 291
    },
    {
      "module": "er",
      "controller": "ERController",
      "method": "GET",
      "path": "/er/journal-entries",
      "auth_guard": "[Class] @ApiBearerAuth, @Auth(AuthType.JWT), @Roles('admin', 'superadmin')",
      "dto_in": "@Query: string, @Query: string, @Query: string, @Query: string",
      "dto_out": "any[]",
      "statuses": "200, 401",
      "file": "src\\modules\\er\\er.controller.ts",
      "line": 306
    },
    {
      "module": "er",
      "controller": "ERController",
      "method": "PATCH",
      "path": "/er/journal-entries/:id/post",
      "auth_guard": "[Class] @ApiBearerAuth, @Auth(AuthType.JWT), @Roles('admin', 'superadmin')",
      "dto_in": "@Param: string",
      "dto_out": "import(\"C:/Users/Administrator/Desktop/bthwani_git/backend-nest/src/modules/er/entities/journal-entry.entity\").JournalEntry",
      "statuses": "200, 404, 400, 401",
      "file": "src\\modules\\er\\er.controller.ts",
      "line": 327
    },
    {
      "module": "er",
      "controller": "ERController",
      "method": "GET",
      "path": "/er/reports/trial-balance",
      "auth_guard": "[Class] @ApiBearerAuth, @Auth(AuthType.JWT), @Roles('admin', 'superadmin')",
      "dto_in": "@Query: string",
      "dto_out": "any[]",
      "statuses": "200, 401",
      "file": "src\\modules\\er\\er.controller.ts",
      "line": 344
    },
    {
      "module": "er",
      "controller": "ERController",
      "method": "DELETE",
      "path": "/er/assets/:id",
      "auth_guard": "[Class] @ApiBearerAuth, @Auth(AuthType.JWT), @Roles('admin', 'superadmin')",
      "dto_in": "@Param: string",
      "dto_out": "{ success: boolean; message: string; }",
      "statuses": "200",
      "file": "src\\modules\\er\\er.controller.ts",
      "line": 359
    },
    {
      "module": "er",
      "controller": "ERController",
      "method": "DELETE",
      "path": "/er/accounts/chart/:id",
      "auth_guard": "[Class] @ApiBearerAuth, @Auth(AuthType.JWT), @Roles('admin', 'superadmin')",
      "dto_in": "@Param: string",
      "dto_out": "{ success: boolean; message: string; }",
      "statuses": "200",
      "file": "src\\modules\\er\\er.controller.ts",
      "line": 371
    },
    {
      "module": "er",
      "controller": "ERController",
      "method": "DELETE",
      "path": "/er/documents/:id",
      "auth_guard": "[Class] @ApiBearerAuth, @Auth(AuthType.JWT), @Roles('admin', 'superadmin')",
      "dto_in": "@Param: string",
      "dto_out": "{ success: boolean; message: string; }",
      "statuses": "200",
      "file": "src\\modules\\er\\er.controller.ts",
      "line": 383
    },
    {
      "module": "er",
      "controller": "ERController",
      "method": "GET",
      "path": "/er/documents/:id/download",
      "auth_guard": "[Class] @ApiBearerAuth, @Auth(AuthType.JWT), @Roles('admin', 'superadmin')",
      "dto_in": "@Param: string",
      "dto_out": "{ success: boolean; message: string; }",
      "statuses": "200",
      "file": "src\\modules\\er\\er.controller.ts",
      "line": 395
    },
    {
      "module": "er",
      "controller": "ERController",
      "method": "DELETE",
      "path": "/er/documents/bulk",
      "auth_guard": "[Class] @ApiBearerAuth, @Auth(AuthType.JWT), @Roles('admin', 'superadmin')",
      "dto_in": "@Body: { ids: string[] }",
      "dto_out": "{ success: boolean; message: string; }",
      "statuses": "200",
      "file": "src\\modules\\er\\er.controller.ts",
      "line": 407
    },
    {
      "module": "er",
      "controller": "ERController",
      "method": "GET",
      "path": "/er/documents/export",
      "auth_guard": "[Class] @ApiBearerAuth, @Auth(AuthType.JWT), @Roles('admin', 'superadmin')",
      "dto_in": "@Query: any",
      "dto_out": "{ success: boolean; message: string; }",
      "statuses": "200",
      "file": "src\\modules\\er\\er.controller.ts",
      "line": 418
    },
    {
      "module": "er",
      "controller": "ERController",
      "method": "DELETE",
      "path": "/er/payroll/:id",
      "auth_guard": "[Class] @ApiBearerAuth, @Auth(AuthType.JWT), @Roles('admin', 'superadmin')",
      "dto_in": "@Param: string",
      "dto_out": "{ success: boolean; message: string; }",
      "statuses": "200",
      "file": "src\\modules\\er\\er.controller.ts",
      "line": 429
    },
    {
      "module": "finance",
      "controller": "FinanceController",
      "method": "POST",
      "path": "/finance/commissions",
      "auth_guard": "[Class] @ApiBearerAuth, @Auth(AuthType.JWT), @Roles('admin', 'superadmin')",
      "dto_in": "@Body: CreateCommissionDto",
      "dto_out": "import(\"C:/Users/Administrator/Desktop/bthwani_git/backend-nest/src/modules/finance/entities/commission.entity\").Commission",
      "statuses": "201, 400, 401",
      "file": "src\\modules\\finance\\finance.controller.ts",
      "line": 53
    },
    {
      "module": "finance",
      "controller": "FinanceController",
      "method": "GET",
      "path": "/finance/commissions/my",
      "auth_guard": "[Class] @ApiBearerAuth, @Auth(AuthType.FIREBASE)",
      "dto_in": "@Query: string",
      "dto_out": "any[]",
      "statuses": "200, 401",
      "file": "src\\modules\\finance\\finance.controller.ts",
      "line": 64
    },
    {
      "module": "finance",
      "controller": "FinanceController",
      "method": "GET",
      "path": "/finance/commissions/stats/my",
      "auth_guard": "[Class] @ApiBearerAuth, @Auth(AuthType.FIREBASE)",
      "dto_in": "",
      "dto_out": "{ pending: { _id: string; total: number; count: number; } | { total: number; count: number; }; approved: { _id: string; total: number; count: number; } | { total: number; count: number; }; paid: { _id: string; total: number; count: number; } | { total: number; count: number; }; }",
      "statuses": "200, 401",
      "file": "src\\modules\\finance\\finance.controller.ts",
      "line": 76
    },
    {
      "module": "finance",
      "controller": "FinanceController",
      "method": "PATCH",
      "path": "/finance/commissions/:id/approve",
      "auth_guard": "[Class] @ApiBearerAuth, @Auth(AuthType.JWT), @Roles('admin', 'superadmin')",
      "dto_in": "@Param: string",
      "dto_out": "import(\"C:/Users/Administrator/Desktop/bthwani_git/backend-nest/src/modules/finance/entities/commission.entity\").Commission",
      "statuses": "200, 404, 400, 401",
      "file": "src\\modules\\finance\\finance.controller.ts",
      "line": 85
    },
    {
      "module": "finance",
      "controller": "FinanceController",
      "method": "PATCH",
      "path": "/finance/commissions/:id/cancel",
      "auth_guard": "[Class] @ApiBearerAuth, @Auth(AuthType.JWT), @Roles('admin', 'superadmin')",
      "dto_in": "@Param: string",
      "dto_out": "import(\"C:/Users/Administrator/Desktop/bthwani_git/backend-nest/src/modules/finance/entities/commission.entity\").Commission",
      "statuses": "200, 404, 400, 401",
      "file": "src\\modules\\finance\\finance.controller.ts",
      "line": 98
    },
    {
      "module": "finance",
      "controller": "FinanceController",
      "method": "POST",
      "path": "/finance/payouts/batches",
      "auth_guard": "[Class] @ApiBearerAuth, @Auth(AuthType.JWT), @Roles('admin', 'superadmin')",
      "dto_in": "@Body: { commissionIds: string[]; batch: CreatePayoutBatchDto }",
      "dto_out": "import(\"C:/Users/Administrator/Desktop/bthwani_git/backend-nest/src/modules/finance/entities/payout-batch.entity\").PayoutBatch",
      "statuses": "201, 400, 401",
      "file": "src\\modules\\finance\\finance.controller.ts",
      "line": 113
    },
    {
      "module": "finance",
      "controller": "FinanceController",
      "method": "GET",
      "path": "/finance/payouts/batches",
      "auth_guard": "[Class] @ApiBearerAuth, @Auth(AuthType.JWT), @Roles('admin', 'superadmin')",
      "dto_in": "@Query: string, @Query: number, @Query: string",
      "dto_out": "",
      "statuses": "200, 401",
      "file": "src\\modules\\finance\\finance.controller.ts",
      "line": 132
    },
    {
      "module": "finance",
      "controller": "FinanceController",
      "method": "GET",
      "path": "/finance/payouts/batches/:id",
      "auth_guard": "[Class] @ApiBearerAuth, @Auth(AuthType.JWT), @Roles('admin', 'superadmin')",
      "dto_in": "@Param: string",
      "dto_out": "import(\"C:/Users/Administrator/Desktop/bthwani_git/backend-nest/src/modules/finance/entities/payout-batch.entity\").PayoutBatch",
      "statuses": "200, 404, 401",
      "file": "src\\modules\\finance\\finance.controller.ts",
      "line": 146
    },
    {
      "module": "finance",
      "controller": "FinanceController",
      "method": "GET",
      "path": "/finance/payouts/batches/:id/items",
      "auth_guard": "[Class] @ApiBearerAuth, @Auth(AuthType.JWT), @Roles('admin', 'superadmin')",
      "dto_in": "@Param: string",
      "dto_out": "any[]",
      "statuses": "200, 404, 401",
      "file": "src\\modules\\finance\\finance.controller.ts",
      "line": 158
    },
    {
      "module": "finance",
      "controller": "FinanceController",
      "method": "PATCH",
      "path": "/finance/payouts/batches/:id/approve",
      "auth_guard": "[Class] @ApiBearerAuth, @Auth(AuthType.JWT), @Roles('admin', 'superadmin')",
      "dto_in": "@Param: string, @Body: ApprovePayoutBatchDto",
      "dto_out": "import(\"C:/Users/Administrator/Desktop/bthwani_git/backend-nest/src/modules/finance/entities/payout-batch.entity\").PayoutBatch",
      "statuses": "200, 404, 400, 401",
      "file": "src\\modules\\finance\\finance.controller.ts",
      "line": 170
    },
    {
      "module": "finance",
      "controller": "FinanceController",
      "method": "PATCH",
      "path": "/finance/payouts/batches/:id/complete",
      "auth_guard": "[Class] @ApiBearerAuth, @Auth(AuthType.JWT), @Roles('admin', 'superadmin')",
      "dto_in": "@Param: string, @Body: { transactionIds: Record<string, string> }",
      "dto_out": "import(\"C:/Users/Administrator/Desktop/bthwani_git/backend-nest/src/modules/finance/entities/payout-batch.entity\").PayoutBatch",
      "statuses": "200, 404, 400, 401",
      "file": "src\\modules\\finance\\finance.controller.ts",
      "line": 187
    },
    {
      "module": "finance",
      "controller": "FinanceController",
      "method": "POST",
      "path": "/finance/settlements",
      "auth_guard": "[Class] @ApiBearerAuth, @Auth(AuthType.JWT), @Roles('admin', 'superadmin')",
      "dto_in": "@Body: CreateSettlementDto",
      "dto_out": "import(\"C:/Users/Administrator/Desktop/bthwani_git/backend-nest/src/modules/finance/entities/settlement.entity\").Settlement",
      "statuses": "201, 400, 401",
      "file": "src\\modules\\finance\\finance.controller.ts",
      "line": 205
    },
    {
      "module": "finance",
      "controller": "FinanceController",
      "method": "GET",
      "path": "/finance/settlements/entity/:entityId",
      "auth_guard": "[Class] @ApiBearerAuth, @Auth(AuthType.JWT), @Roles('admin', 'superadmin', 'vendor', 'driver')",
      "dto_in": "@Param: string, @Query: string, @Query: string",
      "dto_out": "any[]",
      "statuses": "200, 404, 401",
      "file": "src\\modules\\finance\\finance.controller.ts",
      "line": 216
    },
    {
      "module": "finance",
      "controller": "FinanceController",
      "method": "GET",
      "path": "/finance/settlements/:id",
      "auth_guard": "[Class] @ApiBearerAuth, @Auth(AuthType.JWT), @Roles('admin', 'superadmin', 'vendor', 'driver')",
      "dto_in": "@Param: string",
      "dto_out": "import(\"C:/Users/Administrator/Desktop/bthwani_git/backend-nest/src/modules/finance/entities/settlement.entity\").Settlement",
      "statuses": "200, 404, 401",
      "file": "src\\modules\\finance\\finance.controller.ts",
      "line": 232
    },
    {
      "module": "finance",
      "controller": "FinanceController",
      "method": "PATCH",
      "path": "/finance/settlements/:id/approve",
      "auth_guard": "[Class] @ApiBearerAuth, @Auth(AuthType.JWT), @Roles('admin', 'superadmin')",
      "dto_in": "@Param: string, @Body: ApproveSettlementDto",
      "dto_out": "import(\"C:/Users/Administrator/Desktop/bthwani_git/backend-nest/src/modules/finance/entities/settlement.entity\").Settlement",
      "statuses": "200, 404, 400, 401",
      "file": "src\\modules\\finance\\finance.controller.ts",
      "line": 244
    },
    {
      "module": "finance",
      "controller": "FinanceController",
      "method": "POST",
      "path": "/finance/coupons",
      "auth_guard": "[Class] @ApiBearerAuth, @Auth(AuthType.JWT), @Roles('admin', 'superadmin')",
      "dto_in": "@Body: CreateFinancialCouponDto",
      "dto_out": "import(\"C:/Users/Administrator/Desktop/bthwani_git/backend-nest/src/modules/finance/entities/financial-coupon.entity\").FinancialCoupon",
      "statuses": "201, 400, 401",
      "file": "src\\modules\\finance\\finance.controller.ts",
      "line": 263
    },
    {
      "module": "finance",
      "controller": "FinanceController",
      "method": "POST",
      "path": "/finance/coupons/validate",
      "auth_guard": "[Class] @ApiBearerAuth, @Auth(AuthType.FIREBASE)",
      "dto_in": "@Body: ValidateCouponDto",
      "dto_out": "{ valid: boolean; message: string; discountAmount?: undefined; couponId?: undefined; code?: undefined; description?: undefined; } | { valid: boolean; discountAmount: number; couponId: unknown; code: string; description: string; message?: undefined; }",
      "statuses": "201, 400, 401",
      "file": "src\\modules\\finance\\finance.controller.ts",
      "line": 277
    },
    {
      "module": "finance",
      "controller": "FinanceController",
      "method": "GET",
      "path": "/finance/coupons",
      "auth_guard": "[Class] @ApiBearerAuth, @Auth(AuthType.JWT), @Roles('admin', 'superadmin')",
      "dto_in": "@Query: boolean",
      "dto_out": "any[]",
      "statuses": "200, 401",
      "file": "src\\modules\\finance\\finance.controller.ts",
      "line": 290
    },
    {
      "module": "finance",
      "controller": "FinanceController",
      "method": "PATCH",
      "path": "/finance/coupons/:id",
      "auth_guard": "[Class] @ApiBearerAuth, @Auth(AuthType.JWT), @Roles('admin', 'superadmin')",
      "dto_in": "@Param: string, @Body: UpdateFinancialCouponDto",
      "dto_out": "import(\"C:/Users/Administrator/Desktop/bthwani_git/backend-nest/src/modules/finance/entities/financial-coupon.entity\").FinancialCoupon",
      "statuses": "200, 404, 400, 401",
      "file": "src\\modules\\finance\\finance.controller.ts",
      "line": 300
    },
    {
      "module": "finance",
      "controller": "FinanceController",
      "method": "POST",
      "path": "/finance/reconciliations",
      "auth_guard": "[Class] @ApiBearerAuth, @Auth(AuthType.JWT), @Roles('admin', 'superadmin')",
      "dto_in": "@Body: { startDate: string; endDate: string; periodType: string }",
      "dto_out": "import(\"C:/Users/Administrator/Desktop/bthwani_git/backend-nest/src/modules/finance/entities/reconciliation.entity\").Reconciliation",
      "statuses": "201, 400, 401",
      "file": "src\\modules\\finance\\finance.controller.ts",
      "line": 318
    },
    {
      "module": "finance",
      "controller": "FinanceController",
      "method": "GET",
      "path": "/finance/reconciliations",
      "auth_guard": "[Class] @ApiBearerAuth, @Auth(AuthType.JWT), @Roles('admin', 'superadmin')",
      "dto_in": "@Query: string",
      "dto_out": "any[]",
      "statuses": "200, 401",
      "file": "src\\modules\\finance\\finance.controller.ts",
      "line": 338
    },
    {
      "module": "finance",
      "controller": "FinanceController",
      "method": "GET",
      "path": "/finance/reconciliations/:id",
      "auth_guard": "[Class] @ApiBearerAuth, @Auth(AuthType.JWT), @Roles('admin', 'superadmin')",
      "dto_in": "@Param: string",
      "dto_out": "import(\"C:/Users/Administrator/Desktop/bthwani_git/backend-nest/src/modules/finance/entities/reconciliation.entity\").Reconciliation",
      "statuses": "200, 404, 401",
      "file": "src\\modules\\finance\\finance.controller.ts",
      "line": 348
    },
    {
      "module": "finance",
      "controller": "FinanceController",
      "method": "PATCH",
      "path": "/finance/reconciliations/:id/actual-totals",
      "auth_guard": "[Class] @ApiBearerAuth, @Auth(AuthType.JWT), @Roles('admin', 'superadmin')",
      "dto_in": "@Param: string, @Body: {\r\n      totalDeposits: number;\r\n      totalWithdrawals: number;\r\n      totalFees: number;\r\n    }",
      "dto_out": "import(\"C:/Users/Administrator/Desktop/bthwani_git/backend-nest/src/modules/finance/entities/reconciliation.entity\").Reconciliation",
      "statuses": "200, 404, 400, 401",
      "file": "src\\modules\\finance\\finance.controller.ts",
      "line": 360
    },
    {
      "module": "finance",
      "controller": "FinanceController",
      "method": "POST",
      "path": "/finance/reconciliations/:id/issues",
      "auth_guard": "[Class] @ApiBearerAuth, @Auth(AuthType.JWT), @Roles('admin', 'superadmin')",
      "dto_in": "@Param: string, @Body: {\r\n      type: 'missing_transaction' | 'amount_mismatch' | 'duplicate' | 'other';\r\n      description: string;\r\n      expectedAmount?: number;\r\n      actualAmount?: number;\r\n      transactionRef?: string;\r\n    }",
      "dto_out": "import(\"C:/Users/Administrator/Desktop/bthwani_git/backend-nest/src/modules/finance/entities/reconciliation.entity\").Reconciliation",
      "statuses": "201, 400, 401",
      "file": "src\\modules\\finance\\finance.controller.ts",
      "line": 381
    },
    {
      "module": "finance",
      "controller": "FinanceController",
      "method": "PATCH",
      "path": "/finance/reconciliations/:id/issues/:issueIndex/resolve",
      "auth_guard": "[Class] @ApiBearerAuth, @Auth(AuthType.JWT), @Roles('admin', 'superadmin')",
      "dto_in": "@Param: string, @Param: number, @Body: { resolution: string }",
      "dto_out": "import(\"C:/Users/Administrator/Desktop/bthwani_git/backend-nest/src/modules/finance/entities/reconciliation.entity\").Reconciliation",
      "statuses": "200, 404, 400, 401",
      "file": "src\\modules\\finance\\finance.controller.ts",
      "line": 403
    },
    {
      "module": "finance",
      "controller": "FinanceController",
      "method": "POST",
      "path": "/finance/reports/daily",
      "auth_guard": "[Class] @ApiBearerAuth, @Auth(AuthType.JWT), @Roles('admin', 'superadmin')",
      "dto_in": "@Body: { date: string }",
      "dto_out": "import(\"C:/Users/Administrator/Desktop/bthwani_git/backend-nest/src/modules/finance/entities/daily-report.entity\").DailyReport",
      "statuses": "201, 400, 401",
      "file": "src\\modules\\finance\\finance.controller.ts",
      "line": 429
    },
    {
      "module": "finance",
      "controller": "FinanceController",
      "method": "GET",
      "path": "/finance/reports/daily/:date",
      "auth_guard": "[Class] @ApiBearerAuth, @Auth(AuthType.JWT), @Roles('admin', 'superadmin')",
      "dto_in": "@Param: string",
      "dto_out": "import(\"C:/Users/Administrator/Desktop/bthwani_git/backend-nest/src/modules/finance/entities/daily-report.entity\").DailyReport | null",
      "statuses": "200, 404, 401",
      "file": "src\\modules\\finance\\finance.controller.ts",
      "line": 441
    },
    {
      "module": "finance",
      "controller": "FinanceController",
      "method": "GET",
      "path": "/finance/reports",
      "auth_guard": "[Class] @ApiBearerAuth, @Auth(AuthType.JWT), @Roles('admin', 'superadmin')",
      "dto_in": "@Query: string, @Query: string",
      "dto_out": "any[]",
      "statuses": "200, 401",
      "file": "src\\modules\\finance\\finance.controller.ts",
      "line": 453
    },
    {
      "module": "finance",
      "controller": "FinanceController",
      "method": "PATCH",
      "path": "/finance/reports/:id/finalize",
      "auth_guard": "[Class] @ApiBearerAuth, @Auth(AuthType.JWT), @Roles('admin', 'superadmin')",
      "dto_in": "@Param: string",
      "dto_out": "import(\"C:/Users/Administrator/Desktop/bthwani_git/backend-nest/src/modules/finance/entities/daily-report.entity\").DailyReport",
      "statuses": "200, 404, 400, 401",
      "file": "src\\modules\\finance\\finance.controller.ts",
      "line": 469
    },
    {
      "module": "finance",
      "controller": "FinanceController",
      "method": "GET",
      "path": "/finance/commission-plans",
      "auth_guard": "[Class] @ApiBearerAuth, @Auth(AuthType.JWT), @Roles('admin', 'superadmin')",
      "dto_in": "",
      "dto_out": "{ success: boolean; data: never[]; message: string; }",
      "statuses": "200, 401",
      "file": "src\\modules\\finance\\finance.controller.ts",
      "line": 484
    },
    {
      "module": "finance",
      "controller": "FinanceController",
      "method": "POST",
      "path": "/finance/commission-plans",
      "auth_guard": "[Class] @ApiBearerAuth, @Auth(AuthType.JWT), @Roles('admin', 'superadmin')",
      "dto_in": "@Body: {\r\n      name: string;\r\n      type: string;\r\n      rate: number;\r\n      minOrders?: number;\r\n      maxOrders?: number;\r\n    }",
      "dto_out": "{ success: boolean; data: { adminId: string; name: string; type: string; rate: number; minOrders?: number | undefined; maxOrders?: number | undefined; }; message: string; }",
      "statuses": "201, 400, 401",
      "file": "src\\modules\\finance\\finance.controller.ts",
      "line": 498
    },
    {
      "module": "finance",
      "controller": "FinanceController",
      "method": "PATCH",
      "path": "/finance/commission-plans/:id",
      "auth_guard": "[Class] @ApiBearerAuth, @Auth(AuthType.JWT), @Roles('admin', 'superadmin')",
      "dto_in": "@Param: string, @Body: any",
      "dto_out": "{ success: boolean; data: any; message: string; }",
      "statuses": "200, 404, 400, 401",
      "file": "src\\modules\\finance\\finance.controller.ts",
      "line": 524
    },
    {
      "module": "health",
      "controller": "HealthController",
      "method": "GET",
      "path": "/health",
      "auth_guard": "@Public",
      "dto_in": "",
      "dto_out": "import(\"C:/Users/Administrator/Desktop/bthwani_git/backend-nest/node_modules/@nestjs/terminus/dist/health-check/health-check-result.interface\").HealthCheckResult",
      "statuses": "200, 503",
      "file": "src\\modules\\health\\health.controller.ts",
      "line": 31
    },
    {
      "module": "health",
      "controller": "HealthController",
      "method": "GET",
      "path": "/health/liveness",
      "auth_guard": "@Public",
      "dto_in": "",
      "dto_out": "import(\"C:/Users/Administrator/Desktop/bthwani_git/backend-nest/node_modules/@nestjs/terminus/dist/health-check/health-check-result.interface\").HealthCheckResult",
      "statuses": "200",
      "file": "src\\modules\\health\\health.controller.ts",
      "line": 66
    },
    {
      "module": "health",
      "controller": "HealthController",
      "method": "GET",
      "path": "/health/readiness",
      "auth_guard": "@Public",
      "dto_in": "",
      "dto_out": "import(\"C:/Users/Administrator/Desktop/bthwani_git/backend-nest/node_modules/@nestjs/terminus/dist/health-check/health-check-result.interface\").HealthCheckResult",
      "statuses": "200, 503",
      "file": "src\\modules\\health\\health.controller.ts",
      "line": 79
    },
    {
      "module": "health",
      "controller": "HealthController",
      "method": "GET",
      "path": "/health/advanced",
      "auth_guard": "@Public",
      "dto_in": "",
      "dto_out": "import(\"C:/Users/Administrator/Desktop/bthwani_git/backend-nest/node_modules/@nestjs/terminus/dist/health-check/health-check-result.interface\").HealthCheckResult",
      "statuses": "200, 503",
      "file": "src\\modules\\health\\health.controller.ts",
      "line": 99
    },
    {
      "module": "health",
      "controller": "HealthController",
      "method": "GET",
      "path": "/health/startup",
      "auth_guard": "@Public",
      "dto_in": "",
      "dto_out": "",
      "statuses": "200, 503",
      "file": "src\\modules\\health\\health.controller.ts",
      "line": 132
    },
    {
      "module": "health",
      "controller": "HealthController",
      "method": "GET",
      "path": "/health/detailed",
      "auth_guard": "@Public",
      "dto_in": "",
      "dto_out": "",
      "statuses": "200",
      "file": "src\\modules\\health\\health.controller.ts",
      "line": 163
    },
    {
      "module": "health",
      "controller": "HealthController",
      "method": "GET",
      "path": "/health/metrics",
      "auth_guard": "@Public",
      "dto_in": "",
      "dto_out": "",
      "statuses": "200",
      "file": "src\\modules\\health\\health.controller.ts",
      "line": 227
    },
    {
      "module": "health",
      "controller": "HealthController",
      "method": "GET",
      "path": "/health/info",
      "auth_guard": "@Public",
      "dto_in": "",
      "dto_out": "",
      "statuses": "200",
      "file": "src\\modules\\health\\health.controller.ts",
      "line": 254
    },
    {
      "module": "legal",
      "controller": "LegalController",
      "method": "GET",
      "path": "/legal/privacy-policy",
      "auth_guard": "@Public",
      "dto_in": "@Query: string",
      "dto_out": "{ id: unknown; version: string; content: string; effectiveDate: Date; updatedAt: Date; }",
      "statuses": "200, 401, 404",
      "file": "src\\modules\\legal\\legal.controller.ts",
      "line": 43
    },
    {
      "module": "legal",
      "controller": "LegalController",
      "method": "GET",
      "path": "/legal/terms-of-service",
      "auth_guard": "@Public",
      "dto_in": "@Query: string",
      "dto_out": "{ id: unknown; version: string; content: string; effectiveDate: Date; updatedAt: Date; }",
      "statuses": "200, 401, 404",
      "file": "src\\modules\\legal\\legal.controller.ts",
      "line": 63
    },
    {
      "module": "legal",
      "controller": "LegalController",
      "method": "POST",
      "path": "/legal/consent",
      "auth_guard": "UnifiedAuthGuard",
      "dto_in": "@Body: RecordConsentDto",
      "dto_out": "import(\"mongoose\").Document<unknown, {}, import(\"C:/Users/Administrator/Desktop/bthwani_git/backend-nest/src/modules/legal/entities/user-consent.entity\").UserConsent, {}, {}> & import(\"C:/Users/Administrator/Desktop/bthwani_git/backend-nest/src/modules/legal/entities/user-consent.entity\").UserConsent & Required<{ _id: unknown; }> & { __v: number; }",
      "statuses": "201, 400, 401",
      "file": "src\\modules\\legal\\legal.controller.ts",
      "line": 82
    },
    {
      "module": "legal",
      "controller": "LegalController",
      "method": "GET",
      "path": "/legal/consent/my",
      "auth_guard": "UnifiedAuthGuard",
      "dto_in": "",
      "dto_out": "(import(\"mongoose\").Document<unknown, {}, import(\"C:/Users/Administrator/Desktop/bthwani_git/backend-nest/src/modules/legal/entities/user-consent.entity\").UserConsent, {}, {}> & import(\"C:/Users/Administrator/Desktop/bthwani_git/backend-nest/src/modules/legal/entities/user-consent.entity\").UserConsent & Required<{ _id: unknown; }> & { __v: number; })[]",
      "statuses": "200, 401",
      "file": "src\\modules\\legal\\legal.controller.ts",
      "line": 104
    },
    {
      "module": "legal",
      "controller": "LegalController",
      "method": "GET",
      "path": "/legal/consent/check/:type",
      "auth_guard": "UnifiedAuthGuard",
      "dto_in": "@Param: 'privacy_policy' | 'terms_of_service'",
      "dto_out": "{ hasConsent: boolean; requiresUpdate: boolean; currentVersion?: undefined; consentedVersion?: undefined; } | { hasConsent: boolean; requiresUpdate: boolean; currentVersion: string; consentedVersion: string | undefined; }",
      "statuses": "200, 401",
      "file": "src\\modules\\legal\\legal.controller.ts",
      "line": 115
    },
    {
      "module": "legal",
      "controller": "LegalController",
      "method": "GET",
      "path": "/legal/admin/privacy-policies",
      "auth_guard": "UnifiedAuthGuard, RolesGuard, @Roles(UserRole.ADMIN, UserRole.SUPERADMIN)",
      "dto_in": "",
      "dto_out": "(import(\"mongoose\").Document<unknown, {}, import(\"C:/Users/Administrator/Desktop/bthwani_git/backend-nest/src/modules/legal/entities/privacy-policy.entity\").PrivacyPolicy, {}, {}> & import(\"C:/Users/Administrator/Desktop/bthwani_git/backend-nest/src/modules/legal/entities/privacy-policy.entity\").PrivacyPolicy & Required<{ _id: unknown; }> & { __v: number; })[]",
      "statuses": "200, 401, 403",
      "file": "src\\modules\\legal\\legal.controller.ts",
      "line": 131
    },
    {
      "module": "legal",
      "controller": "LegalController",
      "method": "POST",
      "path": "/legal/admin/privacy-policy",
      "auth_guard": "UnifiedAuthGuard, RolesGuard, @Roles(UserRole.ADMIN, UserRole.SUPERADMIN)",
      "dto_in": "@Body: CreatePrivacyPolicyDto",
      "dto_out": "import(\"mongoose\").Document<unknown, {}, import(\"C:/Users/Administrator/Desktop/bthwani_git/backend-nest/src/modules/legal/entities/privacy-policy.entity\").PrivacyPolicy, {}, {}> & import(\"C:/Users/Administrator/Desktop/bthwani_git/backend-nest/src/modules/legal/entities/privacy-policy.entity\").PrivacyPolicy & Required<{ _id: unknown; }> & { __v: number; }",
      "statuses": "201, 400, 401, 403",
      "file": "src\\modules\\legal\\legal.controller.ts",
      "line": 145
    },
    {
      "module": "legal",
      "controller": "LegalController",
      "method": "PATCH",
      "path": "/legal/admin/privacy-policy/:id/activate",
      "auth_guard": "UnifiedAuthGuard, RolesGuard, @Roles(UserRole.ADMIN, UserRole.SUPERADMIN)",
      "dto_in": "@Param: string",
      "dto_out": "import(\"mongoose\").Document<unknown, {}, import(\"C:/Users/Administrator/Desktop/bthwani_git/backend-nest/src/modules/legal/entities/privacy-policy.entity\").PrivacyPolicy, {}, {}> & import(\"C:/Users/Administrator/Desktop/bthwani_git/backend-nest/src/modules/legal/entities/privacy-policy.entity\").PrivacyPolicy & Required<{ _id: unknown; }> & { __v: number; }",
      "statuses": "200, 404, 400, 401, 403",
      "file": "src\\modules\\legal\\legal.controller.ts",
      "line": 161
    },
    {
      "module": "legal",
      "controller": "LegalController",
      "method": "GET",
      "path": "/legal/admin/terms-of-service",
      "auth_guard": "UnifiedAuthGuard, RolesGuard, @Roles(UserRole.ADMIN, UserRole.SUPERADMIN)",
      "dto_in": "",
      "dto_out": "(import(\"mongoose\").Document<unknown, {}, import(\"C:/Users/Administrator/Desktop/bthwani_git/backend-nest/src/modules/legal/entities/terms-of-service.entity\").TermsOfService, {}, {}> & import(\"C:/Users/Administrator/Desktop/bthwani_git/backend-nest/src/modules/legal/entities/terms-of-service.entity\").TermsOfService & Required<{ _id: unknown; }> & { __v: number; })[]",
      "statuses": "200, 401, 403",
      "file": "src\\modules\\legal\\legal.controller.ts",
      "line": 179
    },
    {
      "module": "legal",
      "controller": "LegalController",
      "method": "POST",
      "path": "/legal/admin/terms-of-service",
      "auth_guard": "UnifiedAuthGuard, RolesGuard, @Roles(UserRole.ADMIN, UserRole.SUPERADMIN)",
      "dto_in": "@Body: CreateTermsOfServiceDto",
      "dto_out": "import(\"mongoose\").Document<unknown, {}, import(\"C:/Users/Administrator/Desktop/bthwani_git/backend-nest/src/modules/legal/entities/terms-of-service.entity\").TermsOfService, {}, {}> & import(\"C:/Users/Administrator/Desktop/bthwani_git/backend-nest/src/modules/legal/entities/terms-of-service.entity\").TermsOfService & Required<{ _id: unknown; }> & { __v: number; }",
      "statuses": "201, 400, 401, 403",
      "file": "src\\modules\\legal\\legal.controller.ts",
      "line": 193
    },
    {
      "module": "legal",
      "controller": "LegalController",
      "method": "PATCH",
      "path": "/legal/admin/terms-of-service/:id/activate",
      "auth_guard": "UnifiedAuthGuard, RolesGuard, @Roles(UserRole.ADMIN, UserRole.SUPERADMIN)",
      "dto_in": "@Param: string",
      "dto_out": "import(\"mongoose\").Document<unknown, {}, import(\"C:/Users/Administrator/Desktop/bthwani_git/backend-nest/src/modules/legal/entities/terms-of-service.entity\").TermsOfService, {}, {}> & import(\"C:/Users/Administrator/Desktop/bthwani_git/backend-nest/src/modules/legal/entities/terms-of-service.entity\").TermsOfService & Required<{ _id: unknown; }> & { __v: number; }",
      "statuses": "200, 404, 400, 401, 403",
      "file": "src\\modules\\legal\\legal.controller.ts",
      "line": 209
    },
    {
      "module": "legal",
      "controller": "LegalController",
      "method": "GET",
      "path": "/legal/admin/consent/statistics",
      "auth_guard": "UnifiedAuthGuard, RolesGuard, @Roles(UserRole.ADMIN, UserRole.SUPERADMIN)",
      "dto_in": "",
      "dto_out": "{ privacyPolicyConsents: number; termsOfServiceConsents: number; uniqueUsers: number; }",
      "statuses": "200, 401, 403",
      "file": "src\\modules\\legal\\legal.controller.ts",
      "line": 227
    },
    {
      "module": "marketer",
      "controller": "MarketerController",
      "method": "GET",
      "path": "/marketer/profile",
      "auth_guard": "[Class] UnifiedAuthGuard, [Class] RolesGuard, @Auth(AuthType.MARKETER_JWT)",
      "dto_in": "",
      "dto_out": "import(\"mongoose\").Document<unknown, {}, import(\"C:/Users/Administrator/Desktop/bthwani_git/backend-nest/src/modules/marketer/entities/marketer.entity\").Marketer, {}, {}> & import(\"C:/Users/Administrator/Desktop/bthwani_git/backend-nest/src/modules/marketer/entities/marketer.entity\").Marketer & Required<{ _id: unknown; }> & { __v: number; }",
      "statuses": "200, 401",
      "file": "src\\modules\\marketer\\marketer.controller.ts",
      "line": 26
    },
    {
      "module": "marketer",
      "controller": "MarketerController",
      "method": "PATCH",
      "path": "/marketer/profile",
      "auth_guard": "[Class] UnifiedAuthGuard, [Class] RolesGuard, @Auth(AuthType.MARKETER_JWT)",
      "dto_in": "@Body: any",
      "dto_out": "import(\"mongoose\").Document<unknown, {}, import(\"C:/Users/Administrator/Desktop/bthwani_git/backend-nest/src/modules/marketer/entities/marketer.entity\").Marketer, {}, {}> & import(\"C:/Users/Administrator/Desktop/bthwani_git/backend-nest/src/modules/marketer/entities/marketer.entity\").Marketer & Required<{ _id: unknown; }> & { __v: number; }",
      "statuses": "200, 404, 400, 401",
      "file": "src\\modules\\marketer\\marketer.controller.ts",
      "line": 36
    },
    {
      "module": "marketer",
      "controller": "MarketerController",
      "method": "POST",
      "path": "/marketer/referrals/generate-code",
      "auth_guard": "[Class] UnifiedAuthGuard, [Class] RolesGuard, @Auth(AuthType.MARKETER_JWT)",
      "dto_in": "",
      "dto_out": "{ code: string; }",
      "statuses": "201, 400, 401",
      "file": "src\\modules\\marketer\\marketer.controller.ts",
      "line": 57
    },
    {
      "module": "marketer",
      "controller": "MarketerController",
      "method": "GET",
      "path": "/marketer/referrals/my",
      "auth_guard": "[Class] UnifiedAuthGuard, [Class] RolesGuard, @Auth(AuthType.MARKETER_JWT)",
      "dto_in": "",
      "dto_out": "{ data: (import(\"mongoose\").Document<unknown, {}, import(\"C:/Users/Administrator/Desktop/bthwani_git/backend-nest/src/modules/marketer/entities/referral-event.entity\").ReferralEvent, {}, {}> & import(\"C:/Users/Administrator/Desktop/bthwani_git/backend-nest/src/modules/marketer/entities/referral-event.entity\").ReferralEvent & Required<{ _id: unknown; }> & { __v: number; })[]; total: number; }",
      "statuses": "200, 401",
      "file": "src\\modules\\marketer\\marketer.controller.ts",
      "line": 68
    },
    {
      "module": "marketer",
      "controller": "MarketerController",
      "method": "GET",
      "path": "/marketer/referrals/statistics",
      "auth_guard": "[Class] UnifiedAuthGuard, [Class] RolesGuard, @Auth(AuthType.MARKETER_JWT)",
      "dto_in": "",
      "dto_out": "{ total: number; successful: number; pending: number; firstOrderCount: number; }",
      "statuses": "200, 401",
      "file": "src\\modules\\marketer\\marketer.controller.ts",
      "line": 78
    },
    {
      "module": "marketer",
      "controller": "MarketerController",
      "method": "GET",
      "path": "/marketer/stores/my",
      "auth_guard": "[Class] UnifiedAuthGuard, [Class] RolesGuard, @Auth(AuthType.MARKETER_JWT)",
      "dto_in": "",
      "dto_out": "{ data: (import(\"mongoose\").Document<unknown, {}, import(\"C:/Users/Administrator/Desktop/bthwani_git/backend-nest/src/modules/marketer/entities/onboarding.entity\").Onboarding, {}, {}> & import(\"C:/Users/Administrator/Desktop/bthwani_git/backend-nest/src/modules/marketer/entities/onboarding.entity\").Onboarding & Required<{ _id: unknown; }> & { __v: number; })[]; total: number; }",
      "statuses": "200, 401",
      "file": "src\\modules\\marketer\\marketer.controller.ts",
      "line": 90
    },
    {
      "module": "marketer",
      "controller": "MarketerController",
      "method": "GET",
      "path": "/marketer/stores/:id",
      "auth_guard": "[Class] UnifiedAuthGuard, [Class] RolesGuard, @Auth(AuthType.MARKETER_JWT)",
      "dto_in": "@Param: string",
      "dto_out": "{ store: any; }",
      "statuses": "200, 404, 401",
      "file": "src\\modules\\marketer\\marketer.controller.ts",
      "line": 100
    },
    {
      "module": "marketer",
      "controller": "MarketerController",
      "method": "GET",
      "path": "/marketer/stores/:id/performance",
      "auth_guard": "[Class] UnifiedAuthGuard, [Class] RolesGuard, @Auth(AuthType.MARKETER_JWT)",
      "dto_in": "@Param: string, @Query: string, @Query: string",
      "dto_out": "{ orders: number; revenue: number; rating: number; }",
      "statuses": "200, 404, 401",
      "file": "src\\modules\\marketer\\marketer.controller.ts",
      "line": 112
    },
    {
      "module": "marketer",
      "controller": "MarketerController",
      "method": "GET",
      "path": "/marketer/vendors/my",
      "auth_guard": "[Class] UnifiedAuthGuard, [Class] RolesGuard, @Auth(AuthType.MARKETER_JWT)",
      "dto_in": "",
      "dto_out": "{ data: (import(\"mongoose\").Document<unknown, {}, import(\"C:/Users/Administrator/Desktop/bthwani_git/backend-nest/src/modules/marketer/entities/onboarding.entity\").Onboarding, {}, {}> & import(\"C:/Users/Administrator/Desktop/bthwani_git/backend-nest/src/modules/marketer/entities/onboarding.entity\").Onboarding & Required<{ _id: unknown; }> & { __v: number; })[]; total: number; }",
      "statuses": "200, 401",
      "file": "src\\modules\\marketer\\marketer.controller.ts",
      "line": 134
    },
    {
      "module": "marketer",
      "controller": "MarketerController",
      "method": "GET",
      "path": "/marketer/vendors/:id",
      "auth_guard": "[Class] UnifiedAuthGuard, [Class] RolesGuard, @Auth(AuthType.MARKETER_JWT)",
      "dto_in": "@Param: string",
      "dto_out": "{ vendor: any; }",
      "statuses": "200, 404, 401",
      "file": "src\\modules\\marketer\\marketer.controller.ts",
      "line": 144
    },
    {
      "module": "marketer",
      "controller": "MarketerController",
      "method": "GET",
      "path": "/marketer/commissions/my",
      "auth_guard": "[Class] UnifiedAuthGuard, [Class] RolesGuard, @Auth(AuthType.MARKETER_JWT)",
      "dto_in": "@Query: string",
      "dto_out": "{ data: { _id: string; onboardingId: unknown; type: string; storeName: string; amount: number; status: string; createdAt: any; approvedAt: Date | undefined; paidAt: Date | undefined; }[]; total: number; totalAmount: number; }",
      "statuses": "200, 401",
      "file": "src\\modules\\marketer\\marketer.controller.ts",
      "line": 158
    },
    {
      "module": "marketer",
      "controller": "MarketerController",
      "method": "GET",
      "path": "/marketer/commissions/statistics",
      "auth_guard": "[Class] UnifiedAuthGuard, [Class] RolesGuard, @Auth(AuthType.MARKETER_JWT)",
      "dto_in": "",
      "dto_out": "{ total: any; pending: any; paid: any; totalCount: number; pendingCount: number; paidCount: number; }",
      "statuses": "200, 401",
      "file": "src\\modules\\marketer\\marketer.controller.ts",
      "line": 171
    },
    {
      "module": "marketer",
      "controller": "MarketerController",
      "method": "GET",
      "path": "/marketer/commissions/pending",
      "auth_guard": "[Class] UnifiedAuthGuard, [Class] RolesGuard, @Auth(AuthType.MARKETER_JWT)",
      "dto_in": "",
      "dto_out": "{ data: { _id: string; onboardingId: unknown; type: string; storeName: string; amount: number; status: string; createdAt: any; approvedAt: Date | undefined; paidAt: Date | undefined; }[]; total: number; totalAmount: number; }",
      "statuses": "200, 401",
      "file": "src\\modules\\marketer\\marketer.controller.ts",
      "line": 181
    },
    {
      "module": "marketer",
      "controller": "MarketerController",
      "method": "GET",
      "path": "/marketer/overview",
      "auth_guard": "[Class] UnifiedAuthGuard, [Class] RolesGuard, @Auth(AuthType.MARKETER_JWT)",
      "dto_in": "",
      "dto_out": "{ marketer: import(\"mongoose\").Document<unknown, {}, import(\"C:/Users/Administrator/Desktop/bthwani_git/backend-nest/src/modules/marketer/entities/marketer.entity\").Marketer, {}, {}> & import(\"C:/Users/Administrator/Desktop/bthwani_git/backend-nest/src/modules/marketer/entities/marketer.entity\").Marketer & Required<{ _id: unknown; }> & { __v: number; }; stats: { totalOnboardings: number; approvedOnboardings: number; pendingOnboardings: number; rejectedOnboardings: number; approvalRate: number; totalReferrals: number; totalEarnings: number; pendingEarnings: any; paidEarnings: any; }; items: (import(\"mongoose\").FlattenMaps<import(\"C:/Users/Administrator/Desktop/bthwani_git/backend-nest/src/modules/marketer/entities/onboarding.entity\").Onboarding> & Required<{ _id: import(\"mongoose\").FlattenMaps<unknown>; }> & { __v: number; })[]; }",
      "statuses": "200, 401",
      "file": "src\\modules\\marketer\\marketer.controller.ts",
      "line": 193
    },
    {
      "module": "marketer",
      "controller": "MarketerController",
      "method": "GET",
      "path": "/marketer/statistics/today",
      "auth_guard": "[Class] UnifiedAuthGuard, [Class] RolesGuard, @Auth(AuthType.MARKETER_JWT)",
      "dto_in": "",
      "dto_out": "{ onboardings: number; approved: number; pending: number; earnings: number; }",
      "statuses": "200, 401",
      "file": "src\\modules\\marketer\\marketer.controller.ts",
      "line": 203
    },
    {
      "module": "marketer",
      "controller": "MarketerController",
      "method": "GET",
      "path": "/marketer/statistics/month",
      "auth_guard": "[Class] UnifiedAuthGuard, [Class] RolesGuard, @Auth(AuthType.MARKETER_JWT)",
      "dto_in": "",
      "dto_out": "{ onboardings: number; approved: number; pending: number; earnings: number; }",
      "statuses": "200, 401",
      "file": "src\\modules\\marketer\\marketer.controller.ts",
      "line": 213
    },
    {
      "module": "marketer",
      "controller": "MarketerController",
      "method": "GET",
      "path": "/marketer/earnings",
      "auth_guard": "[Class] UnifiedAuthGuard, [Class] RolesGuard, @Auth(AuthType.MARKETER_JWT)",
      "dto_in": "@Query: string, @Query: string",
      "dto_out": "{ totalEarnings: number; totalCommissions: number; bonuses: number; breakdown: any[]; ordersCount: number; averagePerOrder: number; }",
      "statuses": "200, 401",
      "file": "src\\modules\\marketer\\marketer.controller.ts",
      "line": 225
    },
    {
      "module": "marketer",
      "controller": "MarketerController",
      "method": "GET",
      "path": "/marketer/earnings/breakdown",
      "auth_guard": "[Class] UnifiedAuthGuard, [Class] RolesGuard, @Auth(AuthType.MARKETER_JWT)",
      "dto_in": "",
      "dto_out": "{ byType: { type: string; amount: number; }[]; byMonth: { month: string; amount: number; }[]; }",
      "statuses": "200, 401",
      "file": "src\\modules\\marketer\\marketer.controller.ts",
      "line": 239
    },
    {
      "module": "marketer",
      "controller": "MarketerController",
      "method": "POST",
      "path": "/marketer/files/upload",
      "auth_guard": "[Class] UnifiedAuthGuard, [Class] RolesGuard, @Auth(AuthType.MARKETER_JWT)",
      "dto_in": "@Body: { fileUrl: string; type: string; relatedTo?: string }",
      "dto_out": "{ success: boolean; fileId: string; message: string; } | { success: boolean; message: string; fileId?: undefined; }",
      "statuses": "201, 400, 401",
      "file": "src\\modules\\marketer\\marketer.controller.ts",
      "line": 251
    },
    {
      "module": "marketer",
      "controller": "MarketerController",
      "method": "GET",
      "path": "/marketer/files",
      "auth_guard": "[Class] UnifiedAuthGuard, [Class] RolesGuard, @Auth(AuthType.MARKETER_JWT)",
      "dto_in": "",
      "dto_out": "{ data: any[]; }",
      "statuses": "200, 401",
      "file": "src\\modules\\marketer\\marketer.controller.ts",
      "line": 266
    },
    {
      "module": "marketer",
      "controller": "MarketerController",
      "method": "GET",
      "path": "/marketer/notifications",
      "auth_guard": "[Class] UnifiedAuthGuard, [Class] RolesGuard, @Auth(AuthType.MARKETER_JWT)",
      "dto_in": "",
      "dto_out": "{ data: any[]; }",
      "statuses": "200, 401",
      "file": "src\\modules\\marketer\\marketer.controller.ts",
      "line": 278
    },
    {
      "module": "marketer",
      "controller": "MarketerController",
      "method": "PATCH",
      "path": "/marketer/notifications/:id/read",
      "auth_guard": "[Class] UnifiedAuthGuard, [Class] RolesGuard, @Auth(AuthType.MARKETER_JWT)",
      "dto_in": "@Param: string",
      "dto_out": "{ success: boolean; message: string; }",
      "statuses": "200, 404, 400, 401",
      "file": "src\\modules\\marketer\\marketer.controller.ts",
      "line": 288
    },
    {
      "module": "marketer",
      "controller": "MarketerController",
      "method": "GET",
      "path": "/marketer/territory/stats",
      "auth_guard": "[Class] UnifiedAuthGuard, [Class] RolesGuard, @Auth(AuthType.MARKETER_JWT)",
      "dto_in": "",
      "dto_out": "{ territory: string | undefined; stores: number; vendors: number; earnings: number; totalOnboardings: number; }",
      "statuses": "200, 401",
      "file": "src\\modules\\marketer\\marketer.controller.ts",
      "line": 303
    },
    {
      "module": "merchant",
      "controller": "MerchantController",
      "method": "POST",
      "path": "/merchants",
      "auth_guard": "@Auth(AuthType.JWT), @Roles('admin', 'superadmin')",
      "dto_in": "@Body: CreateMerchantDto",
      "dto_out": "import(\"C:/Users/Administrator/Desktop/bthwani_git/backend-nest/src/modules/merchant/entities/merchant.entity\").Merchant",
      "statuses": "201, 400, 401",
      "file": "src\\modules\\merchant\\merchant.controller.ts",
      "line": 46
    },
    {
      "module": "merchant",
      "controller": "MerchantController",
      "method": "GET",
      "path": "/merchants",
      "auth_guard": "@Auth(AuthType.JWT), @Roles('admin', 'superadmin')",
      "dto_in": "@Query: boolean",
      "dto_out": "any[]",
      "statuses": "200, 401",
      "file": "src\\modules\\merchant\\merchant.controller.ts",
      "line": 58
    },
    {
      "module": "merchant",
      "controller": "MerchantController",
      "method": "GET",
      "path": "/merchants/:id",
      "auth_guard": "@Auth(AuthType.JWT), @Roles('admin', 'superadmin', 'vendor')",
      "dto_in": "@Param: string",
      "dto_out": "import(\"C:/Users/Administrator/Desktop/bthwani_git/backend-nest/src/modules/merchant/entities/merchant.entity\").Merchant",
      "statuses": "200, 404, 401",
      "file": "src\\modules\\merchant\\merchant.controller.ts",
      "line": 69
    },
    {
      "module": "merchant",
      "controller": "MerchantController",
      "method": "PATCH",
      "path": "/merchants/:id",
      "auth_guard": "@Auth(AuthType.JWT), @Roles('admin', 'superadmin', 'vendor')",
      "dto_in": "@Param: string, @Body: UpdateMerchantDto",
      "dto_out": "import(\"C:/Users/Administrator/Desktop/bthwani_git/backend-nest/src/modules/merchant/entities/merchant.entity\").Merchant",
      "statuses": "200, 404, 400, 401",
      "file": "src\\modules\\merchant\\merchant.controller.ts",
      "line": 82
    },
    {
      "module": "merchant",
      "controller": "MerchantController",
      "method": "DELETE",
      "path": "/merchants/:id",
      "auth_guard": "@Auth(AuthType.JWT), @Roles('admin', 'superadmin')",
      "dto_in": "@Param: string",
      "dto_out": "{ message: string; }",
      "statuses": "200, 404, 401",
      "file": "src\\modules\\merchant\\merchant.controller.ts",
      "line": 99
    },
    {
      "module": "merchant",
      "controller": "MerchantController",
      "method": "POST",
      "path": "/merchants/catalog/products",
      "auth_guard": "@Auth(AuthType.JWT), @Roles('admin', 'superadmin')",
      "dto_in": "@Body: CreateProductCatalogDto",
      "dto_out": "import(\"C:/Users/Administrator/Desktop/bthwani_git/backend-nest/src/modules/merchant/entities/product-catalog.entity\").ProductCatalog",
      "statuses": "201, 400, 401",
      "file": "src\\modules\\merchant\\merchant.controller.ts",
      "line": 115
    },
    {
      "module": "merchant",
      "controller": "MerchantController",
      "method": "GET",
      "path": "/merchants/catalog/products",
      "auth_guard": "",
      "dto_in": "@Query: string",
      "dto_out": "any[]",
      "statuses": "200, 401",
      "file": "src\\modules\\merchant\\merchant.controller.ts",
      "line": 127
    },
    {
      "module": "merchant",
      "controller": "MerchantController",
      "method": "GET",
      "path": "/merchants/catalog/products/:id",
      "auth_guard": "",
      "dto_in": "@Param: string",
      "dto_out": "import(\"C:/Users/Administrator/Desktop/bthwani_git/backend-nest/src/modules/merchant/entities/product-catalog.entity\").ProductCatalog",
      "statuses": "200, 404, 401",
      "file": "src\\modules\\merchant\\merchant.controller.ts",
      "line": 135
    },
    {
      "module": "merchant",
      "controller": "MerchantController",
      "method": "PATCH",
      "path": "/merchants/catalog/products/:id",
      "auth_guard": "@Auth(AuthType.JWT), @Roles('admin', 'superadmin')",
      "dto_in": "@Param: string, @Body: UpdateProductCatalogDto",
      "dto_out": "import(\"C:/Users/Administrator/Desktop/bthwani_git/backend-nest/src/modules/merchant/entities/product-catalog.entity\").ProductCatalog",
      "statuses": "200, 404, 400, 401",
      "file": "src\\modules\\merchant\\merchant.controller.ts",
      "line": 145
    },
    {
      "module": "merchant",
      "controller": "MerchantController",
      "method": "GET",
      "path": "/merchants/products",
      "auth_guard": "@Auth(AuthType.JWT), @Roles('admin', 'superadmin')",
      "dto_in": "@Query: string, @Query: string, @Query: boolean",
      "dto_out": "any[]",
      "statuses": "200, 401",
      "file": "src\\modules\\merchant\\merchant.controller.ts",
      "line": 164
    },
    {
      "module": "merchant",
      "controller": "MerchantController",
      "method": "POST",
      "path": "/merchants/products",
      "auth_guard": "@Auth(AuthType.VENDOR_JWT)",
      "dto_in": "@Body: CreateMerchantProductDto",
      "dto_out": "import(\"C:/Users/Administrator/Desktop/bthwani_git/backend-nest/src/modules/merchant/entities/merchant-product.entity\").MerchantProduct",
      "statuses": "201, 400, 401",
      "file": "src\\modules\\merchant\\merchant.controller.ts",
      "line": 183
    },
    {
      "module": "merchant",
      "controller": "MerchantController",
      "method": "GET",
      "path": "/merchants/products/:id",
      "auth_guard": "",
      "dto_in": "@Param: string",
      "dto_out": "import(\"C:/Users/Administrator/Desktop/bthwani_git/backend-nest/src/modules/merchant/entities/merchant-product.entity\").MerchantProduct",
      "statuses": "200, 404, 401",
      "file": "src\\modules\\merchant\\merchant.controller.ts",
      "line": 194
    },
    {
      "module": "merchant",
      "controller": "MerchantController",
      "method": "GET",
      "path": "/merchants/:merchantId/products",
      "auth_guard": "",
      "dto_in": "@Param: string, @Query: string, @Query: boolean",
      "dto_out": "any[]",
      "statuses": "200, 404, 401",
      "file": "src\\modules\\merchant\\merchant.controller.ts",
      "line": 204
    },
    {
      "module": "merchant",
      "controller": "MerchantController",
      "method": "GET",
      "path": "/merchants/stores/:storeId/products",
      "auth_guard": "",
      "dto_in": "@Param: string, @Query: string",
      "dto_out": "any[]",
      "statuses": "200, 404, 401",
      "file": "src\\modules\\merchant\\merchant.controller.ts",
      "line": 222
    },
    {
      "module": "merchant",
      "controller": "MerchantController",
      "method": "PATCH",
      "path": "/merchants/products/:id",
      "auth_guard": "@Auth(AuthType.VENDOR_JWT)",
      "dto_in": "@Param: string, @Body: UpdateMerchantProductDto",
      "dto_out": "import(\"C:/Users/Administrator/Desktop/bthwani_git/backend-nest/src/modules/merchant/entities/merchant-product.entity\").MerchantProduct",
      "statuses": "200, 404, 400, 401",
      "file": "src\\modules\\merchant\\merchant.controller.ts",
      "line": 235
    },
    {
      "module": "merchant",
      "controller": "MerchantController",
      "method": "PATCH",
      "path": "/merchants/products/:id/stock",
      "auth_guard": "@Auth(AuthType.VENDOR_JWT)",
      "dto_in": "@Param: string, @Body: { quantity: number }",
      "dto_out": "import(\"C:/Users/Administrator/Desktop/bthwani_git/backend-nest/src/modules/merchant/entities/merchant-product.entity\").MerchantProduct",
      "statuses": "200, 404, 400, 401",
      "file": "src\\modules\\merchant\\merchant.controller.ts",
      "line": 251
    },
    {
      "module": "merchant",
      "controller": "MerchantController",
      "method": "DELETE",
      "path": "/merchants/products/:id",
      "auth_guard": "@Auth(AuthType.VENDOR_JWT)",
      "dto_in": "@Param: string",
      "dto_out": "{ message: string; }",
      "statuses": "200, 404, 401",
      "file": "src\\modules\\merchant\\merchant.controller.ts",
      "line": 267
    },
    {
      "module": "merchant",
      "controller": "MerchantController",
      "method": "POST",
      "path": "/merchants/categories",
      "auth_guard": "@Auth(AuthType.JWT), @Roles('admin', 'superadmin')",
      "dto_in": "@Body: CreateMerchantCategoryDto",
      "dto_out": "import(\"C:/Users/Administrator/Desktop/bthwani_git/backend-nest/src/modules/merchant/entities/merchant-category.entity\").MerchantCategory",
      "statuses": "201, 400, 401",
      "file": "src\\modules\\merchant\\merchant.controller.ts",
      "line": 282
    },
    {
      "module": "merchant",
      "controller": "MerchantController",
      "method": "GET",
      "path": "/merchants/categories",
      "auth_guard": "",
      "dto_in": "@Query: string",
      "dto_out": "any[]",
      "statuses": "200, 401",
      "file": "src\\modules\\merchant\\merchant.controller.ts",
      "line": 294
    },
    {
      "module": "merchant",
      "controller": "MerchantController",
      "method": "PATCH",
      "path": "/merchants/categories/:id",
      "auth_guard": "@Auth(AuthType.JWT), @Roles('admin', 'superadmin')",
      "dto_in": "@Param: string, @Body: UpdateMerchantCategoryDto",
      "dto_out": "import(\"C:/Users/Administrator/Desktop/bthwani_git/backend-nest/src/modules/merchant/entities/merchant-category.entity\").MerchantCategory",
      "statuses": "200, 404, 400, 401",
      "file": "src\\modules\\merchant\\merchant.controller.ts",
      "line": 302
    },
    {
      "module": "merchant",
      "controller": "MerchantController",
      "method": "DELETE",
      "path": "/merchants/categories/:id",
      "auth_guard": "@Auth(AuthType.JWT), @Roles('admin', 'superadmin')",
      "dto_in": "@Param: string",
      "dto_out": "{ message: string; }",
      "statuses": "200, 404, 401",
      "file": "src\\modules\\merchant\\merchant.controller.ts",
      "line": 319
    },
    {
      "module": "merchant",
      "controller": "MerchantController",
      "method": "POST",
      "path": "/merchants/attributes",
      "auth_guard": "@Auth(AuthType.JWT), @Roles('admin', 'superadmin')",
      "dto_in": "@Body: CreateAttributeDto",
      "dto_out": "import(\"C:/Users/Administrator/Desktop/bthwani_git/backend-nest/src/modules/merchant/entities/attribute.entity\").Attribute",
      "statuses": "201, 400, 401",
      "file": "src\\modules\\merchant\\merchant.controller.ts",
      "line": 335
    },
    {
      "module": "merchant",
      "controller": "MerchantController",
      "method": "GET",
      "path": "/merchants/attributes",
      "auth_guard": "",
      "dto_in": "",
      "dto_out": "any[]",
      "statuses": "200, 401",
      "file": "src\\modules\\merchant\\merchant.controller.ts",
      "line": 347
    },
    {
      "module": "merchant",
      "controller": "MerchantController",
      "method": "PATCH",
      "path": "/merchants/attributes/:id",
      "auth_guard": "@Auth(AuthType.JWT), @Roles('admin', 'superadmin')",
      "dto_in": "@Param: string, @Body: UpdateAttributeDto",
      "dto_out": "import(\"C:/Users/Administrator/Desktop/bthwani_git/backend-nest/src/modules/merchant/entities/attribute.entity\").Attribute",
      "statuses": "200, 404, 400, 401",
      "file": "src\\modules\\merchant\\merchant.controller.ts",
      "line": 355
    },
    {
      "module": "merchant",
      "controller": "MerchantController",
      "method": "DELETE",
      "path": "/merchants/attributes/:id",
      "auth_guard": "@Auth(AuthType.JWT), @Roles('admin', 'superadmin')",
      "dto_in": "@Param: string",
      "dto_out": "{ message: string; }",
      "statuses": "200, 404, 401",
      "file": "src\\modules\\merchant\\merchant.controller.ts",
      "line": 372
    },
    {
      "module": "metrics",
      "controller": "MetricsController",
      "method": "GET",
      "path": "/metrics",
      "auth_guard": "@Public",
      "dto_in": "",
      "dto_out": "",
      "statuses": "200",
      "file": "src\\modules\\metrics\\metrics.controller.ts",
      "line": 12
    },
    {
      "module": "metrics",
      "controller": "MetricsController",
      "method": "GET",
      "path": "/metrics/json",
      "auth_guard": "@Public",
      "dto_in": "",
      "dto_out": "",
      "statuses": "200",
      "file": "src\\modules\\metrics\\metrics.controller.ts",
      "line": 21
    },
    {
      "module": "notification",
      "controller": "NotificationController",
      "method": "POST",
      "path": "/notifications",
      "auth_guard": "[Class] UnifiedAuthGuard, [Class] RolesGuard, [Class] @ApiBearerAuth, @Auth(AuthType.JWT), @Roles('admin', 'superadmin')",
      "dto_in": "@Body: CreateNotificationDto",
      "dto_out": "import(\"mongoose\").Document<unknown, {}, import(\"C:/Users/Administrator/Desktop/bthwani_git/backend-nest/src/modules/notification/entities/notification.entity\").Notification, {}, {}> & import(\"C:/Users/Administrator/Desktop/bthwani_git/backend-nest/src/modules/notification/entities/notification.entity\").Notification & Required<{ _id: unknown; }> & { __v: number; }",
      "statuses": "201, 400, 401",
      "file": "src\\modules\\notification\\notification.controller.ts",
      "line": 45
    },
    {
      "module": "notification",
      "controller": "NotificationController",
      "method": "GET",
      "path": "/notifications/my",
      "auth_guard": "[Class] UnifiedAuthGuard, [Class] RolesGuard, [Class] @ApiBearerAuth, @Auth(AuthType.FIREBASE)",
      "dto_in": "@Query: CursorPaginationDto",
      "dto_out": "{ data: import(\"C:/Users/Administrator/Desktop/bthwani_git/backend-nest/src/modules/notification/entities/notification.entity\").Notification[]; pagination: { nextCursor: string | null; hasMore: boolean; limit: number; }; }",
      "statuses": "200, 401",
      "file": "src\\modules\\notification\\notification.controller.ts",
      "line": 56
    },
    {
      "module": "notification",
      "controller": "NotificationController",
      "method": "POST",
      "path": "/notifications/:id/read",
      "auth_guard": "[Class] UnifiedAuthGuard, [Class] RolesGuard, [Class] @ApiBearerAuth, @Auth(AuthType.FIREBASE)",
      "dto_in": "@Param: string",
      "dto_out": "(import(\"mongoose\").Document<unknown, {}, import(\"C:/Users/Administrator/Desktop/bthwani_git/backend-nest/src/modules/notification/entities/notification.entity\").Notification, {}, {}> & import(\"C:/Users/Administrator/Desktop/bthwani_git/backend-nest/src/modules/notification/entities/notification.entity\").Notification & Required<{ _id: unknown; }> & { __v: number; }) | null",
      "statuses": "201, 400, 401",
      "file": "src\\modules\\notification\\notification.controller.ts",
      "line": 68
    },
    {
      "module": "notification",
      "controller": "NotificationController",
      "method": "GET",
      "path": "/notifications/unread/count",
      "auth_guard": "[Class] UnifiedAuthGuard, [Class] RolesGuard, [Class] @ApiBearerAuth, @Auth(AuthType.FIREBASE)",
      "dto_in": "",
      "dto_out": "{ count: number; }",
      "statuses": "200, 401",
      "file": "src\\modules\\notification\\notification.controller.ts",
      "line": 79
    },
    {
      "module": "notification",
      "controller": "NotificationController",
      "method": "POST",
      "path": "/notifications/read-all",
      "auth_guard": "[Class] UnifiedAuthGuard, [Class] RolesGuard, [Class] @ApiBearerAuth, @Auth(AuthType.FIREBASE)",
      "dto_in": "",
      "dto_out": "{ message: string; }",
      "statuses": "201, 400, 401",
      "file": "src\\modules\\notification\\notification.controller.ts",
      "line": 88
    },
    {
      "module": "notification",
      "controller": "NotificationController",
      "method": "DELETE",
      "path": "/notifications/:id",
      "auth_guard": "[Class] UnifiedAuthGuard, [Class] RolesGuard, [Class] @ApiBearerAuth, @Auth(AuthType.FIREBASE)",
      "dto_in": "@Param: string",
      "dto_out": "{ message: string; }",
      "statuses": "200, 404, 401",
      "file": "src\\modules\\notification\\notification.controller.ts",
      "line": 98
    },
    {
      "module": "notification",
      "controller": "NotificationController",
      "method": "POST",
      "path": "/notifications/suppression",
      "auth_guard": "[Class] UnifiedAuthGuard, [Class] RolesGuard, [Class] @ApiBearerAuth, @Auth(AuthType.FIREBASE)",
      "dto_in": "@Body: CreateSuppressionDto",
      "dto_out": "{ success: boolean; message: string; data: import(\"C:/Users/Administrator/Desktop/bthwani_git/backend-nest/src/modules/notification/entities/suppression.entity\").NotificationSuppression; }",
      "statuses": "201, 400, 401",
      "file": "src\\modules\\notification\\notification.controller.ts",
      "line": 111
    },
    {
      "module": "notification",
      "controller": "NotificationController",
      "method": "GET",
      "path": "/notifications/suppression",
      "auth_guard": "[Class] UnifiedAuthGuard, [Class] RolesGuard, [Class] @ApiBearerAuth, @Auth(AuthType.FIREBASE)",
      "dto_in": "",
      "dto_out": "{ success: boolean; data: import(\"C:/Users/Administrator/Desktop/bthwani_git/backend-nest/src/modules/notification/entities/suppression.entity\").NotificationSuppression[]; count: number; }",
      "statuses": "200, 401",
      "file": "src\\modules\\notification\\notification.controller.ts",
      "line": 134
    },
    {
      "module": "notification",
      "controller": "NotificationController",
      "method": "GET",
      "path": "/notifications/suppression/channels",
      "auth_guard": "[Class] UnifiedAuthGuard, [Class] RolesGuard, [Class] @ApiBearerAuth, @Auth(AuthType.FIREBASE)",
      "dto_in": "",
      "dto_out": "{ success: boolean; data: { suppressedChannels: import(\"C:/Users/Administrator/Desktop/bthwani_git/backend-nest/src/modules/notification/entities/suppression.entity\").SuppressionChannel[]; push: boolean; email: boolean; sms: boolean; }; }",
      "statuses": "200, 401",
      "file": "src\\modules\\notification\\notification.controller.ts",
      "line": 150
    },
    {
      "module": "notification",
      "controller": "NotificationController",
      "method": "DELETE",
      "path": "/notifications/suppression/:id",
      "auth_guard": "[Class] UnifiedAuthGuard, [Class] RolesGuard, [Class] @ApiBearerAuth, @Auth(AuthType.FIREBASE)",
      "dto_in": "@Param: string",
      "dto_out": "{ success: boolean; message: string; }",
      "statuses": "200, 404, 401",
      "file": "src\\modules\\notification\\notification.controller.ts",
      "line": 170
    },
    {
      "module": "notification",
      "controller": "NotificationController",
      "method": "DELETE",
      "path": "/notifications/suppression/channel/:channel",
      "auth_guard": "[Class] UnifiedAuthGuard, [Class] RolesGuard, [Class] @ApiBearerAuth, @Auth(AuthType.FIREBASE)",
      "dto_in": "@Param: SuppressionChannel",
      "dto_out": "{ success: boolean; message: string; }",
      "statuses": "200, 404, 401",
      "file": "src\\modules\\notification\\notification.controller.ts",
      "line": 191
    },
    {
      "module": "notification",
      "controller": "NotificationController",
      "method": "GET",
      "path": "/notifications/suppression/stats",
      "auth_guard": "[Class] UnifiedAuthGuard, [Class] RolesGuard, [Class] @ApiBearerAuth, @Auth(AuthType.JWT), @Roles('admin', 'superadmin')",
      "dto_in": "",
      "dto_out": "{ success: boolean; data: import(\"C:/Users/Administrator/Desktop/bthwani_git/backend-nest/src/modules/notification/dto/suppression.dto\").SuppressionStatsDto; }",
      "statuses": "200, 401",
      "file": "src\\modules\\notification\\notification.controller.ts",
      "line": 213
    },
    {
      "module": "notification",
      "controller": "NotificationController",
      "method": "POST",
      "path": "/notifications/send-bulk",
      "auth_guard": "[Class] UnifiedAuthGuard, [Class] RolesGuard, [Class] @ApiBearerAuth, @Auth(AuthType.JWT), @Roles('admin', 'superadmin')",
      "dto_in": "@Body: {\r\n      title: string;\r\n      body: string;\r\n      userType?: 'all' | 'drivers' | 'vendors' | 'customers';\r\n      userIds?: string[];\r\n    }",
      "dto_out": "{ success: boolean; data: { adminId: string; sent: boolean; title: string; body: string; userType?: \"all\" | \"drivers\" | \"vendors\" | \"customers\" | undefined; userIds?: string[] | undefined; }; message: string; }",
      "statuses": "201, 400, 401",
      "file": "src\\modules\\notification\\notification.controller.ts",
      "line": 230
    },
    {
      "module": "onboarding",
      "controller": "OnboardingController",
      "method": "POST",
      "path": "/onboarding",
      "auth_guard": "[Class] UnifiedAuthGuard, [Class] RolesGuard, [Class] @ApiBearerAuth, @Auth(AuthType.MARKETER_JWT)",
      "dto_in": "@Body: {\r\n      storeName: string;\r\n      ownerName: string;\r\n      phone: string;\r\n      email?: string;\r\n      address: any;\r\n      type: 'store' | 'vendor' | 'driver';\r\n    }",
      "dto_out": "{ success: boolean; data: { marketerId: string; status: string; storeName: string; ownerName: string; phone: string; email?: string | undefined; address: any; type: \"store\" | \"vendor\" | \"driver\"; }; message: string; }",
      "statuses": "201, 400, 401",
      "file": "src\\modules\\onboarding\\onboarding.controller.ts",
      "line": 28
    },
    {
      "module": "onboarding",
      "controller": "OnboardingController",
      "method": "GET",
      "path": "/onboarding/my",
      "auth_guard": "[Class] UnifiedAuthGuard, [Class] RolesGuard, [Class] @ApiBearerAuth, @Auth(AuthType.MARKETER_JWT)",
      "dto_in": "@Query: string",
      "dto_out": "{ success: boolean; data: never[]; marketerId: string; status: string | undefined; message: string; }",
      "statuses": "200, 401",
      "file": "src\\modules\\onboarding\\onboarding.controller.ts",
      "line": 53
    },
    {
      "module": "onboarding",
      "controller": "OnboardingController",
      "method": "POST",
      "path": "/onboarding/quick-onboard",
      "auth_guard": "[Class] UnifiedAuthGuard, [Class] RolesGuard, [Class] @ApiBearerAuth, @Auth(AuthType.MARKETER_JWT)",
      "dto_in": "@Body: { phone: string; storeName: string; location: any }",
      "dto_out": "{ success: boolean; data: { marketerId: string; status: string; phone: string; storeName: string; location: any; }; message: string; }",
      "statuses": "201, 400, 401",
      "file": "src\\modules\\onboarding\\onboarding.controller.ts",
      "line": 71
    },
    {
      "module": "onboarding",
      "controller": "OnboardingController",
      "method": "GET",
      "path": "/onboarding/applications",
      "auth_guard": "[Class] UnifiedAuthGuard, [Class] RolesGuard, [Class] @ApiBearerAuth, @Auth(AuthType.JWT), @Roles('admin', 'superadmin')",
      "dto_in": "@Query: string, @Query: string, @Query: number, @Query: number",
      "dto_out": "{ success: boolean; data: never[]; status: string | undefined; type: string | undefined; page: number; limit: number; message: string; }",
      "statuses": "200, 401",
      "file": "src\\modules\\onboarding\\onboarding.controller.ts",
      "line": 90
    },
    {
      "module": "onboarding",
      "controller": "OnboardingController",
      "method": "GET",
      "path": "/onboarding/:id/details",
      "auth_guard": "[Class] UnifiedAuthGuard, [Class] RolesGuard, [Class] @ApiBearerAuth, @Auth(AuthType.JWT), @Roles('admin', 'superadmin')",
      "dto_in": "@Param: string",
      "dto_out": "{ success: boolean; data: { applicationId: string; }; message: string; }",
      "statuses": "200, 404, 401",
      "file": "src\\modules\\onboarding\\onboarding.controller.ts",
      "line": 113
    },
    {
      "module": "onboarding",
      "controller": "OnboardingController",
      "method": "PATCH",
      "path": "/onboarding/:id/approve",
      "auth_guard": "[Class] UnifiedAuthGuard, [Class] RolesGuard, [Class] @ApiBearerAuth, @Auth(AuthType.JWT), @Roles('admin', 'superadmin')",
      "dto_in": "@Param: string",
      "dto_out": "{ success: boolean; data: { applicationId: string; adminId: string; status: string; }; message: string; }",
      "statuses": "200, 404, 400, 401",
      "file": "src\\modules\\onboarding\\onboarding.controller.ts",
      "line": 129
    },
    {
      "module": "onboarding",
      "controller": "OnboardingController",
      "method": "PATCH",
      "path": "/onboarding/:id/reject",
      "auth_guard": "[Class] UnifiedAuthGuard, [Class] RolesGuard, [Class] @ApiBearerAuth, @Auth(AuthType.JWT), @Roles('admin', 'superadmin')",
      "dto_in": "@Param: string, @Body: { reason: string }",
      "dto_out": "{ success: boolean; data: { applicationId: string; adminId: string; status: string; reason: string; }; message: string; }",
      "statuses": "200, 404, 400, 401",
      "file": "src\\modules\\onboarding\\onboarding.controller.ts",
      "line": 149
    },
    {
      "module": "onboarding",
      "controller": "OnboardingController",
      "method": "GET",
      "path": "/onboarding/statistics",
      "auth_guard": "[Class] UnifiedAuthGuard, [Class] RolesGuard, [Class] @ApiBearerAuth, @Auth(AuthType.JWT), @Roles('admin', 'superadmin')",
      "dto_in": "",
      "dto_out": "{ success: boolean; data: { total: number; pending: number; approved: number; rejected: number; }; message: string; }",
      "statuses": "200, 401",
      "file": "src\\modules\\onboarding\\onboarding.controller.ts",
      "line": 170
    },
    {
      "module": "order",
      "controller": "OrderCqrsController",
      "method": "POST",
      "path": "/orders-cqrs",
      "auth_guard": "[Class] UnifiedAuthGuard, [Class] RolesGuard, [Class] @ApiBearerAuth, @Auth(AuthType.FIREBASE)",
      "dto_in": "@Body: CreateOrderDto",
      "dto_out": "{ success: boolean; message: string; data: unknown; }",
      "statuses": "201, 400, 401",
      "file": "src\\modules\\order\\order-cqrs.controller.ts",
      "line": 51
    },
    {
      "module": "order",
      "controller": "OrderCqrsController",
      "method": "PATCH",
      "path": "/orders-cqrs/:id/status",
      "auth_guard": "[Class] UnifiedAuthGuard, [Class] RolesGuard, [Class] @ApiBearerAuth, @Auth(AuthType.JWT), @Roles('admin', 'superadmin')",
      "dto_in": "@Param: string, @Body: UpdateOrderStatusDto",
      "dto_out": "{ success: boolean; message: string; data: unknown; }",
      "statuses": "200, 404, 400, 401",
      "file": "src\\modules\\order\\order-cqrs.controller.ts",
      "line": 86
    },
    {
      "module": "order",
      "controller": "OrderCqrsController",
      "method": "POST",
      "path": "/orders-cqrs/:id/assign-driver",
      "auth_guard": "[Class] UnifiedAuthGuard, [Class] RolesGuard, [Class] @ApiBearerAuth, @Auth(AuthType.JWT), @Roles('admin', 'superadmin')",
      "dto_in": "@Param: string, @Body: { driverId: string }",
      "dto_out": "{ success: boolean; message: string; data: unknown; }",
      "statuses": "201, 400, 401",
      "file": "src\\modules\\order\\order-cqrs.controller.ts",
      "line": 115
    },
    {
      "module": "order",
      "controller": "OrderCqrsController",
      "method": "POST",
      "path": "/orders-cqrs/:id/cancel",
      "auth_guard": "[Class] UnifiedAuthGuard, [Class] RolesGuard, [Class] @ApiBearerAuth, @Auth(AuthType.FIREBASE)",
      "dto_in": "@Param: string, @Body: { reason: string }",
      "dto_out": "{ success: boolean; message: string; data: unknown; }",
      "statuses": "201, 400, 401",
      "file": "src\\modules\\order\\order-cqrs.controller.ts",
      "line": 138
    },
    {
      "module": "order",
      "controller": "OrderCqrsController",
      "method": "GET",
      "path": "/orders-cqrs/:id",
      "auth_guard": "[Class] UnifiedAuthGuard, [Class] RolesGuard, [Class] @ApiBearerAuth, @Auth(AuthType.FIREBASE)",
      "dto_in": "@Param: string",
      "dto_out": "{ success: boolean; data: unknown; }",
      "statuses": "200, 404, 401",
      "file": "src\\modules\\order\\order-cqrs.controller.ts",
      "line": 168
    },
    {
      "module": "order",
      "controller": "OrderCqrsController",
      "method": "GET",
      "path": "/orders-cqrs",
      "auth_guard": "[Class] UnifiedAuthGuard, [Class] RolesGuard, [Class] @ApiBearerAuth, @Auth(AuthType.FIREBASE)",
      "dto_in": "@Query: CursorPaginationDto",
      "dto_out": "{ [key: string]: unknown; success: boolean; }",
      "statuses": "200, 401",
      "file": "src\\modules\\order\\order-cqrs.controller.ts",
      "line": 187
    },
    {
      "module": "order",
      "controller": "OrderController",
      "method": "GET",
      "path": "/delivery/order",
      "auth_guard": "[Class] UnifiedAuthGuard, [Class] RolesGuard, @Auth(AuthType.FIREBASE)",
      "dto_in": "@Query: CursorPaginationDto",
      "dto_out": "import(\"C:/Users/Administrator/Desktop/bthwani_git/backend-nest/src/common/utils/pagination.helper\").PaginationResult<import(\"C:/Users/Administrator/Desktop/bthwani_git/backend-nest/src/modules/order/entities/order.entity\").Order>",
      "statuses": "200, 401",
      "file": "src\\modules\\order\\order.controller.ts",
      "line": 34
    },
    {
      "module": "order",
      "controller": "OrderController",
      "method": "POST",
      "path": "/delivery/order",
      "auth_guard": "[Class] UnifiedAuthGuard, [Class] RolesGuard, @Auth(AuthType.FIREBASE)",
      "dto_in": "@Body: CreateOrderDto",
      "dto_out": "import(\"mongoose\").Document<unknown, {}, import(\"C:/Users/Administrator/Desktop/bthwani_git/backend-nest/src/modules/order/entities/order.entity\").Order, {}, {}> & import(\"C:/Users/Administrator/Desktop/bthwani_git/backend-nest/src/modules/order/entities/order.entity\").Order & Required<{ _id: unknown; }> & { __v: number; }",
      "statuses": "201, 400, 401",
      "file": "src\\modules\\order\\order.controller.ts",
      "line": 50
    },
    {
      "module": "order",
      "controller": "OrderController",
      "method": "GET",
      "path": "/delivery/order/user/:userId",
      "auth_guard": "[Class] UnifiedAuthGuard, [Class] RolesGuard, @Auth(AuthType.FIREBASE)",
      "dto_in": "@Param: string, @Query: CursorPaginationDto",
      "dto_out": "import(\"C:/Users/Administrator/Desktop/bthwani_git/backend-nest/src/common/utils/pagination.helper\").PaginationResult<import(\"C:/Users/Administrator/Desktop/bthwani_git/backend-nest/src/modules/order/entities/order.entity\").Order>",
      "statuses": "200, 404, 401",
      "file": "src\\modules\\order\\order.controller.ts",
      "line": 71
    },
    {
      "module": "order",
      "controller": "OrderController",
      "method": "GET",
      "path": "/delivery/order/my-orders",
      "auth_guard": "[Class] UnifiedAuthGuard, [Class] RolesGuard, @Auth(AuthType.FIREBASE)",
      "dto_in": "@Query: CursorPaginationDto",
      "dto_out": "import(\"C:/Users/Administrator/Desktop/bthwani_git/backend-nest/src/common/utils/pagination.helper\").PaginationResult<import(\"C:/Users/Administrator/Desktop/bthwani_git/backend-nest/src/modules/order/entities/order.entity\").Order>",
      "statuses": "200, 401",
      "file": "src\\modules\\order\\order.controller.ts",
      "line": 93
    },
    {
      "module": "order",
      "controller": "OrderController",
      "method": "GET",
      "path": "/delivery/order/:id",
      "auth_guard": "[Class] UnifiedAuthGuard, [Class] RolesGuard, @Auth(AuthType.FIREBASE)",
      "dto_in": "@Param: string",
      "dto_out": "import(\"C:/Users/Administrator/Desktop/bthwani_git/backend-nest/src/modules/order/entities/order.entity\").Order",
      "statuses": "200, 404, 401",
      "file": "src\\modules\\order\\order.controller.ts",
      "line": 121
    },
    {
      "module": "order",
      "controller": "OrderController",
      "method": "POST",
      "path": "/delivery/order/:id/assign-driver",
      "auth_guard": "[Class] UnifiedAuthGuard, [Class] RolesGuard, @Auth(AuthType.JWT)",
      "dto_in": "@Param: string, @Body: { driverId: string }",
      "dto_out": "import(\"mongoose\").Document<unknown, {}, import(\"C:/Users/Administrator/Desktop/bthwani_git/backend-nest/src/modules/order/entities/order.entity\").Order, {}, {}> & import(\"C:/Users/Administrator/Desktop/bthwani_git/backend-nest/src/modules/order/entities/order.entity\").Order & Required<{ _id: unknown; }> & { __v: number; }",
      "statuses": "201, 400, 401, 200, 404",
      "file": "src\\modules\\order\\order.controller.ts",
      "line": 135
    },
    {
      "module": "order",
      "controller": "OrderController",
      "method": "POST",
      "path": "/delivery/order/:id/notes",
      "auth_guard": "[Class] UnifiedAuthGuard, [Class] RolesGuard, @Auth(AuthType.JWT)",
      "dto_in": "@Param: string, @Body: { note: string }",
      "dto_out": "{ success: boolean; note: { body: string; visibility: \"public\" | \"internal\"; byRole: string; byId: string; createdAt: Date; }; }",
      "statuses": "201, 400, 401, 200, 404",
      "file": "src\\modules\\order\\order.controller.ts",
      "line": 166
    },
    {
      "module": "order",
      "controller": "OrderController",
      "method": "GET",
      "path": "/delivery/order/:id/notes",
      "auth_guard": "[Class] UnifiedAuthGuard, [Class] RolesGuard, @Auth(AuthType.FIREBASE)",
      "dto_in": "@Param: string",
      "dto_out": "{ notes: Note[]; }",
      "statuses": "200, 404, 401",
      "file": "src\\modules\\order\\order.controller.ts",
      "line": 198
    },
    {
      "module": "order",
      "controller": "OrderController",
      "method": "GET",
      "path": "/delivery/order/vendor/orders",
      "auth_guard": "[Class] UnifiedAuthGuard, [Class] RolesGuard, @Auth(AuthType.VENDOR_JWT)",
      "dto_in": "@Query: CursorPaginationDto",
      "dto_out": "import(\"C:/Users/Administrator/Desktop/bthwani_git/backend-nest/src/common/utils/pagination.helper\").PaginationResult<import(\"C:/Users/Administrator/Desktop/bthwani_git/backend-nest/src/modules/order/entities/order.entity\").Order>",
      "statuses": "200, 401",
      "file": "src\\modules\\order\\order.controller.ts",
      "line": 212
    },
    {
      "module": "order",
      "controller": "OrderController",
      "method": "POST",
      "path": "/delivery/order/:id/vendor-accept",
      "auth_guard": "[Class] UnifiedAuthGuard, [Class] RolesGuard, @Auth(AuthType.VENDOR_JWT)",
      "dto_in": "@Param: string",
      "dto_out": "import(\"mongoose\").Document<unknown, {}, import(\"C:/Users/Administrator/Desktop/bthwani_git/backend-nest/src/modules/order/entities/order.entity\").Order, {}, {}> & import(\"C:/Users/Administrator/Desktop/bthwani_git/backend-nest/src/modules/order/entities/order.entity\").Order & Required<{ _id: unknown; }> & { __v: number; }",
      "statuses": "201, 400, 401, 200, 404, 403",
      "file": "src\\modules\\order\\order.controller.ts",
      "line": 225
    },
    {
      "module": "order",
      "controller": "OrderController",
      "method": "POST",
      "path": "/delivery/order/:id/vendor-cancel",
      "auth_guard": "[Class] UnifiedAuthGuard, [Class] RolesGuard, @Auth(AuthType.VENDOR_JWT)",
      "dto_in": "@Param: string, @Body: { reason: string }",
      "dto_out": "import(\"mongoose\").Document<unknown, {}, import(\"C:/Users/Administrator/Desktop/bthwani_git/backend-nest/src/modules/order/entities/order.entity\").Order, {}, {}> & import(\"C:/Users/Administrator/Desktop/bthwani_git/backend-nest/src/modules/order/entities/order.entity\").Order & Required<{ _id: unknown; }> & { __v: number; }",
      "statuses": "201, 400, 401, 200, 404, 403",
      "file": "src\\modules\\order\\order.controller.ts",
      "line": 245
    },
    {
      "module": "order",
      "controller": "OrderController",
      "method": "POST",
      "path": "/delivery/order/:id/pod",
      "auth_guard": "[Class] UnifiedAuthGuard, [Class] RolesGuard, @Auth(AuthType.JWT)",
      "dto_in": "@Param: string, @Body: { imageUrl: string; signature?: string; notes?: string }",
      "dto_out": "{ success: boolean; }",
      "statuses": "201, 400, 401, 200, 404, 403",
      "file": "src\\modules\\order\\order.controller.ts",
      "line": 276
    },
    {
      "module": "order",
      "controller": "OrderController",
      "method": "GET",
      "path": "/delivery/order/:id/pod",
      "auth_guard": "[Class] UnifiedAuthGuard, [Class] RolesGuard, @Auth(AuthType.FIREBASE)",
      "dto_in": "@Param: string",
      "dto_out": "{ proofOfDelivery: { imageUrl: string; signature?: string | undefined; notes?: string | undefined; uploadedAt: Date; uploadedBy: string; } | null; }",
      "statuses": "200, 404, 401",
      "file": "src\\modules\\order\\order.controller.ts",
      "line": 310
    },
    {
      "module": "order",
      "controller": "OrderController",
      "method": "POST",
      "path": "/delivery/order/:id/cancel",
      "auth_guard": "[Class] UnifiedAuthGuard, [Class] RolesGuard, @Auth(AuthType.FIREBASE)",
      "dto_in": "@Param: string, @Body: { reason: string }",
      "dto_out": "import(\"mongoose\").Document<unknown, {}, import(\"C:/Users/Administrator/Desktop/bthwani_git/backend-nest/src/modules/order/entities/order.entity\").Order, {}, {}> & import(\"C:/Users/Administrator/Desktop/bthwani_git/backend-nest/src/modules/order/entities/order.entity\").Order & Required<{ _id: unknown; }> & { __v: number; }",
      "statuses": "201, 400, 401, 200, 404",
      "file": "src\\modules\\order\\order.controller.ts",
      "line": 324
    },
    {
      "module": "order",
      "controller": "OrderController",
      "method": "POST",
      "path": "/delivery/order/:id/return",
      "auth_guard": "[Class] UnifiedAuthGuard, [Class] RolesGuard, @Auth(AuthType.FIREBASE)",
      "dto_in": "@Param: string, @Body: { reason: string }",
      "dto_out": "import(\"mongoose\").Document<unknown, {}, import(\"C:/Users/Administrator/Desktop/bthwani_git/backend-nest/src/modules/order/entities/order.entity\").Order, {}, {}> & import(\"C:/Users/Administrator/Desktop/bthwani_git/backend-nest/src/modules/order/entities/order.entity\").Order & Required<{ _id: unknown; }> & { __v: number; }",
      "statuses": "201, 400, 401, 200, 404",
      "file": "src\\modules\\order\\order.controller.ts",
      "line": 354
    },
    {
      "module": "order",
      "controller": "OrderController",
      "method": "POST",
      "path": "/delivery/order/:id/rate",
      "auth_guard": "[Class] UnifiedAuthGuard, [Class] RolesGuard, @Auth(AuthType.FIREBASE)",
      "dto_in": "@Param: string, @Body: { rating: number; comment?: string }",
      "dto_out": "{ success: boolean; rating: number; comment: string | undefined; }",
      "statuses": "201, 400, 401, 200, 404",
      "file": "src\\modules\\order\\order.controller.ts",
      "line": 386
    },
    {
      "module": "order",
      "controller": "OrderController",
      "method": "POST",
      "path": "/delivery/order/:id/repeat",
      "auth_guard": "[Class] UnifiedAuthGuard, [Class] RolesGuard, @Auth(AuthType.FIREBASE)",
      "dto_in": "@Param: string",
      "dto_out": "import(\"mongoose\").Document<unknown, {}, import(\"C:/Users/Administrator/Desktop/bthwani_git/backend-nest/src/modules/order/entities/order.entity\").Order, {}, {}> & import(\"C:/Users/Administrator/Desktop/bthwani_git/backend-nest/src/modules/order/entities/order.entity\").Order & Required<{ _id: unknown; }> & { __v: number; }",
      "statuses": "201, 400, 401, 404",
      "file": "src\\modules\\order\\order.controller.ts",
      "line": 426
    },
    {
      "module": "order",
      "controller": "OrderController",
      "method": "PATCH",
      "path": "/delivery/order/:id/admin-status",
      "auth_guard": "[Class] UnifiedAuthGuard, [Class] RolesGuard, @Auth(AuthType.JWT)",
      "dto_in": "@Param: string, @Body: { status: string; reason?: string }",
      "dto_out": "import(\"mongoose\").Document<unknown, {}, import(\"C:/Users/Administrator/Desktop/bthwani_git/backend-nest/src/modules/order/entities/order.entity\").Order, {}, {}> & import(\"C:/Users/Administrator/Desktop/bthwani_git/backend-nest/src/modules/order/entities/order.entity\").Order & Required<{ _id: unknown; }> & { __v: number; }",
      "statuses": "200, 404, 400, 401",
      "file": "src\\modules\\order\\order.controller.ts",
      "line": 450
    },
    {
      "module": "order",
      "controller": "OrderController",
      "method": "GET",
      "path": "/delivery/order/export",
      "auth_guard": "[Class] UnifiedAuthGuard, [Class] RolesGuard, @Auth(AuthType.JWT)",
      "dto_in": "@Query: string, @Query: string, @Query: string",
      "dto_out": "{ total: number; orders: { id: unknown; userName: string | undefined; userPhone: string | undefined; driverName: string | undefined; status: string; totalAmount: number; createdAt: Date; }[]; }",
      "statuses": "200, 401",
      "file": "src\\modules\\order\\order.controller.ts",
      "line": 470
    },
    {
      "module": "order",
      "controller": "OrderController",
      "method": "GET",
      "path": "/delivery/order/:id/tracking",
      "auth_guard": "[Class] UnifiedAuthGuard, [Class] RolesGuard, @Auth(AuthType.FIREBASE)",
      "dto_in": "@Param: string",
      "dto_out": "{ orderId: unknown; status: string; statusHistory: unknown; driver: { name: string | undefined; phone: string | undefined; location: unknown; } | null; estimatedDeliveryTime: Date | undefined; deliveryAddress: unknown; }",
      "statuses": "200, 404, 401",
      "file": "src\\modules\\order\\order.controller.ts",
      "line": 506
    },
    {
      "module": "order",
      "controller": "OrderController",
      "method": "POST",
      "path": "/delivery/order/:id/schedule",
      "auth_guard": "[Class] UnifiedAuthGuard, [Class] RolesGuard, @Auth(AuthType.JWT)",
      "dto_in": "@Param: string, @Body: { scheduledDate: string }",
      "dto_out": "{ success: boolean; message: string; order: import(\"mongoose\").Document<unknown, {}, import(\"C:/Users/Administrator/Desktop/bthwani_git/backend-nest/src/modules/order/entities/order.entity\").Order, {}, {}> & import(\"C:/Users/Administrator/Desktop/bthwani_git/backend-nest/src/modules/order/entities/order.entity\").Order & Required<{ _id: unknown; }> & { __v: number; }; }",
      "statuses": "201, 400, 401, 200, 404",
      "file": "src\\modules\\order\\order.controller.ts",
      "line": 518
    },
    {
      "module": "order",
      "controller": "OrderController",
      "method": "GET",
      "path": "/delivery/order/public/:id/status",
      "auth_guard": "[Class] UnifiedAuthGuard, [Class] RolesGuard, @Public",
      "dto_in": "@Param: string",
      "dto_out": "{ status: string; updatedAt: Date; estimatedDelivery: Date | undefined; }",
      "statuses": "200, 404, 401",
      "file": "src\\modules\\order\\order.controller.ts",
      "line": 553
    },
    {
      "module": "order",
      "controller": "OrderController",
      "method": "GET",
      "path": "/delivery/order/:id/live-tracking",
      "auth_guard": "[Class] UnifiedAuthGuard, [Class] RolesGuard, @Auth(AuthType.FIREBASE)",
      "dto_in": "@Param: string",
      "dto_out": "{ orderId: unknown; status: string; driver: { id: unknown; name: string | undefined; phone: string | undefined; currentLocation: unknown; rating: number | undefined; } | null; estimatedArrival: Date | undefined; lastUpdate: Date; }",
      "statuses": "200, 404, 401",
      "file": "src\\modules\\order\\order.controller.ts",
      "line": 572
    },
    {
      "module": "order",
      "controller": "OrderController",
      "method": "GET",
      "path": "/delivery/order/:id/driver-eta",
      "auth_guard": "[Class] UnifiedAuthGuard, [Class] RolesGuard, @Auth(AuthType.FIREBASE)",
      "dto_in": "@Param: string",
      "dto_out": "{ orderId: unknown; estimatedMinutes: number; estimatedArrivalTime: Date; distance: number; driverLocation: unknown; }",
      "statuses": "200, 404, 401",
      "file": "src\\modules\\order\\order.controller.ts",
      "line": 584
    },
    {
      "module": "order",
      "controller": "OrderController",
      "method": "POST",
      "path": "/delivery/order/:id/update-location",
      "auth_guard": "[Class] UnifiedAuthGuard, [Class] RolesGuard, @Auth(AuthType.JWT)",
      "dto_in": "@Param: string, @Body: { lat: number; lng: number }",
      "dto_out": "{ success: boolean; message: string; location: { lat: number; lng: number; }; timestamp: Date; }",
      "statuses": "201, 400, 401, 200, 404, 403",
      "file": "src\\modules\\order\\order.controller.ts",
      "line": 596
    },
    {
      "module": "order",
      "controller": "OrderController",
      "method": "GET",
      "path": "/delivery/order/:id/route-history",
      "auth_guard": "[Class] UnifiedAuthGuard, [Class] RolesGuard, @Auth(AuthType.FIREBASE)",
      "dto_in": "@Param: string",
      "dto_out": "{ orderId: string; route: never[]; totalDistance: number; duration: number; }",
      "statuses": "200, 404, 401",
      "file": "src\\modules\\order\\order.controller.ts",
      "line": 628
    },
    {
      "module": "order",
      "controller": "OrderController",
      "method": "GET",
      "path": "/delivery/order/:id/delivery-timeline",
      "auth_guard": "[Class] UnifiedAuthGuard, [Class] RolesGuard, @Auth(AuthType.FIREBASE)",
      "dto_in": "@Param: string",
      "dto_out": "{ orderId: unknown; events: { status: string; timestamp: Date; description: string; }[]; }",
      "statuses": "200, 404, 401",
      "file": "src\\modules\\order\\order.controller.ts",
      "line": 640
    },
    {
      "module": "promotion",
      "controller": "PromotionController",
      "method": "GET",
      "path": "/promotions/by-placement",
      "auth_guard": "",
      "dto_in": "@Query: GetPromotionsByPlacementDto",
      "dto_out": "import(\"C:/Users/Administrator/Desktop/bthwani_git/backend-nest/src/modules/promotion/entities/promotion.entity\").Promotion[]",
      "statuses": "200, 401",
      "file": "src\\modules\\promotion\\promotion.controller.ts",
      "line": 31
    },
    {
      "module": "promotion",
      "controller": "PromotionController",
      "method": "POST",
      "path": "/promotions/:id/click",
      "auth_guard": "",
      "dto_in": "@Param: string",
      "dto_out": "{ message: string; }",
      "statuses": "201, 400, 401",
      "file": "src\\modules\\promotion\\promotion.controller.ts",
      "line": 42
    },
    {
      "module": "promotion",
      "controller": "PromotionController",
      "method": "POST",
      "path": "/promotions/:id/conversion",
      "auth_guard": "",
      "dto_in": "@Param: string",
      "dto_out": "{ message: string; }",
      "statuses": "201, 400, 401",
      "file": "src\\modules\\promotion\\promotion.controller.ts",
      "line": 53
    },
    {
      "module": "promotion",
      "controller": "PromotionController",
      "method": "POST",
      "path": "/promotions",
      "auth_guard": "@Auth(AuthType.JWT), @Roles('admin', 'superadmin')",
      "dto_in": "@Body: CreatePromotionDto",
      "dto_out": "import(\"C:/Users/Administrator/Desktop/bthwani_git/backend-nest/src/modules/promotion/entities/promotion.entity\").Promotion",
      "statuses": "201, 400, 401",
      "file": "src\\modules\\promotion\\promotion.controller.ts",
      "line": 66
    },
    {
      "module": "promotion",
      "controller": "PromotionController",
      "method": "GET",
      "path": "/promotions",
      "auth_guard": "@Auth(AuthType.JWT), @Roles('admin', 'superadmin')",
      "dto_in": "@Query: boolean",
      "dto_out": "import(\"C:/Users/Administrator/Desktop/bthwani_git/backend-nest/src/modules/promotion/entities/promotion.entity\").Promotion[]",
      "statuses": "200, 401",
      "file": "src\\modules\\promotion\\promotion.controller.ts",
      "line": 81
    },
    {
      "module": "promotion",
      "controller": "PromotionController",
      "method": "GET",
      "path": "/promotions/:id",
      "auth_guard": "@Auth(AuthType.JWT), @Roles('admin', 'superadmin')",
      "dto_in": "@Param: string",
      "dto_out": "import(\"C:/Users/Administrator/Desktop/bthwani_git/backend-nest/src/modules/promotion/entities/promotion.entity\").Promotion",
      "statuses": "200, 404, 401",
      "file": "src\\modules\\promotion\\promotion.controller.ts",
      "line": 92
    },
    {
      "module": "promotion",
      "controller": "PromotionController",
      "method": "PATCH",
      "path": "/promotions/:id",
      "auth_guard": "@Auth(AuthType.JWT), @Roles('admin', 'superadmin')",
      "dto_in": "@Param: string, @Body: UpdatePromotionDto",
      "dto_out": "import(\"C:/Users/Administrator/Desktop/bthwani_git/backend-nest/src/modules/promotion/entities/promotion.entity\").Promotion",
      "statuses": "200, 404, 400, 401",
      "file": "src\\modules\\promotion\\promotion.controller.ts",
      "line": 105
    },
    {
      "module": "promotion",
      "controller": "PromotionController",
      "method": "DELETE",
      "path": "/promotions/:id",
      "auth_guard": "@Auth(AuthType.JWT), @Roles('admin', 'superadmin')",
      "dto_in": "@Param: string",
      "dto_out": "{ message: string; }",
      "statuses": "200, 404, 401",
      "file": "src\\modules\\promotion\\promotion.controller.ts",
      "line": 122
    },
    {
      "module": "promotion",
      "controller": "PromotionController",
      "method": "GET",
      "path": "/promotions/stats/overview",
      "auth_guard": "@Auth(AuthType.JWT), @Roles('admin', 'superadmin')",
      "dto_in": "",
      "dto_out": "{ active: { _id: boolean; count: number; totalViews: number; totalClicks: number; totalConversions: number; }; inactive: { _id: boolean; count: number; totalViews: number; totalClicks: number; totalConversions: number; }; ctr: number; conversionRate: number; }",
      "statuses": "200, 401",
      "file": "src\\modules\\promotion\\promotion.controller.ts",
      "line": 136
    },
    {
      "module": "promotion",
      "controller": "PromotionsByStoresController",
      "method": "GET",
      "path": "/delivery/promotions/by-stores",
      "auth_guard": "@Public",
      "dto_in": "",
      "dto_out": "{ success: boolean; data: never[]; message: string; }",
      "statuses": "200",
      "file": "src\\modules\\promotion\\promotions-by-stores.controller.ts",
      "line": 11
    },
    {
      "module": "shift",
      "controller": "ShiftController",
      "method": "GET",
      "path": "/shifts",
      "auth_guard": "[Class] UnifiedAuthGuard, [Class] RolesGuard, [Class] @Auth(AuthType.JWT), [Class] @ApiBearerAuth, @Roles('admin', 'superadmin')",
      "dto_in": "",
      "dto_out": "{ success: boolean; data: never[]; message: string; }",
      "statuses": "200, 401",
      "file": "src\\modules\\shift\\shift.controller.ts",
      "line": 28
    },
    {
      "module": "shift",
      "controller": "ShiftController",
      "method": "POST",
      "path": "/shifts",
      "auth_guard": "[Class] UnifiedAuthGuard, [Class] RolesGuard, [Class] @Auth(AuthType.JWT), [Class] @ApiBearerAuth, @Roles('admin', 'superadmin')",
      "dto_in": "@Body: {\r\n      name: string;\r\n      startTime: string;\r\n      endTime: string;\r\n      days: number[];\r\n    }",
      "dto_out": "{ success: boolean; data: { adminId: string; name: string; startTime: string; endTime: string; days: number[]; }; message: string; }",
      "statuses": "201, 400, 401",
      "file": "src\\modules\\shift\\shift.controller.ts",
      "line": 41
    },
    {
      "module": "shift",
      "controller": "ShiftController",
      "method": "PATCH",
      "path": "/shifts/:id",
      "auth_guard": "[Class] UnifiedAuthGuard, [Class] RolesGuard, [Class] @Auth(AuthType.JWT), [Class] @ApiBearerAuth, @Roles('admin', 'superadmin')",
      "dto_in": "@Param: string, @Body: any",
      "dto_out": "{ success: boolean; data: any; message: string; }",
      "statuses": "200, 404, 400, 401",
      "file": "src\\modules\\shift\\shift.controller.ts",
      "line": 64
    },
    {
      "module": "shift",
      "controller": "ShiftController",
      "method": "POST",
      "path": "/shifts/:shiftId/assign/:driverId",
      "auth_guard": "[Class] UnifiedAuthGuard, [Class] RolesGuard, [Class] @Auth(AuthType.JWT), [Class] @ApiBearerAuth, @Roles('admin', 'superadmin')",
      "dto_in": "@Param: string, @Param: string, @Body: { startDate: string; endDate?: string }",
      "dto_out": "{ success: boolean; data: { startDate: string; endDate?: string | undefined; shiftId: string; driverId: string; }; message: string; }",
      "statuses": "201, 400, 401",
      "file": "src\\modules\\shift\\shift.controller.ts",
      "line": 80
    },
    {
      "module": "shift",
      "controller": "ShiftController",
      "method": "GET",
      "path": "/shifts/driver/:driverId",
      "auth_guard": "[Class] UnifiedAuthGuard, [Class] RolesGuard, [Class] @Auth(AuthType.JWT), [Class] @ApiBearerAuth, @Roles('admin', 'superadmin', 'driver')",
      "dto_in": "@Param: string",
      "dto_out": "{ success: boolean; data: never[]; driverId: string; message: string; }",
      "statuses": "200, 404, 401",
      "file": "src\\modules\\shift\\shift.controller.ts",
      "line": 100
    },
    {
      "module": "shift",
      "controller": "ShiftController",
      "method": "GET",
      "path": "/shifts/my-shifts",
      "auth_guard": "[Class] UnifiedAuthGuard, [Class] RolesGuard, [Class] @Auth(AuthType.JWT), [Class] @ApiBearerAuth, @Roles('driver')",
      "dto_in": "",
      "dto_out": "{ success: boolean; data: never[]; driverId: string; message: string; }",
      "statuses": "200, 401",
      "file": "src\\modules\\shift\\shift.controller.ts",
      "line": 116
    },
    {
      "module": "store",
      "controller": "DeliveryCategoriesController",
      "method": "GET",
      "path": "/delivery/categories",
      "auth_guard": "@Public",
      "dto_in": "",
      "dto_out": "{ success: boolean; data: { id: string; name: string; icon: string; }[]; }",
      "statuses": "200",
      "file": "src\\modules\\store\\delivery-categories.controller.ts",
      "line": 12
    },
    {
      "module": "store",
      "controller": "DeliveryStoreController",
      "method": "GET",
      "path": "/delivery/stores",
      "auth_guard": "@Public",
      "dto_in": "@Query: CursorPaginationDto, @Query: string, @Query: boolean, @Query: boolean, @Query: string",
      "dto_out": "{ data: (import(\"mongoose\").Document<unknown, {}, import(\"C:/Users/Administrator/Desktop/bthwani_git/backend-nest/src/modules/store/entities/store.entity\").Store, {}, {}> & import(\"C:/Users/Administrator/Desktop/bthwani_git/backend-nest/src/modules/store/entities/store.entity\").Store & Required<{ _id: unknown; }> & { __v: number; })[]; pagination: { nextCursor: string | null; hasMore: boolean; limit: number; }; }",
      "statuses": "200, 401",
      "file": "src\\modules\\store\\delivery-store.controller.ts",
      "line": 19
    },
    {
      "module": "store",
      "controller": "DeliveryStoreController",
      "method": "GET",
      "path": "/delivery/stores/search",
      "auth_guard": "@Public",
      "dto_in": "@Query: string, @Query: CursorPaginationDto",
      "dto_out": "{ data: (import(\"mongoose\").Document<unknown, {}, import(\"C:/Users/Administrator/Desktop/bthwani_git/backend-nest/src/modules/store/entities/store.entity\").Store, {}, {}> & import(\"C:/Users/Administrator/Desktop/bthwani_git/backend-nest/src/modules/store/entities/store.entity\").Store & Required<{ _id: unknown; }> & { __v: number; })[]; pagination: { nextCursor: string | null; hasMore: boolean; limit: number; }; }",
      "statuses": "200, 401",
      "file": "src\\modules\\store\\delivery-store.controller.ts",
      "line": 39
    },
    {
      "module": "store",
      "controller": "DeliveryStoreController",
      "method": "GET",
      "path": "/delivery/stores/:id",
      "auth_guard": "@Public",
      "dto_in": "@Param: string",
      "dto_out": "import(\"mongoose\").Document<unknown, {}, import(\"C:/Users/Administrator/Desktop/bthwani_git/backend-nest/src/modules/store/entities/store.entity\").Store, {}, {}> & import(\"C:/Users/Administrator/Desktop/bthwani_git/backend-nest/src/modules/store/entities/store.entity\").Store & Required<{ _id: unknown; }> & { __v: number; }",
      "statuses": "200, 404, 401",
      "file": "src\\modules\\store\\delivery-store.controller.ts",
      "line": 51
    },
    {
      "module": "store",
      "controller": "DeliveryStoreController",
      "method": "GET",
      "path": "/delivery/stores/:id/products",
      "auth_guard": "@Public",
      "dto_in": "@Param: string, @Query: CursorPaginationDto",
      "dto_out": "{ data: (import(\"mongoose\").Document<unknown, {}, import(\"C:/Users/Administrator/Desktop/bthwani_git/backend-nest/src/modules/store/entities/product.entity\").Product, {}, {}> & import(\"C:/Users/Administrator/Desktop/bthwani_git/backend-nest/src/modules/store/entities/product.entity\").Product & Required<{ _id: unknown; }> & { __v: number; })[]; pagination: { nextCursor: string | null; hasMore: boolean; limit: number; }; }",
      "statuses": "200, 404, 401",
      "file": "src\\modules\\store\\delivery-store.controller.ts",
      "line": 62
    },
    {
      "module": "store",
      "controller": "DeliveryStoreController",
      "method": "GET",
      "path": "/delivery/stores/:id/statistics",
      "auth_guard": "@Public",
      "dto_in": "@Param: string",
      "dto_out": "{ totalOrders: number; totalRevenue: number; averageRating: number; totalProducts: number; }",
      "statuses": "200, 404, 401",
      "file": "src\\modules\\store\\delivery-store.controller.ts",
      "line": 76
    },
    {
      "module": "store",
      "controller": "DeliveryStoreController",
      "method": "GET",
      "path": "/delivery/stores/:id/reviews",
      "auth_guard": "@Public",
      "dto_in": "@Param: string, @Query: CursorPaginationDto",
      "dto_out": "{ data: never[]; total: number; averageRating: number; }",
      "statuses": "200, 404, 401",
      "file": "src\\modules\\store\\delivery-store.controller.ts",
      "line": 87
    },
    {
      "module": "store",
      "controller": "DeliveryStoreController",
      "method": "PUT",
      "path": "/delivery/stores/:id",
      "auth_guard": "",
      "dto_in": "@Param: string, @Body: any",
      "dto_out": "import(\"mongoose\").Document<unknown, {}, import(\"C:/Users/Administrator/Desktop/bthwani_git/backend-nest/src/modules/store/entities/store.entity\").Store, {}, {}> & import(\"C:/Users/Administrator/Desktop/bthwani_git/backend-nest/src/modules/store/entities/store.entity\").Store & Required<{ _id: unknown; }> & { __v: number; }",
      "statuses": "200, 404, 400, 401",
      "file": "src\\modules\\store\\delivery-store.controller.ts",
      "line": 101
    },
    {
      "module": "store",
      "controller": "GroceriesController",
      "method": "GET",
      "path": "/groceries/catalog",
      "auth_guard": "@Public",
      "dto_in": "",
      "dto_out": "{ success: boolean; data: never[]; message: string; }",
      "statuses": "200",
      "file": "src\\modules\\store\\groceries.controller.ts",
      "line": 11
    },
    {
      "module": "store",
      "controller": "StoreController",
      "method": "POST",
      "path": "/admin/stores",
      "auth_guard": "[Class] UnifiedAuthGuard, [Class] RolesGuard, @Auth(AuthType.JWT), @Roles('admin', 'superadmin')",
      "dto_in": "@Body: CreateStoreDto",
      "dto_out": "import(\"mongoose\").Document<unknown, {}, import(\"C:/Users/Administrator/Desktop/bthwani_git/backend-nest/src/modules/store/entities/store.entity\").Store, {}, {}> & import(\"C:/Users/Administrator/Desktop/bthwani_git/backend-nest/src/modules/store/entities/store.entity\").Store & Required<{ _id: unknown; }> & { __v: number; }",
      "statuses": "201, 400, 401",
      "file": "src\\modules\\store\\store.controller.ts",
      "line": 28
    },
    {
      "module": "store",
      "controller": "StoreController",
      "method": "GET",
      "path": "/admin/stores",
      "auth_guard": "[Class] UnifiedAuthGuard, [Class] RolesGuard, @Auth(AuthType.JWT), @Roles('admin', 'superadmin')",
      "dto_in": "@Query: CursorPaginationDto, @Query: string, @Query: string, @Query: string",
      "dto_out": "{ data: (import(\"mongoose\").Document<unknown, {}, import(\"C:/Users/Administrator/Desktop/bthwani_git/backend-nest/src/modules/store/entities/store.entity\").Store, {}, {}> & import(\"C:/Users/Administrator/Desktop/bthwani_git/backend-nest/src/modules/store/entities/store.entity\").Store & Required<{ _id: unknown; }> & { __v: number; })[]; pagination: { nextCursor: string | null; hasMore: boolean; limit: number; }; }",
      "statuses": "200, 401",
      "file": "src\\modules\\store\\store.controller.ts",
      "line": 40
    },
    {
      "module": "store",
      "controller": "StoreController",
      "method": "GET",
      "path": "/admin/stores/:id",
      "auth_guard": "[Class] UnifiedAuthGuard, [Class] RolesGuard, @Auth(AuthType.JWT), @Roles('admin', 'superadmin')",
      "dto_in": "@Param: string",
      "dto_out": "import(\"mongoose\").Document<unknown, {}, import(\"C:/Users/Administrator/Desktop/bthwani_git/backend-nest/src/modules/store/entities/store.entity\").Store, {}, {}> & import(\"C:/Users/Administrator/Desktop/bthwani_git/backend-nest/src/modules/store/entities/store.entity\").Store & Required<{ _id: unknown; }> & { __v: number; }",
      "statuses": "200, 404, 401",
      "file": "src\\modules\\store\\store.controller.ts",
      "line": 56
    },
    {
      "module": "store",
      "controller": "StoreController",
      "method": "POST",
      "path": "/admin/stores/products",
      "auth_guard": "[Class] UnifiedAuthGuard, [Class] RolesGuard, @Auth(AuthType.JWT), @Roles('admin', 'superadmin', 'vendor')",
      "dto_in": "@Body: CreateProductDto",
      "dto_out": "import(\"mongoose\").Document<unknown, {}, import(\"C:/Users/Administrator/Desktop/bthwani_git/backend-nest/src/modules/store/entities/product.entity\").Product, {}, {}> & import(\"C:/Users/Administrator/Desktop/bthwani_git/backend-nest/src/modules/store/entities/product.entity\").Product & Required<{ _id: unknown; }> & { __v: number; }",
      "statuses": "201, 400, 401",
      "file": "src\\modules\\store\\store.controller.ts",
      "line": 69
    },
    {
      "module": "store",
      "controller": "StoreController",
      "method": "GET",
      "path": "/admin/stores/:id/products",
      "auth_guard": "[Class] UnifiedAuthGuard, [Class] RolesGuard, @Auth(AuthType.JWT), @Roles('admin', 'superadmin')",
      "dto_in": "@Param: string, @Query: CursorPaginationDto",
      "dto_out": "{ data: (import(\"mongoose\").Document<unknown, {}, import(\"C:/Users/Administrator/Desktop/bthwani_git/backend-nest/src/modules/store/entities/product.entity\").Product, {}, {}> & import(\"C:/Users/Administrator/Desktop/bthwani_git/backend-nest/src/modules/store/entities/product.entity\").Product & Required<{ _id: unknown; }> & { __v: number; })[]; pagination: { nextCursor: string | null; hasMore: boolean; limit: number; }; }",
      "statuses": "200, 404, 401",
      "file": "src\\modules\\store\\store.controller.ts",
      "line": 81
    },
    {
      "module": "store",
      "controller": "StoreController",
      "method": "PATCH",
      "path": "/admin/stores/:id",
      "auth_guard": "[Class] UnifiedAuthGuard, [Class] RolesGuard, @Auth(AuthType.JWT), @Roles('admin', 'superadmin')",
      "dto_in": "@Param: string, @Body: any",
      "dto_out": "import(\"mongoose\").Document<unknown, {}, import(\"C:/Users/Administrator/Desktop/bthwani_git/backend-nest/src/modules/store/entities/store.entity\").Store, {}, {}> & import(\"C:/Users/Administrator/Desktop/bthwani_git/backend-nest/src/modules/store/entities/store.entity\").Store & Required<{ _id: unknown; }> & { __v: number; }",
      "statuses": "200, 404, 400, 401",
      "file": "src\\modules\\store\\store.controller.ts",
      "line": 97
    },
    {
      "module": "store",
      "controller": "StoreController",
      "method": "POST",
      "path": "/admin/stores/:id/activate",
      "auth_guard": "[Class] UnifiedAuthGuard, [Class] RolesGuard, @Auth(AuthType.JWT), @Roles('admin', 'superadmin')",
      "dto_in": "@Param: string",
      "dto_out": "import(\"mongoose\").Document<unknown, {}, import(\"C:/Users/Administrator/Desktop/bthwani_git/backend-nest/src/modules/store/entities/store.entity\").Store, {}, {}> & import(\"C:/Users/Administrator/Desktop/bthwani_git/backend-nest/src/modules/store/entities/store.entity\").Store & Required<{ _id: unknown; }> & { __v: number; }",
      "statuses": "201, 400, 401",
      "file": "src\\modules\\store\\store.controller.ts",
      "line": 111
    },
    {
      "module": "store",
      "controller": "StoreController",
      "method": "POST",
      "path": "/admin/stores/:id/deactivate",
      "auth_guard": "[Class] UnifiedAuthGuard, [Class] RolesGuard, @Auth(AuthType.JWT), @Roles('admin', 'superadmin')",
      "dto_in": "@Param: string",
      "dto_out": "import(\"mongoose\").Document<unknown, {}, import(\"C:/Users/Administrator/Desktop/bthwani_git/backend-nest/src/modules/store/entities/store.entity\").Store, {}, {}> & import(\"C:/Users/Administrator/Desktop/bthwani_git/backend-nest/src/modules/store/entities/store.entity\").Store & Required<{ _id: unknown; }> & { __v: number; }",
      "statuses": "201, 400, 401",
      "file": "src\\modules\\store\\store.controller.ts",
      "line": 124
    },
    {
      "module": "store",
      "controller": "StoreController",
      "method": "POST",
      "path": "/admin/stores/:id/force-close",
      "auth_guard": "[Class] UnifiedAuthGuard, [Class] RolesGuard, @Auth(AuthType.JWT), @Roles('admin', 'superadmin')",
      "dto_in": "@Param: string",
      "dto_out": "import(\"mongoose\").Document<unknown, {}, import(\"C:/Users/Administrator/Desktop/bthwani_git/backend-nest/src/modules/store/entities/store.entity\").Store, {}, {}> & import(\"C:/Users/Administrator/Desktop/bthwani_git/backend-nest/src/modules/store/entities/store.entity\").Store & Required<{ _id: unknown; }> & { __v: number; }",
      "statuses": "201, 400, 401",
      "file": "src\\modules\\store\\store.controller.ts",
      "line": 137
    },
    {
      "module": "store",
      "controller": "StoreController",
      "method": "POST",
      "path": "/admin/stores/:id/force-open",
      "auth_guard": "[Class] UnifiedAuthGuard, [Class] RolesGuard, @Auth(AuthType.JWT), @Roles('admin', 'superadmin')",
      "dto_in": "@Param: string",
      "dto_out": "import(\"mongoose\").Document<unknown, {}, import(\"C:/Users/Administrator/Desktop/bthwani_git/backend-nest/src/modules/store/entities/store.entity\").Store, {}, {}> & import(\"C:/Users/Administrator/Desktop/bthwani_git/backend-nest/src/modules/store/entities/store.entity\").Store & Required<{ _id: unknown; }> & { __v: number; }",
      "statuses": "201, 400, 401",
      "file": "src\\modules\\store\\store.controller.ts",
      "line": 150
    },
    {
      "module": "store",
      "controller": "StoreController",
      "method": "PATCH",
      "path": "/admin/stores/products/:id",
      "auth_guard": "[Class] UnifiedAuthGuard, [Class] RolesGuard, @Auth(AuthType.JWT), @Roles('admin', 'superadmin', 'vendor')",
      "dto_in": "@Param: string, @Body: any",
      "dto_out": "import(\"mongoose\").Document<unknown, {}, import(\"C:/Users/Administrator/Desktop/bthwani_git/backend-nest/src/modules/store/entities/product.entity\").Product, {}, {}> & import(\"C:/Users/Administrator/Desktop/bthwani_git/backend-nest/src/modules/store/entities/product.entity\").Product & Required<{ _id: unknown; }> & { __v: number; }",
      "statuses": "200, 404, 400, 401",
      "file": "src\\modules\\store\\store.controller.ts",
      "line": 163
    },
    {
      "module": "store",
      "controller": "StoreController",
      "method": "GET",
      "path": "/admin/stores/:id/analytics",
      "auth_guard": "[Class] UnifiedAuthGuard, [Class] RolesGuard, @Auth(AuthType.JWT), @Roles('admin', 'superadmin')",
      "dto_in": "@Param: string, @Query: string, @Query: string",
      "dto_out": "{ totalOrders: number; totalRevenue: number; averageOrderValue: number; topProducts: never[]; revenueByDay: never[]; }",
      "statuses": "200, 404, 401",
      "file": "src\\modules\\store\\store.controller.ts",
      "line": 179
    },
    {
      "module": "store",
      "controller": "StoreController",
      "method": "GET",
      "path": "/admin/stores/products/:id/variants",
      "auth_guard": "[Class] UnifiedAuthGuard, [Class] RolesGuard, @Auth(AuthType.JWT), @Roles('admin', 'superadmin')",
      "dto_in": "@Param: string",
      "dto_out": "{ data: never[]; }",
      "statuses": "200, 404, 401",
      "file": "src\\modules\\store\\store.controller.ts",
      "line": 196
    },
    {
      "module": "store",
      "controller": "StoreController",
      "method": "POST",
      "path": "/admin/stores/products/:id/variants",
      "auth_guard": "[Class] UnifiedAuthGuard, [Class] RolesGuard, @Auth(AuthType.JWT), @Roles('admin', 'superadmin', 'vendor')",
      "dto_in": "@Param: string, @Body: any",
      "dto_out": "{ success: boolean; message: string; variant: Record<string, unknown>; }",
      "statuses": "201, 400, 401",
      "file": "src\\modules\\store\\store.controller.ts",
      "line": 209
    },
    {
      "module": "store",
      "controller": "StoreController",
      "method": "GET",
      "path": "/admin/stores/:id/inventory",
      "auth_guard": "[Class] UnifiedAuthGuard, [Class] RolesGuard, @Auth(AuthType.JWT), @Roles('admin', 'superadmin')",
      "dto_in": "@Param: string",
      "dto_out": "{ totalProducts: number; lowStock: number; outOfStock: number; products: { id: unknown; name: string; stock: number; price: number; }[]; }",
      "statuses": "200, 404, 401",
      "file": "src\\modules\\store\\store.controller.ts",
      "line": 225
    },
    {
      "module": "store",
      "controller": "StoreController",
      "method": "DELETE",
      "path": "/admin/stores/:id",
      "auth_guard": "[Class] UnifiedAuthGuard, [Class] RolesGuard, @Auth(AuthType.JWT), @Roles('admin', 'superadmin')",
      "dto_in": "@Param: string",
      "dto_out": "{ success: boolean; message: string; }",
      "statuses": "200, 404, 401",
      "file": "src\\modules\\store\\store.controller.ts",
      "line": 238
    },
    {
      "module": "store",
      "controller": "StoreController",
      "method": "GET",
      "path": "/admin/stores/pending",
      "auth_guard": "[Class] UnifiedAuthGuard, [Class] RolesGuard, @Auth(AuthType.JWT), @Roles('admin', 'superadmin')",
      "dto_in": "",
      "dto_out": "(import(\"mongoose\").Document<unknown, {}, import(\"C:/Users/Administrator/Desktop/bthwani_git/backend-nest/src/modules/store/entities/store.entity\").Store, {}, {}> & import(\"C:/Users/Administrator/Desktop/bthwani_git/backend-nest/src/modules/store/entities/store.entity\").Store & Required<{ _id: unknown; }> & { __v: number; })[]",
      "statuses": "200, 401",
      "file": "src\\modules\\store\\store.controller.ts",
      "line": 253
    },
    {
      "module": "store",
      "controller": "StoreController",
      "method": "POST",
      "path": "/admin/stores/:id/approve",
      "auth_guard": "[Class] UnifiedAuthGuard, [Class] RolesGuard, @Auth(AuthType.JWT), @Roles('admin', 'superadmin')",
      "dto_in": "@Param: string",
      "dto_out": "{ success: boolean; message: string; store: import(\"mongoose\").Document<unknown, {}, import(\"C:/Users/Administrator/Desktop/bthwani_git/backend-nest/src/modules/store/entities/store.entity\").Store, {}, {}> & import(\"C:/Users/Administrator/Desktop/bthwani_git/backend-nest/src/modules/store/entities/store.entity\").Store & Required<{ _id: unknown; }> & { __v: number; }; }",
      "statuses": "201, 400, 401",
      "file": "src\\modules\\store\\store.controller.ts",
      "line": 264
    },
    {
      "module": "store",
      "controller": "StoreController",
      "method": "POST",
      "path": "/admin/stores/:id/reject",
      "auth_guard": "[Class] UnifiedAuthGuard, [Class] RolesGuard, @Auth(AuthType.JWT), @Roles('admin', 'superadmin')",
      "dto_in": "@Param: string, @Body: { reason: string }",
      "dto_out": "{ success: boolean; message: string; reason: string; store: import(\"mongoose\").Document<unknown, {}, import(\"C:/Users/Administrator/Desktop/bthwani_git/backend-nest/src/modules/store/entities/store.entity\").Store, {}, {}> & import(\"C:/Users/Administrator/Desktop/bthwani_git/backend-nest/src/modules/store/entities/store.entity\").Store & Required<{ _id: unknown; }> & { __v: number; }; }",
      "statuses": "201, 400, 401",
      "file": "src\\modules\\store\\store.controller.ts",
      "line": 277
    },
    {
      "module": "store",
      "controller": "StoreController",
      "method": "POST",
      "path": "/admin/stores/:id/suspend",
      "auth_guard": "[Class] UnifiedAuthGuard, [Class] RolesGuard, @Auth(AuthType.JWT), @Roles('admin', 'superadmin')",
      "dto_in": "@Param: string, @Body: { reason: string }",
      "dto_out": "{ success: boolean; message: string; reason: string; store: import(\"mongoose\").Document<unknown, {}, import(\"C:/Users/Administrator/Desktop/bthwani_git/backend-nest/src/modules/store/entities/store.entity\").Store, {}, {}> & import(\"C:/Users/Administrator/Desktop/bthwani_git/backend-nest/src/modules/store/entities/store.entity\").Store & Required<{ _id: unknown; }> & { __v: number; }; }",
      "statuses": "201, 400, 401",
      "file": "src\\modules\\store\\store.controller.ts",
      "line": 293
    },
    {
      "module": "support",
      "controller": "SupportController",
      "method": "POST",
      "path": "/support/tickets",
      "auth_guard": "[Class] UnifiedAuthGuard, [Class] @ApiBearerAuth",
      "dto_in": "@Body: CreateTicketDto",
      "dto_out": "import(\"C:/Users/Administrator/Desktop/bthwani_git/backend-nest/src/modules/support/entities/support-ticket.entity\").SupportTicket",
      "statuses": "201, 400, 401",
      "file": "src\\modules\\support\\support.controller.ts",
      "line": 40
    },
    {
      "module": "support",
      "controller": "SupportController",
      "method": "GET",
      "path": "/support/tickets",
      "auth_guard": "[Class] UnifiedAuthGuard, [Class] @ApiBearerAuth",
      "dto_in": "@Query: GetTicketsQueryDto",
      "dto_out": "{ data: (import(\"mongoose\").Document<unknown, {}, import(\"C:/Users/Administrator/Desktop/bthwani_git/backend-nest/src/modules/support/entities/support-ticket.entity\").SupportTicket, {}, {}> & import(\"C:/Users/Administrator/Desktop/bthwani_git/backend-nest/src/modules/support/entities/support-ticket.entity\").SupportTicket & Required<{ _id: unknown; }> & { __v: number; })[]; total: number; page: number; limit: number; totalPages: number; }",
      "statuses": "200, 401",
      "file": "src\\modules\\support\\support.controller.ts",
      "line": 54
    },
    {
      "module": "support",
      "controller": "SupportController",
      "method": "GET",
      "path": "/support/tickets/:id",
      "auth_guard": "[Class] UnifiedAuthGuard, [Class] @ApiBearerAuth",
      "dto_in": "@Param: string",
      "dto_out": "import(\"C:/Users/Administrator/Desktop/bthwani_git/backend-nest/src/modules/support/entities/support-ticket.entity\").SupportTicket",
      "statuses": "200, 404, 401",
      "file": "src\\modules\\support\\support.controller.ts",
      "line": 62
    },
    {
      "module": "support",
      "controller": "SupportController",
      "method": "PATCH",
      "path": "/support/tickets/:id/messages",
      "auth_guard": "[Class] UnifiedAuthGuard, [Class] @ApiBearerAuth",
      "dto_in": "@Param: string, @Body: AddMessageDto",
      "dto_out": "import(\"C:/Users/Administrator/Desktop/bthwani_git/backend-nest/src/modules/support/entities/support-ticket.entity\").SupportTicket",
      "statuses": "200, 404, 400, 401",
      "file": "src\\modules\\support\\support.controller.ts",
      "line": 72
    },
    {
      "module": "support",
      "controller": "SupportController",
      "method": "PATCH",
      "path": "/support/tickets/:id/rate",
      "auth_guard": "[Class] UnifiedAuthGuard, [Class] @ApiBearerAuth",
      "dto_in": "@Param: string, @Body: RateTicketDto",
      "dto_out": "import(\"C:/Users/Administrator/Desktop/bthwani_git/backend-nest/src/modules/support/entities/support-ticket.entity\").SupportTicket",
      "statuses": "200, 404, 400, 401",
      "file": "src\\modules\\support\\support.controller.ts",
      "line": 89
    },
    {
      "module": "support",
      "controller": "SupportController",
      "method": "GET",
      "path": "/support/stats",
      "auth_guard": "[Class] UnifiedAuthGuard, [Class] @ApiBearerAuth",
      "dto_in": "",
      "dto_out": "{ byStatus: any[]; byPriority: any[]; }",
      "statuses": "200, 401",
      "file": "src\\modules\\support\\support.controller.ts",
      "line": 100
    },
    {
      "module": "support",
      "controller": "SupportController",
      "method": "PATCH",
      "path": "/support/admin/tickets/:id/assign",
      "auth_guard": "[Class] UnifiedAuthGuard, [Class] @ApiBearerAuth",
      "dto_in": "@Param: string, @Body: { assigneeId: string }",
      "dto_out": "{ message: string; ticketId: string; assigneeId: string; adminId: string; }",
      "statuses": "200, 404, 400, 401",
      "file": "src\\modules\\support\\support.controller.ts",
      "line": 110
    },
    {
      "module": "support",
      "controller": "SupportController",
      "method": "PATCH",
      "path": "/support/admin/tickets/:id/resolve",
      "auth_guard": "[Class] UnifiedAuthGuard, [Class] @ApiBearerAuth",
      "dto_in": "@Param: string, @Body: { resolution: string }",
      "dto_out": "{ message: string; ticketId: string; resolution: string; adminId: string; }",
      "statuses": "200, 404, 400, 401",
      "file": "src\\modules\\support\\support.controller.ts",
      "line": 127
    },
    {
      "module": "support",
      "controller": "SupportController",
      "method": "GET",
      "path": "/support/admin/sla-metrics",
      "auth_guard": "[Class] UnifiedAuthGuard, [Class] @ApiBearerAuth",
      "dto_in": "",
      "dto_out": "{ averageResponseTime: string; resolutionRate: string; }",
      "statuses": "200, 401",
      "file": "src\\modules\\support\\support.controller.ts",
      "line": 144
    },
    {
      "module": "user",
      "controller": "UserCompatController",
      "method": "GET",
      "path": "/user/profile",
      "auth_guard": "[Class] UnifiedAuthGuard, [Class] RolesGuard, [Class] @ApiBearerAuth, @Auth(AuthType.FIREBASE)",
      "dto_in": "",
      "dto_out": "unknown",
      "statuses": "",
      "file": "src\\modules\\user\\user-compat.controller.ts",
      "line": 20
    },
    {
      "module": "user",
      "controller": "UserController",
      "method": "GET",
      "path": "/users/me",
      "auth_guard": "[Class] UnifiedAuthGuard, [Class] RolesGuard, [Class] @ApiBearerAuth, @Auth(AuthType.FIREBASE)",
      "dto_in": "",
      "dto_out": "unknown",
      "statuses": "200, 401, 404",
      "file": "src\\modules\\user\\user.controller.ts",
      "line": 42
    },
    {
      "module": "user",
      "controller": "UserController",
      "method": "PATCH",
      "path": "/users/me",
      "auth_guard": "[Class] UnifiedAuthGuard, [Class] RolesGuard, [Class] @ApiBearerAuth, @Auth(AuthType.FIREBASE)",
      "dto_in": "@Body: UpdateUserDto",
      "dto_out": "import(\"mongoose\").Document<unknown, {}, import(\"C:/Users/Administrator/Desktop/bthwani_git/backend-nest/src/modules/auth/entities/user.entity\").User, {}, {}> & import(\"C:/Users/Administrator/Desktop/bthwani_git/backend-nest/src/modules/auth/entities/user.entity\").User & Required<{ _id: unknown; }> & { __v: number; }",
      "statuses": "200, 404, 400, 401",
      "file": "src\\modules\\user\\user.controller.ts",
      "line": 59
    },
    {
      "module": "user",
      "controller": "UserController",
      "method": "PATCH",
      "path": "/users/profile",
      "auth_guard": "[Class] UnifiedAuthGuard, [Class] RolesGuard, [Class] @ApiBearerAuth, @Auth(AuthType.FIREBASE)",
      "dto_in": "@Body: UpdateUserDto",
      "dto_out": "import(\"mongoose\").Document<unknown, {}, import(\"C:/Users/Administrator/Desktop/bthwani_git/backend-nest/src/modules/auth/entities/user.entity\").User, {}, {}> & import(\"C:/Users/Administrator/Desktop/bthwani_git/backend-nest/src/modules/auth/entities/user.entity\").User & Required<{ _id: unknown; }> & { __v: number; }",
      "statuses": "",
      "file": "src\\modules\\user\\user.controller.ts",
      "line": 81
    },
    {
      "module": "user",
      "controller": "UserController",
      "method": "GET",
      "path": "/users/addresses",
      "auth_guard": "[Class] UnifiedAuthGuard, [Class] RolesGuard, [Class] @ApiBearerAuth, @Auth(AuthType.FIREBASE)",
      "dto_in": "",
      "dto_out": "{ addresses: Address[]; defaultAddressId: import(\"mongoose\").Types.ObjectId | undefined; }",
      "statuses": "200, 401",
      "file": "src\\modules\\user\\user.controller.ts",
      "line": 91
    },
    {
      "module": "user",
      "controller": "UserController",
      "method": "GET",
      "path": "/users/address",
      "auth_guard": "[Class] UnifiedAuthGuard, [Class] RolesGuard, [Class] @ApiBearerAuth, @Auth(AuthType.FIREBASE)",
      "dto_in": "",
      "dto_out": "{ addresses: Address[]; defaultAddressId: import(\"mongoose\").Types.ObjectId | undefined; }",
      "statuses": "",
      "file": "src\\modules\\user\\user.controller.ts",
      "line": 106
    },
    {
      "module": "user",
      "controller": "UserController",
      "method": "POST",
      "path": "/users/addresses",
      "auth_guard": "[Class] UnifiedAuthGuard, [Class] RolesGuard, [Class] @ApiBearerAuth, @Auth(AuthType.FIREBASE)",
      "dto_in": "@Body: AddAddressDto",
      "dto_out": "{ message: string; addresses: Address[]; }",
      "statuses": "201, 400, 401",
      "file": "src\\modules\\user\\user.controller.ts",
      "line": 113
    },
    {
      "module": "user",
      "controller": "UserController",
      "method": "POST",
      "path": "/users/address",
      "auth_guard": "[Class] UnifiedAuthGuard, [Class] RolesGuard, [Class] @ApiBearerAuth, @Auth(AuthType.FIREBASE)",
      "dto_in": "@Body: AddAddressDto",
      "dto_out": "{ message: string; addresses: Address[]; }",
      "statuses": "",
      "file": "src\\modules\\user\\user.controller.ts",
      "line": 134
    },
    {
      "module": "user",
      "controller": "UserController",
      "method": "PATCH",
      "path": "/users/addresses/:addressId",
      "auth_guard": "[Class] UnifiedAuthGuard, [Class] RolesGuard, [Class] @ApiBearerAuth, @Auth(AuthType.FIREBASE)",
      "dto_in": "@Param: string, @Body: Partial<AddAddressDto>",
      "dto_out": "unknown",
      "statuses": "200, 404, 400, 401",
      "file": "src\\modules\\user\\user.controller.ts",
      "line": 144
    },
    {
      "module": "user",
      "controller": "UserController",
      "method": "DELETE",
      "path": "/users/addresses/:addressId",
      "auth_guard": "[Class] UnifiedAuthGuard, [Class] RolesGuard, [Class] @ApiBearerAuth, @Auth(AuthType.FIREBASE)",
      "dto_in": "@Param: string",
      "dto_out": "{ message: string; addresses: Address[]; }",
      "statuses": "200, 404, 401",
      "file": "src\\modules\\user\\user.controller.ts",
      "line": 168
    },
    {
      "module": "user",
      "controller": "UserController",
      "method": "POST",
      "path": "/users/addresses/:addressId/set-default",
      "auth_guard": "[Class] UnifiedAuthGuard, [Class] RolesGuard, [Class] @ApiBearerAuth, @Auth(AuthType.FIREBASE)",
      "dto_in": "@Param: string",
      "dto_out": "{ message: string; defaultAddressId: import(\"mongoose\").Types.ObjectId; }",
      "statuses": "201, 400, 401, 200, 404",
      "file": "src\\modules\\user\\user.controller.ts",
      "line": 189
    },
    {
      "module": "user",
      "controller": "UserController",
      "method": "PATCH",
      "path": "/users/address/:id",
      "auth_guard": "[Class] UnifiedAuthGuard, [Class] RolesGuard, [Class] @ApiBearerAuth, @Auth(AuthType.FIREBASE)",
      "dto_in": "@Param: string, @Body: Partial<AddAddressDto>",
      "dto_out": "unknown",
      "statuses": "",
      "file": "src\\modules\\user\\user.controller.ts",
      "line": 212
    },
    {
      "module": "user",
      "controller": "UserController",
      "method": "DELETE",
      "path": "/users/address/:id",
      "auth_guard": "[Class] UnifiedAuthGuard, [Class] RolesGuard, [Class] @ApiBearerAuth, @Auth(AuthType.FIREBASE)",
      "dto_in": "@Param: string",
      "dto_out": "{ message: string; addresses: Address[]; }",
      "statuses": "",
      "file": "src\\modules\\user\\user.controller.ts",
      "line": 224
    },
    {
      "module": "user",
      "controller": "UserController",
      "method": "PATCH",
      "path": "/users/default-address",
      "auth_guard": "[Class] UnifiedAuthGuard, [Class] RolesGuard, [Class] @ApiBearerAuth, @Auth(AuthType.FIREBASE)",
      "dto_in": "@Body: string",
      "dto_out": "{ message: string; defaultAddressId: import(\"mongoose\").Types.ObjectId; }",
      "statuses": "",
      "file": "src\\modules\\user\\user.controller.ts",
      "line": 235
    },
    {
      "module": "user",
      "controller": "UserController",
      "method": "DELETE",
      "path": "/users/deactivate",
      "auth_guard": "[Class] UnifiedAuthGuard, [Class] RolesGuard, [Class] @ApiBearerAuth, @Auth(AuthType.FIREBASE)",
      "dto_in": "",
      "dto_out": "{ message: string; }",
      "statuses": "200, 404, 401",
      "file": "src\\modules\\user\\user.controller.ts",
      "line": 246
    },
    {
      "module": "user",
      "controller": "UserController",
      "method": "GET",
      "path": "/users/search",
      "auth_guard": "[Class] UnifiedAuthGuard, [Class] RolesGuard, [Class] @ApiBearerAuth, @Auth(AuthType.JWT), @Roles('admin', 'superadmin')",
      "dto_in": "@Query: string, @Query: CursorPaginationDto",
      "dto_out": "import(\"C:/Users/Administrator/Desktop/bthwani_git/backend-nest/src/common/utils/pagination.helper\").PaginationResult<import(\"C:/Users/Administrator/Desktop/bthwani_git/backend-nest/src/modules/auth/entities/user.entity\").User>",
      "statuses": "200, 401, 403",
      "file": "src\\modules\\user\\user.controller.ts",
      "line": 261
    },
    {
      "module": "user",
      "controller": "UserController",
      "method": "POST",
      "path": "/users/pin/set",
      "auth_guard": "[Class] UnifiedAuthGuard, [Class] RolesGuard, [Class] @ApiBearerAuth, @Auth(AuthType.FIREBASE)",
      "dto_in": "@Body: SetPinDto",
      "dto_out": "{ success: boolean; message: string; }",
      "statuses": "201, 400, 401, 200",
      "file": "src\\modules\\user\\user.controller.ts",
      "line": 289
    },
    {
      "module": "user",
      "controller": "UserController",
      "method": "POST",
      "path": "/users/pin/verify",
      "auth_guard": "[Class] UnifiedAuthGuard, [Class] RolesGuard, [Class] @ApiBearerAuth, @Auth(AuthType.FIREBASE)",
      "dto_in": "@Body: VerifyPinDto",
      "dto_out": "{ success: boolean; message: string; }",
      "statuses": "201, 400, 401, 200",
      "file": "src\\modules\\user\\user.controller.ts",
      "line": 314
    },
    {
      "module": "user",
      "controller": "UserController",
      "method": "POST",
      "path": "/users/pin/change",
      "auth_guard": "[Class] UnifiedAuthGuard, [Class] RolesGuard, [Class] @ApiBearerAuth, @Auth(AuthType.FIREBASE)",
      "dto_in": "@Body: { oldPin: string; newPin: string; confirmNewPin: string }",
      "dto_out": "{ success: boolean; message: string; }",
      "statuses": "201, 400, 401, 200",
      "file": "src\\modules\\user\\user.controller.ts",
      "line": 339
    },
    {
      "module": "user",
      "controller": "UserController",
      "method": "GET",
      "path": "/users/pin/status",
      "auth_guard": "[Class] UnifiedAuthGuard, [Class] RolesGuard, [Class] @ApiBearerAuth, @Auth(AuthType.FIREBASE)",
      "dto_in": "",
      "dto_out": "{ hasPin: boolean; isLocked: boolean | undefined; lockedUntil: Date | null | undefined; attemptsRemaining: number; }",
      "statuses": "200, 401",
      "file": "src\\modules\\user\\user.controller.ts",
      "line": 372
    },
    {
      "module": "user",
      "controller": "UserController",
      "method": "DELETE",
      "path": "/users/pin/reset/:userId",
      "auth_guard": "[Class] UnifiedAuthGuard, [Class] RolesGuard, [Class] @ApiBearerAuth, @Auth(AuthType.JWT), @Roles('admin', 'superadmin')",
      "dto_in": "@Param: string",
      "dto_out": "{ success: boolean; message: string; }",
      "statuses": "200, 404, 401, 403",
      "file": "src\\modules\\user\\user.controller.ts",
      "line": 386
    },
    {
      "module": "utility",
      "controller": "EventsController",
      "method": "POST",
      "path": "/events",
      "auth_guard": "@Public",
      "dto_in": "@Body: any",
      "dto_out": "{ success: boolean; message: string; }",
      "statuses": "201",
      "file": "src\\modules\\utility\\events.controller.ts",
      "line": 12
    },
    {
      "module": "utility",
      "controller": "UtilityController",
      "method": "GET",
      "path": "/utility/options",
      "auth_guard": "",
      "dto_in": "@Query: string",
      "dto_out": "{ city: string; gas: { cylinderSizeLiters: number; pricePerCylinder: number; minQty: number; deliveryPolicy: \"flat\" | \"strategy\"; flatFee: number | null; } | null; water: { sizes: import(\"mongoose\").FlattenMaps<import(\"C:/Users/Administrator/Desktop/bthwani_git/backend-nest/src/modules/utility/entities/utility-pricing.entity\").WaterSize>[]; allowHalf: boolean; halfPolicy: string; deliveryPolicy: \"flat\" | \"strategy\"; flatFee: number | null; } | null; }",
      "statuses": "200, 401",
      "file": "src\\modules\\utility\\utility.controller.ts",
      "line": 37
    },
    {
      "module": "utility",
      "controller": "UtilityController",
      "method": "POST",
      "path": "/utility/calculate-price",
      "auth_guard": "",
      "dto_in": "@Body: CalculateUtilityPriceDto",
      "dto_out": "{ productPrice: number; deliveryFee: number; total: number; breakdown: { size?: string | undefined; half?: boolean | undefined; quantity?: number | undefined; serviceType: \"gas\" | \"water\"; city: string; }; }",
      "statuses": "201, 400, 401",
      "file": "src\\modules\\utility\\utility.controller.ts",
      "line": 45
    },
    {
      "module": "utility",
      "controller": "UtilityController",
      "method": "POST",
      "path": "/utility/pricing",
      "auth_guard": "@Auth(AuthType.JWT), @Roles('admin', 'superadmin')",
      "dto_in": "@Body: CreateUtilityPricingDto",
      "dto_out": "import(\"C:/Users/Administrator/Desktop/bthwani_git/backend-nest/src/modules/utility/entities/utility-pricing.entity\").UtilityPricing",
      "statuses": "201, 400, 401",
      "file": "src\\modules\\utility\\utility.controller.ts",
      "line": 56
    },
    {
      "module": "utility",
      "controller": "UtilityController",
      "method": "GET",
      "path": "/utility/pricing",
      "auth_guard": "@Auth(AuthType.JWT), @Roles('admin', 'superadmin')",
      "dto_in": "",
      "dto_out": "any[]",
      "statuses": "200, 401",
      "file": "src\\modules\\utility\\utility.controller.ts",
      "line": 68
    },
    {
      "module": "utility",
      "controller": "UtilityController",
      "method": "GET",
      "path": "/utility/pricing/:city",
      "auth_guard": "@Auth(AuthType.JWT), @Roles('admin', 'superadmin')",
      "dto_in": "@Param: string",
      "dto_out": "import(\"C:/Users/Administrator/Desktop/bthwani_git/backend-nest/src/modules/utility/entities/utility-pricing.entity\").UtilityPricing",
      "statuses": "200, 404, 401",
      "file": "src\\modules\\utility\\utility.controller.ts",
      "line": 79
    },
    {
      "module": "utility",
      "controller": "UtilityController",
      "method": "PATCH",
      "path": "/utility/pricing/:city",
      "auth_guard": "@Auth(AuthType.JWT), @Roles('admin', 'superadmin')",
      "dto_in": "@Param: string, @Body: UpdateUtilityPricingDto",
      "dto_out": "import(\"C:/Users/Administrator/Desktop/bthwani_git/backend-nest/src/modules/utility/entities/utility-pricing.entity\").UtilityPricing",
      "statuses": "200, 404, 400, 401",
      "file": "src\\modules\\utility\\utility.controller.ts",
      "line": 92
    },
    {
      "module": "utility",
      "controller": "UtilityController",
      "method": "DELETE",
      "path": "/utility/pricing/:city",
      "auth_guard": "@Auth(AuthType.JWT), @Roles('admin', 'superadmin')",
      "dto_in": "@Param: string",
      "dto_out": "{ message: string; }",
      "statuses": "200, 404, 401",
      "file": "src\\modules\\utility\\utility.controller.ts",
      "line": 109
    },
    {
      "module": "utility",
      "controller": "UtilityController",
      "method": "PATCH",
      "path": "/utility/options/gas",
      "auth_guard": "@Auth(AuthType.JWT), @Roles('admin', 'superadmin')",
      "dto_in": "@Body: any",
      "dto_out": "import(\"C:/Users/Administrator/Desktop/bthwani_git/backend-nest/src/modules/utility/entities/utility-pricing.entity\").UtilityPricing",
      "statuses": "200, 404, 400, 401",
      "file": "src\\modules\\utility\\utility.controller.ts",
      "line": 125
    },
    {
      "module": "utility",
      "controller": "UtilityController",
      "method": "PATCH",
      "path": "/utility/options/water",
      "auth_guard": "@Auth(AuthType.JWT), @Roles('admin', 'superadmin')",
      "dto_in": "@Body: any",
      "dto_out": "import(\"C:/Users/Administrator/Desktop/bthwani_git/backend-nest/src/modules/utility/entities/utility-pricing.entity\").UtilityPricing",
      "statuses": "200, 404, 400, 401",
      "file": "src\\modules\\utility\\utility.controller.ts",
      "line": 149
    },
    {
      "module": "utility",
      "controller": "UtilityController",
      "method": "GET",
      "path": "/utility/daily",
      "auth_guard": "@Auth(AuthType.JWT), @Roles('admin', 'superadmin')",
      "dto_in": "@Query: 'gas' | 'water', @Query: string",
      "dto_out": "any[]",
      "statuses": "200, 401",
      "file": "src\\modules\\utility\\utility.controller.ts",
      "line": 174
    },
    {
      "module": "utility",
      "controller": "UtilityController",
      "method": "POST",
      "path": "/utility/daily",
      "auth_guard": "@Auth(AuthType.JWT), @Roles('admin', 'superadmin')",
      "dto_in": "@Body: CreateDailyPriceDto",
      "dto_out": "import(\"C:/Users/Administrator/Desktop/bthwani_git/backend-nest/src/modules/utility/entities/daily-price.entity\").DailyPrice",
      "statuses": "201, 400, 401",
      "file": "src\\modules\\utility\\utility.controller.ts",
      "line": 188
    },
    {
      "module": "utility",
      "controller": "UtilityController",
      "method": "DELETE",
      "path": "/utility/daily/:id",
      "auth_guard": "@Auth(AuthType.JWT), @Roles('admin', 'superadmin')",
      "dto_in": "@Param: string",
      "dto_out": "{ message: string; }",
      "statuses": "200, 404, 401",
      "file": "src\\modules\\utility\\utility.controller.ts",
      "line": 200
    },
    {
      "module": "utility",
      "controller": "UtilityController",
      "method": "DELETE",
      "path": "/utility/daily",
      "auth_guard": "@Auth(AuthType.JWT), @Roles('admin', 'superadmin')",
      "dto_in": "@Query: 'gas' | 'water', @Query: string, @Query: string, @Query: string",
      "dto_out": "{ message: string; }",
      "statuses": "200, 404, 401",
      "file": "src\\modules\\utility\\utility.controller.ts",
      "line": 214
    },
    {
      "module": "utility",
      "controller": "UtilityController",
      "method": "POST",
      "path": "/utility/order",
      "auth_guard": "@Auth(AuthType.FIREBASE)",
      "dto_in": "@Body: CreateUtilityOrderDto",
      "dto_out": "",
      "statuses": "201, 400, 401",
      "file": "src\\modules\\utility\\utility.controller.ts",
      "line": 234
    },
    {
      "module": "utility",
      "controller": "UtilityController",
      "method": "GET",
      "path": "/utility/orders",
      "auth_guard": "@Auth(AuthType.FIREBASE)",
      "dto_in": "",
      "dto_out": "import(\"C:/Users/Administrator/Desktop/bthwani_git/backend-nest/src/modules/utility/entities/utility-order.entity\").UtilityOrder[]",
      "statuses": "200, 401",
      "file": "src\\modules\\utility\\utility.controller.ts",
      "line": 248
    },
    {
      "module": "utility",
      "controller": "UtilityController",
      "method": "GET",
      "path": "/utility/order/:id",
      "auth_guard": "@Auth(AuthType.FIREBASE)",
      "dto_in": "@Param: string",
      "dto_out": "import(\"C:/Users/Administrator/Desktop/bthwani_git/backend-nest/src/modules/utility/entities/utility-order.entity\").UtilityOrder",
      "statuses": "200, 404, 401",
      "file": "src\\modules\\utility\\utility.controller.ts",
      "line": 258
    },
    {
      "module": "utility",
      "controller": "UtilityController",
      "method": "PATCH",
      "path": "/utility/order/:id/status",
      "auth_guard": "@Auth(AuthType.JWT), @Roles('admin', 'superadmin', 'driver')",
      "dto_in": "@Param: string, @Body: { status: string }",
      "dto_out": "import(\"C:/Users/Administrator/Desktop/bthwani_git/backend-nest/src/modules/utility/entities/utility-order.entity\").UtilityOrder",
      "statuses": "200, 404, 400, 401",
      "file": "src\\modules\\utility\\utility.controller.ts",
      "line": 270
    },
    {
      "module": "utility",
      "controller": "UtilityController",
      "method": "PATCH",
      "path": "/utility/order/:id/cancel",
      "auth_guard": "@Auth(AuthType.FIREBASE)",
      "dto_in": "@Param: string, @Body: { reason: string }",
      "dto_out": "import(\"C:/Users/Administrator/Desktop/bthwani_git/backend-nest/src/modules/utility/entities/utility-order.entity\").UtilityOrder",
      "statuses": "200, 404, 400, 401",
      "file": "src\\modules\\utility\\utility.controller.ts",
      "line": 288
    },
    {
      "module": "utility",
      "controller": "UtilityController",
      "method": "POST",
      "path": "/utility/order/:id/rate",
      "auth_guard": "@Auth(AuthType.FIREBASE)",
      "dto_in": "@Param: string, @Body: { rating: number; review?: string }",
      "dto_out": "import(\"C:/Users/Administrator/Desktop/bthwani_git/backend-nest/src/modules/utility/entities/utility-order.entity\").UtilityOrder",
      "statuses": "201, 400, 401",
      "file": "src\\modules\\utility\\utility.controller.ts",
      "line": 304
    },
    {
      "module": "utility",
      "controller": "UtilityController",
      "method": "POST",
      "path": "/utility/order/:id/assign-driver",
      "auth_guard": "@Auth(AuthType.JWT), @Roles('admin', 'superadmin')",
      "dto_in": "@Param: string, @Body: { driverId: string }",
      "dto_out": "import(\"C:/Users/Administrator/Desktop/bthwani_git/backend-nest/src/modules/utility/entities/utility-order.entity\").UtilityOrder",
      "statuses": "201, 400, 401",
      "file": "src\\modules\\utility\\utility.controller.ts",
      "line": 319
    },
    {
      "module": "utility",
      "controller": "UtilityController",
      "method": "GET",
      "path": "/utility/admin/orders",
      "auth_guard": "@Auth(AuthType.JWT), @Roles('admin', 'superadmin')",
      "dto_in": "@Query: any",
      "dto_out": "import(\"C:/Users/Administrator/Desktop/bthwani_git/backend-nest/src/modules/utility/entities/utility-order.entity\").UtilityOrder[]",
      "statuses": "200, 401",
      "file": "src\\modules\\utility\\utility.controller.ts",
      "line": 335
    },
    {
      "module": "vendor",
      "controller": "VendorController",
      "method": "POST",
      "path": "/vendors",
      "auth_guard": "[Class] UnifiedAuthGuard, [Class] RolesGuard, [Class] @ApiBearerAuth, @Auth(AuthType.JWT), @Roles('admin', 'superadmin', 'marketer')",
      "dto_in": "@Body: CreateVendorDto",
      "dto_out": "Record<string, unknown>",
      "statuses": "201, 400, 401",
      "file": "src\\modules\\vendor\\vendor.controller.ts",
      "line": 32
    },
    {
      "module": "vendor",
      "controller": "VendorController",
      "method": "GET",
      "path": "/vendors",
      "auth_guard": "[Class] UnifiedAuthGuard, [Class] RolesGuard, [Class] @ApiBearerAuth, @Auth(AuthType.JWT), @Roles('admin', 'superadmin')",
      "dto_in": "@Query: CursorPaginationDto",
      "dto_out": "{ data: Record<string, unknown>[]; pagination: { nextCursor: string | null; hasMore: boolean; limit: number; }; }",
      "statuses": "200, 401",
      "file": "src\\modules\\vendor\\vendor.controller.ts",
      "line": 43
    },
    {
      "module": "vendor",
      "controller": "VendorController",
      "method": "GET",
      "path": "/vendors/me",
      "auth_guard": "[Class] UnifiedAuthGuard, [Class] RolesGuard, [Class] @ApiBearerAuth, @Auth(AuthType.VENDOR_JWT)",
      "dto_in": "",
      "dto_out": "Record<string, unknown>",
      "statuses": "200, 401",
      "file": "src\\modules\\vendor\\vendor.controller.ts",
      "line": 53
    },
    {
      "module": "vendor",
      "controller": "VendorController",
      "method": "GET",
      "path": "/vendors/:id",
      "auth_guard": "[Class] UnifiedAuthGuard, [Class] RolesGuard, [Class] @ApiBearerAuth, @Auth(AuthType.JWT)",
      "dto_in": "@Param: string",
      "dto_out": "Record<string, unknown>",
      "statuses": "200, 404, 401",
      "file": "src\\modules\\vendor\\vendor.controller.ts",
      "line": 62
    },
    {
      "module": "vendor",
      "controller": "VendorController",
      "method": "PATCH",
      "path": "/vendors/me",
      "auth_guard": "[Class] UnifiedAuthGuard, [Class] RolesGuard, [Class] @ApiBearerAuth, @Auth(AuthType.VENDOR_JWT)",
      "dto_in": "@Body: UpdateVendorDto",
      "dto_out": "Record<string, unknown>",
      "statuses": "200, 404, 400, 401",
      "file": "src\\modules\\vendor\\vendor.controller.ts",
      "line": 73
    },
    {
      "module": "vendor",
      "controller": "VendorController",
      "method": "PATCH",
      "path": "/vendors/:id",
      "auth_guard": "[Class] UnifiedAuthGuard, [Class] RolesGuard, [Class] @ApiBearerAuth, @Auth(AuthType.JWT), @Roles('admin', 'superadmin')",
      "dto_in": "@Param: string, @Body: UpdateVendorDto",
      "dto_out": "Record<string, unknown>",
      "statuses": "200, 404, 400, 401",
      "file": "src\\modules\\vendor\\vendor.controller.ts",
      "line": 87
    },
    {
      "module": "vendor",
      "controller": "VendorController",
      "method": "PATCH",
      "path": "/vendors/:id/status",
      "auth_guard": "[Class] UnifiedAuthGuard, [Class] RolesGuard, [Class] @ApiBearerAuth, @Auth(AuthType.JWT), @Roles('admin', 'superadmin')",
      "dto_in": "@Param: string, @Body: { isActive: boolean }",
      "dto_out": "Record<string, unknown>",
      "statuses": "200, 404, 400, 401",
      "file": "src\\modules\\vendor\\vendor.controller.ts",
      "line": 103
    },
    {
      "module": "vendor",
      "controller": "VendorController",
      "method": "POST",
      "path": "/vendors/:id/reset-password",
      "auth_guard": "[Class] UnifiedAuthGuard, [Class] RolesGuard, [Class] @ApiBearerAuth, @Auth(AuthType.JWT), @Roles('admin', 'superadmin')",
      "dto_in": "@Param: string, @Body: { password: string }",
      "dto_out": "{ message: string; }",
      "statuses": "201, 400, 401",
      "file": "src\\modules\\vendor\\vendor.controller.ts",
      "line": 119
    },
    {
      "module": "vendor",
      "controller": "VendorController",
      "method": "GET",
      "path": "/vendors/dashboard/overview",
      "auth_guard": "[Class] UnifiedAuthGuard, [Class] RolesGuard, [Class] @ApiBearerAuth, @Auth(AuthType.VENDOR_JWT)",
      "dto_in": "",
      "dto_out": "{ totalSales: number; totalOrders: number; averageOrderValue: number; todaySales: number; todayOrders: number; pendingOrders: number; }",
      "statuses": "200, 401",
      "file": "src\\modules\\vendor\\vendor.controller.ts",
      "line": 134
    },
    {
      "module": "vendor",
      "controller": "VendorController",
      "method": "GET",
      "path": "/vendors/account/statement",
      "auth_guard": "[Class] UnifiedAuthGuard, [Class] RolesGuard, [Class] @ApiBearerAuth, @Auth(AuthType.VENDOR_JWT)",
      "dto_in": "",
      "dto_out": "{ currentBalance: number; totalEarnings: number; totalWithdrawals: number; pendingAmount: number; transactions: never[]; }",
      "statuses": "200, 401",
      "file": "src\\modules\\vendor\\vendor.controller.ts",
      "line": 143
    },
    {
      "module": "vendor",
      "controller": "VendorController",
      "method": "GET",
      "path": "/vendors/settlements",
      "auth_guard": "[Class] UnifiedAuthGuard, [Class] RolesGuard, [Class] @ApiBearerAuth, @Auth(AuthType.VENDOR_JWT)",
      "dto_in": "",
      "dto_out": "never[]",
      "statuses": "200, 401",
      "file": "src\\modules\\vendor\\vendor.controller.ts",
      "line": 152
    },
    {
      "module": "vendor",
      "controller": "VendorController",
      "method": "POST",
      "path": "/vendors/settlements",
      "auth_guard": "[Class] UnifiedAuthGuard, [Class] RolesGuard, [Class] @ApiBearerAuth, @Auth(AuthType.VENDOR_JWT)",
      "dto_in": "@Body: { amount: number; bankAccount?: string }",
      "dto_out": "{ _id: string; amount: number; status: string; requestedDate: Date; vendorId: string; bankAccount: string | undefined; }",
      "statuses": "201, 400, 401",
      "file": "src\\modules\\vendor\\vendor.controller.ts",
      "line": 161
    },
    {
      "module": "vendor",
      "controller": "VendorController",
      "method": "GET",
      "path": "/vendors/sales",
      "auth_guard": "[Class] UnifiedAuthGuard, [Class] RolesGuard, [Class] @ApiBearerAuth, @Auth(AuthType.VENDOR_JWT)",
      "dto_in": "@Query: number",
      "dto_out": "never[]",
      "statuses": "200, 401",
      "file": "src\\modules\\vendor\\vendor.controller.ts",
      "line": 175
    },
    {
      "module": "vendor",
      "controller": "VendorController",
      "method": "POST",
      "path": "/vendors/account/delete-request",
      "auth_guard": "[Class] UnifiedAuthGuard, [Class] RolesGuard, [Class] @ApiBearerAuth, @Auth(AuthType.VENDOR_JWT)",
      "dto_in": "@Body: { reason?: string; exportData?: boolean }",
      "dto_out": "{ message: string; scheduledDeletionDate: string; }",
      "statuses": "201, 400, 401",
      "file": "src\\modules\\vendor\\vendor.controller.ts",
      "line": 187
    },
    {
      "module": "wallet",
      "controller": "V2WalletController",
      "method": "POST",
      "path": "/v2/wallet/coupons/apply",
      "auth_guard": "[Class] UnifiedAuthGuard, [Class] RolesGuard, [Class] @ApiBearerAuth, @Auth(AuthType.FIREBASE)",
      "dto_in": "@Body: string",
      "dto_out": "{ success: boolean; message: string; data: { code: string; discount: number; appliedAt: Date; }; }",
      "statuses": "200, 400, 401",
      "file": "src\\modules\\wallet\\v2-wallet.controller.ts",
      "line": 31
    },
    {
      "module": "wallet",
      "controller": "V2WalletController",
      "method": "GET",
      "path": "/v2/wallet/coupons/my",
      "auth_guard": "[Class] UnifiedAuthGuard, [Class] RolesGuard, [Class] @ApiBearerAuth, @Auth(AuthType.FIREBASE)",
      "dto_in": "",
      "dto_out": "{ success: boolean; data: never[]; message: string; }",
      "statuses": "200, 401",
      "file": "src\\modules\\wallet\\v2-wallet.controller.ts",
      "line": 53
    },
    {
      "module": "wallet",
      "controller": "V2WalletController",
      "method": "GET",
      "path": "/v2/wallet/coupons/history",
      "auth_guard": "[Class] UnifiedAuthGuard, [Class] RolesGuard, [Class] @ApiBearerAuth, @Auth(AuthType.FIREBASE)",
      "dto_in": "",
      "dto_out": "{ success: boolean; data: never[]; message: string; }",
      "statuses": "200, 401",
      "file": "src\\modules\\wallet\\v2-wallet.controller.ts",
      "line": 67
    },
    {
      "module": "wallet",
      "controller": "V2WalletController",
      "method": "GET",
      "path": "/v2/wallet/subscriptions/my",
      "auth_guard": "[Class] UnifiedAuthGuard, [Class] RolesGuard, [Class] @ApiBearerAuth, @Auth(AuthType.FIREBASE)",
      "dto_in": "",
      "dto_out": "{ success: boolean; data: never[]; message: string; }",
      "statuses": "200, 401",
      "file": "src\\modules\\wallet\\v2-wallet.controller.ts",
      "line": 81
    },
    {
      "module": "wallet",
      "controller": "WalletController",
      "method": "GET",
      "path": "/wallet/balance",
      "auth_guard": "[Class] UnifiedAuthGuard, [Class] RolesGuard, [Class] @ApiBearerAuth, @Auth(AuthType.FIREBASE)",
      "dto_in": "",
      "dto_out": "{ userId: unknown; balance: number; onHold: number; availableBalance: number; totalSpent: number; totalEarned: number; loyaltyPoints: number; savings: number; currency: string; lastUpdated: Date; }",
      "statuses": "200, 401",
      "file": "src\\modules\\wallet\\wallet.controller.ts",
      "line": 40
    },
    {
      "module": "wallet",
      "controller": "WalletController",
      "method": "GET",
      "path": "/wallet/transactions",
      "auth_guard": "[Class] UnifiedAuthGuard, [Class] RolesGuard, [Class] @ApiBearerAuth, @Auth(AuthType.FIREBASE)",
      "dto_in": "@Query: CursorPaginationDto",
      "dto_out": "import(\"C:/Users/Administrator/Desktop/bthwani_git/backend-nest/src/common/utils/pagination.helper\").PaginationResult<import(\"C:/Users/Administrator/Desktop/bthwani_git/backend-nest/src/modules/wallet/entities/wallet-transaction.entity\").WalletTransaction>",
      "statuses": "200, 401",
      "file": "src\\modules\\wallet\\wallet.controller.ts",
      "line": 55
    },
    {
      "module": "wallet",
      "controller": "WalletController",
      "method": "POST",
      "path": "/wallet/transaction",
      "auth_guard": "[Class] UnifiedAuthGuard, [Class] RolesGuard, [Class] @ApiBearerAuth, @Auth(AuthType.JWT), @Roles('admin', 'superadmin')",
      "dto_in": "@Body: CreateTransactionDto",
      "dto_out": "import(\"mongoose\").Document<unknown, {}, import(\"C:/Users/Administrator/Desktop/bthwani_git/backend-nest/src/modules/wallet/entities/wallet-transaction.entity\").WalletTransaction, {}, {}> & import(\"C:/Users/Administrator/Desktop/bthwani_git/backend-nest/src/modules/wallet/entities/wallet-transaction.entity\").WalletTransaction & Required<{ _id: unknown; }> & { __v: number; }",
      "statuses": "201, 400, 401, 403",
      "file": "src\\modules\\wallet\\wallet.controller.ts",
      "line": 74
    },
    {
      "module": "wallet",
      "controller": "WalletController",
      "method": "POST",
      "path": "/wallet/hold",
      "auth_guard": "[Class] UnifiedAuthGuard, [Class] RolesGuard, [Class] @ApiBearerAuth, @Auth(AuthType.JWT), @Roles('admin', 'superadmin')",
      "dto_in": "@Body: { userId: string; amount: number; orderId?: string }",
      "dto_out": "import(\"mongoose\").Document<unknown, {}, import(\"C:/Users/Administrator/Desktop/bthwani_git/backend-nest/src/modules/wallet/entities/wallet-transaction.entity\").WalletTransaction, {}, {}> & import(\"C:/Users/Administrator/Desktop/bthwani_git/backend-nest/src/modules/wallet/entities/wallet-transaction.entity\").WalletTransaction & Required<{ _id: unknown; }> & { __v: number; }",
      "statuses": "201, 400, 401, 200, 403",
      "file": "src\\modules\\wallet\\wallet.controller.ts",
      "line": 93
    },
    {
      "module": "wallet",
      "controller": "WalletController",
      "method": "POST",
      "path": "/wallet/release",
      "auth_guard": "[Class] UnifiedAuthGuard, [Class] RolesGuard, [Class] @ApiBearerAuth, @Auth(AuthType.JWT), @Roles('admin', 'superadmin')",
      "dto_in": "@Body: { userId: string; amount: number; orderId?: string }",
      "dto_out": "{ success: boolean; }",
      "statuses": "201, 400, 401, 200, 404, 403",
      "file": "src\\modules\\wallet\\wallet.controller.ts",
      "line": 123
    },
    {
      "module": "wallet",
      "controller": "WalletController",
      "method": "POST",
      "path": "/wallet/refund",
      "auth_guard": "[Class] UnifiedAuthGuard, [Class] RolesGuard, [Class] @ApiBearerAuth, @Auth(AuthType.JWT), @Roles('admin', 'superadmin')",
      "dto_in": "@Body: { userId: string; amount: number; orderId?: string }",
      "dto_out": "{ success: boolean; }",
      "statuses": "201, 400, 401, 200, 404, 403",
      "file": "src\\modules\\wallet\\wallet.controller.ts",
      "line": 157
    },
    {
      "module": "wallet",
      "controller": "WalletController",
      "method": "POST",
      "path": "/wallet/topup/kuraimi",
      "auth_guard": "[Class] UnifiedAuthGuard, [Class] RolesGuard, [Class] @ApiBearerAuth, @Auth(AuthType.FIREBASE)",
      "dto_in": "@Body: {\r\n      amount: number;\r\n      SCustID: string;\r\n      PINPASS: string;\r\n    }",
      "dto_out": "{ success: boolean; transaction: import(\"mongoose\").Document<unknown, {}, import(\"C:/Users/Administrator/Desktop/bthwani_git/backend-nest/src/modules/wallet/entities/wallet-transaction.entity\").WalletTransaction, {}, {}> & import(\"C:/Users/Administrator/Desktop/bthwani_git/backend-nest/src/modules/wallet/entities/wallet-transaction.entity\").WalletTransaction & Required<{ _id: unknown; }> & { __v: number; }; newBalance: number; }",
      "statuses": "201, 400, 401, 200",
      "file": "src\\modules\\wallet\\wallet.controller.ts",
      "line": 194
    },
    {
      "module": "wallet",
      "controller": "WalletController",
      "method": "POST",
      "path": "/wallet/topup/verify",
      "auth_guard": "[Class] UnifiedAuthGuard, [Class] RolesGuard, [Class] @ApiBearerAuth, @Auth(AuthType.FIREBASE)",
      "dto_in": "@Body: { transactionId: string }",
      "dto_out": "{ verified: boolean; transaction: import(\"mongoose\").Document<unknown, {}, import(\"C:/Users/Administrator/Desktop/bthwani_git/backend-nest/src/modules/wallet/entities/wallet-transaction.entity\").WalletTransaction, {}, {}> & import(\"C:/Users/Administrator/Desktop/bthwani_git/backend-nest/src/modules/wallet/entities/wallet-transaction.entity\").WalletTransaction & Required<{ _id: unknown; }> & { __v: number; }; }",
      "statuses": "201, 400, 401, 200, 404",
      "file": "src\\modules\\wallet\\wallet.controller.ts",
      "line": 234
    },
    {
      "module": "wallet",
      "controller": "WalletController",
      "method": "GET",
      "path": "/wallet/topup/history",
      "auth_guard": "[Class] UnifiedAuthGuard, [Class] RolesGuard, [Class] @ApiBearerAuth, @Auth(AuthType.FIREBASE)",
      "dto_in": "@Query: CursorPaginationDto",
      "dto_out": "import(\"C:/Users/Administrator/Desktop/bthwani_git/backend-nest/src/common/utils/pagination.helper\").PaginationResult<import(\"C:/Users/Administrator/Desktop/bthwani_git/backend-nest/src/modules/wallet/entities/wallet-transaction.entity\").WalletTransaction>",
      "statuses": "200, 401",
      "file": "src\\modules\\wallet\\wallet.controller.ts",
      "line": 262
    },
    {
      "module": "wallet",
      "controller": "WalletController",
      "method": "GET",
      "path": "/wallet/topup/methods",
      "auth_guard": "[Class] UnifiedAuthGuard, [Class] RolesGuard, [Class] @ApiBearerAuth, @Auth(AuthType.FIREBASE)",
      "dto_in": "",
      "dto_out": "{ methods: { id: string; name: string; enabled: boolean; }[]; }",
      "statuses": "200, 401",
      "file": "src\\modules\\wallet\\wallet.controller.ts",
      "line": 281
    },
    {
      "module": "wallet",
      "controller": "WalletController",
      "method": "POST",
      "path": "/wallet/withdraw/request",
      "auth_guard": "[Class] UnifiedAuthGuard, [Class] RolesGuard, [Class] @ApiBearerAuth, @Auth(AuthType.FIREBASE)",
      "dto_in": "@Body: {\r\n      amount: number;\r\n      method: string;\r\n      accountInfo: Record<string, unknown>;\r\n    }",
      "dto_out": "{ success: boolean; message: string; requestId: string; }",
      "statuses": "201, 400, 401",
      "file": "src\\modules\\wallet\\wallet.controller.ts",
      "line": 297
    },
    {
      "module": "wallet",
      "controller": "WalletController",
      "method": "GET",
      "path": "/wallet/withdraw/my",
      "auth_guard": "[Class] UnifiedAuthGuard, [Class] RolesGuard, [Class] @ApiBearerAuth, @Auth(AuthType.FIREBASE)",
      "dto_in": "@Query: CursorPaginationDto",
      "dto_out": "{ data: never[]; pagination: { nextCursor: null; hasMore: boolean; limit: number; }; }",
      "statuses": "200, 401",
      "file": "src\\modules\\wallet\\wallet.controller.ts",
      "line": 345
    },
    {
      "module": "wallet",
      "controller": "WalletController",
      "method": "PATCH",
      "path": "/wallet/withdraw/:id/cancel",
      "auth_guard": "[Class] UnifiedAuthGuard, [Class] RolesGuard, [Class] @ApiBearerAuth, @Auth(AuthType.FIREBASE)",
      "dto_in": "@Param: string",
      "dto_out": "{ success: boolean; message: string; }",
      "statuses": "200, 404, 400, 401",
      "file": "src\\modules\\wallet\\wallet.controller.ts",
      "line": 364
    },
    {
      "module": "wallet",
      "controller": "WalletController",
      "method": "GET",
      "path": "/wallet/withdraw/methods",
      "auth_guard": "[Class] UnifiedAuthGuard, [Class] RolesGuard, [Class] @ApiBearerAuth, @Auth(AuthType.FIREBASE)",
      "dto_in": "",
      "dto_out": "{ methods: { id: string; name: string; minAmount: number; maxAmount: number; }[]; }",
      "statuses": "200, 401",
      "file": "src\\modules\\wallet\\wallet.controller.ts",
      "line": 386
    },
    {
      "module": "wallet",
      "controller": "WalletController",
      "method": "POST",
      "path": "/wallet/pay-bill",
      "auth_guard": "[Class] UnifiedAuthGuard, [Class] RolesGuard, [Class] @ApiBearerAuth, @Auth(AuthType.FIREBASE)",
      "dto_in": "@Body: {\r\n      billType: string;\r\n      billNumber: string;\r\n      amount: number;\r\n    }",
      "dto_out": "{ success: boolean; transaction: import(\"mongoose\").Document<unknown, {}, import(\"C:/Users/Administrator/Desktop/bthwani_git/backend-nest/src/modules/wallet/entities/wallet-transaction.entity\").WalletTransaction, {}, {}> & import(\"C:/Users/Administrator/Desktop/bthwani_git/backend-nest/src/modules/wallet/entities/wallet-transaction.entity\").WalletTransaction & Required<{ _id: unknown; }> & { __v: number; }; newBalance: number; }",
      "statuses": "201, 400, 401, 200",
      "file": "src\\modules\\wallet\\wallet.controller.ts",
      "line": 408
    },
    {
      "module": "wallet",
      "controller": "WalletController",
      "method": "GET",
      "path": "/wallet/bills",
      "auth_guard": "[Class] UnifiedAuthGuard, [Class] RolesGuard, [Class] @ApiBearerAuth, @Auth(AuthType.FIREBASE)",
      "dto_in": "@Query: CursorPaginationDto",
      "dto_out": "{ data: (import(\"mongoose\").Document<unknown, {}, import(\"C:/Users/Administrator/Desktop/bthwani_git/backend-nest/src/modules/wallet/entities/wallet-transaction.entity\").WalletTransaction, {}, {}> & import(\"C:/Users/Administrator/Desktop/bthwani_git/backend-nest/src/modules/wallet/entities/wallet-transaction.entity\").WalletTransaction & Required<{ _id: unknown; }> & { __v: number; })[]; pagination: { nextCursor: string | null; hasMore: boolean; limit: number; }; }",
      "statuses": "200, 401",
      "file": "src\\modules\\wallet\\wallet.controller.ts",
      "line": 453
    },
    {
      "module": "wallet",
      "controller": "WalletController",
      "method": "POST",
      "path": "/wallet/transfer",
      "auth_guard": "[Class] UnifiedAuthGuard, [Class] RolesGuard, [Class] @ApiBearerAuth, @Auth(AuthType.FIREBASE)",
      "dto_in": "@Body: {\r\n      recipientPhone: string;\r\n      amount: number;\r\n      notes?: string;\r\n    }",
      "dto_out": "{ success: boolean; message: string; }",
      "statuses": "201, 400, 401",
      "file": "src\\modules\\wallet\\wallet.controller.ts",
      "line": 474
    },
    {
      "module": "wallet",
      "controller": "WalletController",
      "method": "GET",
      "path": "/wallet/transfers",
      "auth_guard": "[Class] UnifiedAuthGuard, [Class] RolesGuard, [Class] @ApiBearerAuth, @Auth(AuthType.FIREBASE)",
      "dto_in": "@Query: CursorPaginationDto",
      "dto_out": "{ data: (import(\"mongoose\").Document<unknown, {}, import(\"C:/Users/Administrator/Desktop/bthwani_git/backend-nest/src/modules/wallet/entities/wallet-transaction.entity\").WalletTransaction, {}, {}> & import(\"C:/Users/Administrator/Desktop/bthwani_git/backend-nest/src/modules/wallet/entities/wallet-transaction.entity\").WalletTransaction & Required<{ _id: unknown; }> & { __v: number; })[]; pagination: { nextCursor: string | null; hasMore: boolean; limit: number; }; }",
      "statuses": "200, 401",
      "file": "src\\modules\\wallet\\wallet.controller.ts",
      "line": 498
    },
    {
      "module": "wallet",
      "controller": "WalletController",
      "method": "GET",
      "path": "/wallet/transaction/:id",
      "auth_guard": "[Class] UnifiedAuthGuard, [Class] RolesGuard, [Class] @ApiBearerAuth, @Auth(AuthType.FIREBASE)",
      "dto_in": "@Param: string",
      "dto_out": "{ transaction: import(\"mongoose\").Document<unknown, {}, import(\"C:/Users/Administrator/Desktop/bthwani_git/backend-nest/src/modules/wallet/entities/wallet-transaction.entity\").WalletTransaction, {}, {}> & import(\"C:/Users/Administrator/Desktop/bthwani_git/backend-nest/src/modules/wallet/entities/wallet-transaction.entity\").WalletTransaction & Required<{ _id: unknown; }> & { __v: number; }; }",
      "statuses": "200, 404, 401",
      "file": "src\\modules\\wallet\\wallet.controller.ts",
      "line": 512
    },
    {
      "module": "wallet",
      "controller": "WalletController",
      "method": "POST",
      "path": "/wallet/refund/request",
      "auth_guard": "[Class] UnifiedAuthGuard, [Class] RolesGuard, [Class] @ApiBearerAuth, @Auth(AuthType.FIREBASE)",
      "dto_in": "@Body: { transactionId: string; reason: string }",
      "dto_out": "{ success: boolean; message: string; }",
      "statuses": "201, 400, 401",
      "file": "src\\modules\\wallet\\wallet.controller.ts",
      "line": 526
    }
  ]
}