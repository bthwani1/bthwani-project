{
  "openapi": "3.0.0",
  "paths": {
    "/": {
      "get": {
        "operationId": "AppController_getHello",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "App"
        ]
      }
    },
    "/auth/firebase/login": {
      "post": {
        "operationId": "AuthController_loginWithFirebase",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FirebaseAuthDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "summary": "تسجيل الدخول عبر Firebase",
        "tags": [
          "Auth"
        ]
      }
    },
    "/auth/consent": {
      "post": {
        "operationId": "AuthController_grantConsent",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ConsentDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "تسجيل موافقة المستخدم",
        "tags": [
          "Auth"
        ]
      }
    },
    "/auth/consent/bulk": {
      "post": {
        "operationId": "AuthController_grantBulkConsents",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BulkConsentDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "تسجيل موافقات متعددة دفعة واحدة",
        "tags": [
          "Auth"
        ]
      }
    },
    "/auth/consent/{type}": {
      "delete": {
        "operationId": "AuthController_withdrawConsent",
        "parameters": [
          {
            "name": "type",
            "required": true,
            "in": "path",
            "description": "نوع الموافقة",
            "schema": {
              "enum": [
                "privacy_policy",
                "terms_of_service",
                "marketing",
                "data_processing"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Deleted"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "سحب الموافقة",
        "tags": [
          "Auth"
        ]
      }
    },
    "/auth/consent/history": {
      "get": {
        "operationId": "AuthController_getConsentHistory",
        "parameters": [
          {
            "name": "type",
            "required": false,
            "in": "query",
            "schema": {
              "enum": [
                "privacy_policy",
                "terms_of_service",
                "marketing",
                "data_processing"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "سجل موافقات المستخدم",
        "tags": [
          "Auth"
        ]
      }
    },
    "/auth/consent/summary": {
      "get": {
        "operationId": "AuthController_getConsentSummary",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "ملخص موافقات المستخدم",
        "tags": [
          "Auth"
        ]
      }
    },
    "/auth/consent/check/{type}": {
      "get": {
        "operationId": "AuthController_checkConsent",
        "parameters": [
          {
            "name": "type",
            "required": true,
            "in": "path",
            "description": "نوع الموافقة",
            "schema": {
              "enum": [
                "privacy_policy",
                "terms_of_service",
                "marketing",
                "data_processing"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "التحقق من موافقة محددة",
        "tags": [
          "Auth"
        ]
      }
    },
    "/auth/forgot": {
      "post": {
        "operationId": "AuthController_forgotPassword",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ForgotPasswordDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Reset code sent"
          },
          "400": {
            "description": "Bad request"
          },
          "404": {
            "description": "User not found"
          }
        },
        "summary": "طلب إعادة تعيين كلمة المرور",
        "tags": [
          "Auth"
        ]
      }
    },
    "/auth/reset/verify": {
      "post": {
        "operationId": "AuthController_verifyResetCode",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VerifyResetCodeDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Code verified"
          },
          "400": {
            "description": "Invalid code"
          },
          "404": {
            "description": "User not found"
          }
        },
        "summary": "التحقق من رمز إعادة التعيين",
        "tags": [
          "Auth"
        ]
      }
    },
    "/auth/reset": {
      "post": {
        "operationId": "AuthController_resetPassword",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ResetPasswordDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Password reset successfully"
          },
          "400": {
            "description": "Invalid code or password"
          },
          "404": {
            "description": "User not found"
          }
        },
        "summary": "إعادة تعيين كلمة المرور",
        "tags": [
          "Auth"
        ]
      }
    },
    "/auth/verify-otp": {
      "post": {
        "operationId": "AuthController_verifyOtp",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VerifyOtpDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OTP verified"
          },
          "400": {
            "description": "Invalid OTP"
          },
          "404": {
            "description": "User not found"
          }
        },
        "summary": "التحقق من رمز OTP",
        "tags": [
          "Auth"
        ]
      }
    },
    "/wallet/balance": {
      "get": {
        "description": "الحصول على الرصيد الحالي والرصيد المحجوز",
        "operationId": "WalletController_getBalance",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "جلب رصيد المحفظة",
        "tags": [
          "Wallet"
        ]
      }
    },
    "/wallet/transactions": {
      "get": {
        "description": "الحصول على جميع معاملات المحفظة مع pagination",
        "operationId": "WalletController_getTransactions",
        "parameters": [
          {
            "name": "cursor",
            "required": false,
            "in": "query",
            "description": "Cursor للصفحة التالية",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "description": "عدد العناصر",
            "schema": {
              "default": 20,
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "جلب سجل المعاملات",
        "tags": [
          "Wallet"
        ]
      }
    },
    "/wallet/transaction": {
      "post": {
        "description": "إنشاء معاملة credit/debit يدوياً (admin only)",
        "operationId": "WalletController_createTransaction",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateTransactionDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "ليس لديك صلاحية"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "إنشاء معاملة جديدة (للإدارة)",
        "tags": [
          "Wallet"
        ]
      }
    },
    "/wallet/hold": {
      "post": {
        "description": "حجز مبلغ من المحفظة لضمان الدفع",
        "operationId": "WalletController_holdFunds",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userId": {
                    "type": "string"
                  },
                  "amount": {
                    "type": "number"
                  },
                  "orderId": {
                    "type": "string"
                  }
                },
                "required": [
                  "userId",
                  "amount"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "تم حجز المبلغ بنجاح"
          },
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "ليس لديك صلاحية"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "حجز مبلغ (Escrow)",
        "tags": [
          "Wallet"
        ]
      }
    },
    "/wallet/release": {
      "post": {
        "description": "إطلاق المبلغ المحجوز بعد تأكيد الطلب",
        "operationId": "WalletController_releaseFunds",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userId": {
                    "type": "string"
                  },
                  "amount": {
                    "type": "number"
                  },
                  "orderId": {
                    "type": "string"
                  }
                },
                "required": [
                  "userId",
                  "amount"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "تم إطلاق المبلغ بنجاح"
          },
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "ليس لديك صلاحية"
          },
          "404": {
            "description": "المبلغ المحجوز غير موجود"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "إطلاق المبلغ المحجوز",
        "tags": [
          "Wallet"
        ]
      }
    },
    "/wallet/refund": {
      "post": {
        "description": "إرجاع المبلغ إلى المحفظة عند إلغاء الطلب",
        "operationId": "WalletController_refundFunds",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userId": {
                    "type": "string"
                  },
                  "amount": {
                    "type": "number"
                  },
                  "orderId": {
                    "type": "string"
                  },
                  "reason": {
                    "type": "string"
                  }
                },
                "required": [
                  "userId",
                  "amount",
                  "reason"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "تم الإرجاع بنجاح"
          },
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "ليس لديك صلاحية"
          },
          "404": {
            "description": "المعاملة غير موجودة"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "إرجاع المبلغ المحجوز",
        "tags": [
          "Wallet"
        ]
      }
    },
    "/wallet/topup/kuraimi": {
      "post": {
        "description": "شحن المحفظة باستخدام بطاقة كريمي",
        "operationId": "WalletController_topupViaKuraimi",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "amount": {
                    "type": "number",
                    "description": "المبلغ"
                  },
                  "SCustID": {
                    "type": "string",
                    "description": "رقم بطاقة كريمي"
                  },
                  "PINPASS": {
                    "type": "string",
                    "description": "الرمز السري"
                  }
                },
                "required": [
                  "amount",
                  "SCustID",
                  "PINPASS"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "تم الشحن بنجاح"
          },
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "شحن المحفظة عبر كريمي",
        "tags": [
          "Wallet"
        ]
      }
    },
    "/wallet/topup/verify": {
      "post": {
        "description": "التحقق من نجاح عملية الشحن عبر معرّف المعاملة",
        "operationId": "WalletController_verifyTopup",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "transactionId": {
                    "type": "string",
                    "description": "معرّف المعاملة"
                  }
                },
                "required": [
                  "transactionId"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "المعاملة ناجحة"
          },
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "المعاملة غير موجودة"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "التحقق من عملية الشحن",
        "tags": [
          "Wallet"
        ]
      }
    },
    "/wallet/topup/history": {
      "get": {
        "description": "الحصول على سجل جميع عمليات الشحن السابقة",
        "operationId": "WalletController_getTopupHistory",
        "parameters": [
          {
            "name": "cursor",
            "required": false,
            "in": "query",
            "description": "Cursor للصفحة التالية",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "description": "عدد العناصر",
            "schema": {
              "default": 20,
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "سجل عمليات الشحن",
        "tags": [
          "Wallet"
        ]
      }
    },
    "/wallet/topup/methods": {
      "get": {
        "description": "الحصول على قائمة طرق الشحن المدعومة (كريمي، بطاقة، وكيل)",
        "operationId": "WalletController_getTopupMethods",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "طرق الشحن المتاحة",
        "tags": [
          "Wallet"
        ]
      }
    },
    "/wallet/withdraw/request": {
      "post": {
        "description": "إنشاء طلب سحب مبلغ إلى الحساب البنكي",
        "operationId": "WalletController_requestWithdrawal",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "amount": {
                    "type": "number",
                    "description": "المبلغ المراد سحبه"
                  },
                  "method": {
                    "type": "string",
                    "enum": [
                      "bank_transfer",
                      "agent"
                    ],
                    "description": "طريقة السحب"
                  },
                  "accountInfo": {
                    "type": "object",
                    "description": "بيانات الحساب البنكي"
                  }
                },
                "required": [
                  "amount",
                  "method",
                  "accountInfo"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "طلب سحب من المحفظة",
        "tags": [
          "Wallet"
        ]
      }
    },
    "/wallet/withdraw/my": {
      "get": {
        "description": "الحصول على قائمة طلبات السحب مع حالاتها",
        "operationId": "WalletController_getMyWithdrawals",
        "parameters": [
          {
            "name": "cursor",
            "required": false,
            "in": "query",
            "description": "Cursor للصفحة التالية",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "description": "عدد العناصر",
            "schema": {
              "default": 20,
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "طلبات السحب الخاصة بي",
        "tags": [
          "Wallet"
        ]
      }
    },
    "/wallet/withdraw/{id}/cancel": {
      "patch": {
        "description": "إلغاء طلب سحب قيد المعالجة",
        "operationId": "WalletController_cancelWithdrawal",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "معرّف طلب السحب",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Updated"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "إلغاء طلب سحب",
        "tags": [
          "Wallet"
        ]
      }
    },
    "/wallet/withdraw/methods": {
      "get": {
        "description": "الحصول على قائمة طرق السحب المدعومة",
        "operationId": "WalletController_getWithdrawMethods",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "طرق السحب المتاحة",
        "tags": [
          "Wallet"
        ]
      }
    },
    "/wallet/pay-bill": {
      "post": {
        "description": "دفع الفواتير من المحفظة",
        "operationId": "WalletController_payBill",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "billType": {
                    "type": "string",
                    "enum": [
                      "electricity",
                      "water",
                      "internet"
                    ]
                  },
                  "billNumber": {
                    "type": "string"
                  },
                  "amount": {
                    "type": "number"
                  }
                },
                "required": [
                  "billType",
                  "billNumber",
                  "amount"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "تم دفع الفاتورة بنجاح"
          },
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "دفع فاتورة (كهرباء، ماء، إنترنت)",
        "tags": [
          "Wallet"
        ]
      }
    },
    "/wallet/bills": {
      "get": {
        "description": "الحصول على سجل جميع الفواتير المدفوعة",
        "operationId": "WalletController_getBills",
        "parameters": [
          {
            "name": "cursor",
            "required": false,
            "in": "query",
            "description": "Cursor للصفحة التالية",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "description": "عدد العناصر",
            "schema": {
              "default": 20,
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "سجل الفواتير المدفوعة",
        "tags": [
          "Wallet"
        ]
      }
    },
    "/wallet/transfer": {
      "post": {
        "operationId": "WalletController_transferFunds",
        "parameters": [],
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "تحويل رصيد",
        "tags": [
          "Wallet"
        ]
      }
    },
    "/wallet/transfers": {
      "get": {
        "operationId": "WalletController_getTransfers",
        "parameters": [
          {
            "name": "cursor",
            "required": false,
            "in": "query",
            "description": "Cursor للصفحة التالية",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "description": "عدد العناصر",
            "schema": {
              "default": 20,
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "سجل التحويلات",
        "tags": [
          "Wallet"
        ]
      }
    },
    "/wallet/transaction/{id}": {
      "get": {
        "operationId": "WalletController_getTransactionDetails",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "تفاصيل معاملة",
        "tags": [
          "Wallet"
        ]
      }
    },
    "/wallet/refund/request": {
      "post": {
        "operationId": "WalletController_requestRefund",
        "parameters": [],
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "طلب استرجاع",
        "tags": [
          "Wallet"
        ]
      }
    },
    "/v2/wallet/coupons/apply": {
      "post": {
        "operationId": "V2WalletController_applyCoupon",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Coupon applied successfully"
          },
          "400": {
            "description": "Invalid coupon"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "تطبيق قسيمة",
        "tags": [
          "Wallet V2"
        ]
      }
    },
    "/v2/wallet/coupons/my": {
      "get": {
        "operationId": "V2WalletController_getMyCoupons",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "قسائمي",
        "tags": [
          "Wallet V2"
        ]
      }
    },
    "/v2/wallet/coupons/history": {
      "get": {
        "operationId": "V2WalletController_getCouponsHistory",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "سجل القسائم",
        "tags": [
          "Wallet V2"
        ]
      }
    },
    "/v2/wallet/subscriptions/my": {
      "get": {
        "operationId": "V2WalletController_getMySubscriptions",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "اشتراكاتي",
        "tags": [
          "Wallet V2"
        ]
      }
    },
    "/delivery/order": {
      "get": {
        "description": "جلب جميع طلبات المستخدم الحالي",
        "operationId": "OrderController_getMyOrdersShort",
        "parameters": [
          {
            "name": "cursor",
            "required": false,
            "in": "query",
            "description": "Cursor للصفحة التالية",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "description": "عدد العناصر",
            "schema": {
              "default": 20,
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "جلب طلبات المستخدم الحالي",
        "tags": [
          "Order"
        ]
      },
      "post": {
        "description": "إنشاء طلب جديد مع العناصر والعنوان",
        "operationId": "OrderController_createOrder",
        "parameters": [],
        "requestBody": {
          "required": true,
          "description": "بيانات الطلب",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateOrderDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "إنشاء طلب جديد",
        "tags": [
          "Order"
        ]
      }
    },
    "/delivery/order/user/{userId}": {
      "get": {
        "description": "جلب جميع طلبات مستخدم معين",
        "operationId": "OrderController_getUserOrders",
        "parameters": [
          {
            "name": "userId",
            "required": true,
            "in": "path",
            "description": "معرّف المستخدم",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "cursor",
            "required": false,
            "in": "query",
            "description": "Cursor للصفحة التالية",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "description": "عدد العناصر",
            "schema": {
              "default": 20,
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "جلب طلبات مستخدم محدد",
        "tags": [
          "Order"
        ]
      }
    },
    "/delivery/order/my-orders": {
      "get": {
        "description": "جلب جميع طلبات المستخدم الحالي مع pagination",
        "operationId": "OrderController_getMyOrders",
        "parameters": [
          {
            "name": "cursor",
            "required": false,
            "in": "query",
            "description": "Cursor للصفحة التالية",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "description": "عدد النتائج (default: 20)",
            "schema": {
              "default": 20,
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "جلب طلبات المستخدم الحالي",
        "tags": [
          "Order"
        ]
      }
    },
    "/delivery/order/{id}": {
      "get": {
        "operationId": "OrderController_getOrder",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "معرّف الطلب",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "تفاصيل الطلب الكاملة"
          },
          "401": {
            "description": "غير مصرح"
          },
          "404": {
            "description": "الطلب غير موجود"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "تفاصيل الطلب",
        "tags": [
          "Order"
        ]
      }
    },
    "/delivery/order/{id}/assign-driver": {
      "post": {
        "description": "تعيين سائق متاح للطلب (Admin/Dispatcher)",
        "operationId": "OrderController_assignDriver",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "معرّف الطلب",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "driverId": {
                    "type": "string",
                    "description": "معرّف السائق"
                  }
                },
                "required": [
                  "driverId"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "تم تعيين السائق بنجاح"
          },
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "الطلب أو السائق غير موجود"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "تعيين سائق للطلب",
        "tags": [
          "Order"
        ]
      }
    },
    "/delivery/order/{id}/notes": {
      "post": {
        "description": "إضافة ملاحظة عامة أو خاصة للطلب",
        "operationId": "OrderController_addNote",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "معرّف الطلب",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "note": {
                    "type": "string",
                    "description": "نص الملاحظة"
                  }
                },
                "required": [
                  "note"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "تمت إضافة الملاحظة بنجاح"
          },
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "الطلب غير موجود"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "إضافة ملاحظة للطلب",
        "tags": [
          "Order"
        ]
      },
      "get": {
        "operationId": "OrderController_getNotes",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "جلب الملاحظات",
        "tags": [
          "Order"
        ]
      }
    },
    "/delivery/order/vendor/orders": {
      "get": {
        "operationId": "OrderController_getVendorOrders",
        "parameters": [
          {
            "name": "cursor",
            "required": false,
            "in": "query",
            "description": "Cursor للصفحة التالية",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "description": "عدد العناصر",
            "schema": {
              "default": 20,
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "جلب طلبات التاجر",
        "tags": [
          "Order"
        ]
      }
    },
    "/delivery/order/{id}/vendor-accept": {
      "post": {
        "description": "قبول الطلب والبدء في التحضير",
        "operationId": "OrderController_vendorAcceptOrder",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "معرّف الطلب",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "تم قبول الطلب بنجاح"
          },
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "ليس لديك صلاحية"
          },
          "404": {
            "description": "الطلب غير موجود"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "قبول الطلب من قبل التاجر",
        "tags": [
          "Order"
        ]
      }
    },
    "/delivery/order/{id}/vendor-cancel": {
      "post": {
        "description": "إلغاء الطلب مع تحديد السبب",
        "operationId": "OrderController_vendorCancelOrder",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "معرّف الطلب",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "reason": {
                    "type": "string",
                    "description": "سبب الإلغاء"
                  }
                },
                "required": [
                  "reason"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "تم إلغاء الطلب بنجاح"
          },
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "ليس لديك صلاحية"
          },
          "404": {
            "description": "الطلب غير موجود"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "إلغاء الطلب من قبل التاجر",
        "tags": [
          "Order"
        ]
      }
    },
    "/delivery/order/{id}/pod": {
      "post": {
        "description": "إضافة صورة وتوقيع كإثبات على التسليم",
        "operationId": "OrderController_setProofOfDelivery",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "معرّف الطلب",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "imageUrl": {
                    "type": "string",
                    "description": "رابط صورة الإثبات"
                  },
                  "signature": {
                    "type": "string",
                    "description": "توقيع العميل (اختياري)"
                  },
                  "notes": {
                    "type": "string",
                    "description": "ملاحظات إضافية (اختياري)"
                  }
                },
                "required": [
                  "imageUrl"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "تم إضافة إثبات التسليم بنجاح"
          },
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "ليس لديك صلاحية"
          },
          "404": {
            "description": "الطلب غير موجود"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "إضافة إثبات التسليم (POD)",
        "tags": [
          "Order"
        ]
      },
      "get": {
        "operationId": "OrderController_getProofOfDelivery",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "جلب إثبات التسليم",
        "tags": [
          "Order"
        ]
      }
    },
    "/delivery/order/{id}/cancel": {
      "post": {
        "description": "إلغاء الطلب من قبل العميل مع ذكر السبب",
        "operationId": "OrderController_cancelOrder",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "معرّف الطلب",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "reason": {
                    "type": "string",
                    "description": "سبب الإلغاء"
                  }
                },
                "required": [
                  "reason"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "تم إلغاء الطلب بنجاح"
          },
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "الطلب غير موجود"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "إلغاء الطلب",
        "tags": [
          "Order"
        ]
      }
    },
    "/delivery/order/{id}/return": {
      "post": {
        "description": "إرجاع المنتج بعد التسليم مع ذكر السبب",
        "operationId": "OrderController_returnOrder",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "معرّف الطلب",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "reason": {
                    "type": "string",
                    "description": "سبب الإرجاع"
                  }
                },
                "required": [
                  "reason"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "تم إنشاء طلب الإرجاع بنجاح"
          },
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "الطلب غير موجود"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "طلب إرجاع المنتج",
        "tags": [
          "Order"
        ]
      }
    },
    "/delivery/order/{id}/rate": {
      "post": {
        "description": "تقييم الطلب والخدمة بعد التسليم",
        "operationId": "OrderController_rateOrder",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "معرّف الطلب",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "rating": {
                    "type": "number",
                    "minimum": 1,
                    "maximum": 5
                  },
                  "comment": {
                    "type": "string"
                  }
                },
                "required": [
                  "rating"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "تم التقييم بنجاح"
          },
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "الطلب غير موجود"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "تقييم الطلب",
        "tags": [
          "Order"
        ]
      }
    },
    "/delivery/order/{id}/repeat": {
      "post": {
        "description": "إعادة نفس الطلب بنفس العناصر",
        "operationId": "OrderController_repeatOrder",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "معرّف الطلب السابق",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "الطلب السابق غير موجود"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "إعادة طلب سابق",
        "tags": [
          "Order"
        ]
      }
    },
    "/delivery/order/{id}/admin-status": {
      "patch": {
        "operationId": "OrderController_adminChangeStatus",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Updated"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "تغيير حالة الطلب (admin)",
        "tags": [
          "Order"
        ]
      }
    },
    "/delivery/order/export": {
      "get": {
        "description": "تصدير قائمة الطلبات بصيغة CSV أو Excel",
        "operationId": "OrderController_exportOrders",
        "parameters": [
          {
            "name": "startDate",
            "required": false,
            "in": "query",
            "description": "تاريخ البداية (ISO format)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "endDate",
            "required": false,
            "in": "query",
            "description": "تاريخ النهاية (ISO format)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "status",
            "required": false,
            "in": "query",
            "description": "حالة الطلب للتصفية",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "تصدير الطلبات إلى Excel/CSV",
        "tags": [
          "Order"
        ]
      }
    },
    "/delivery/order/{id}/tracking": {
      "get": {
        "operationId": "OrderController_trackOrder",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "تتبع الطلب",
        "tags": [
          "Order"
        ]
      }
    },
    "/delivery/order/{id}/schedule": {
      "post": {
        "description": "تحديد موعد محدد لتوصيل الطلب",
        "operationId": "OrderController_scheduleOrder",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "معرّف الطلب",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "scheduledDate": {
                    "type": "string",
                    "format": "date-time",
                    "description": "تاريخ ووقت التوصيل المطلوب"
                  }
                },
                "required": [
                  "scheduledDate"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "تم جدولة الطلب بنجاح"
          },
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "الطلب غير موجود"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "جدولة طلب للتوصيل لاحقاً",
        "tags": [
          "Order"
        ]
      }
    },
    "/delivery/order/public/{id}/status": {
      "get": {
        "description": "الحصول على حالة الطلب للمشاركة العامة",
        "operationId": "OrderController_getPublicOrderStatus",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "معرّف الطلب",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found"
          }
        },
        "summary": "حالة الطلب (عام بدون مصادقة)",
        "tags": [
          "Order"
        ]
      }
    },
    "/delivery/order/{id}/live-tracking": {
      "get": {
        "operationId": "OrderController_getLiveTracking",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "التتبع المباشر",
        "tags": [
          "Order"
        ]
      }
    },
    "/delivery/order/{id}/driver-eta": {
      "get": {
        "operationId": "OrderController_getDriverETA",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "الوقت المتوقع للوصول",
        "tags": [
          "Order"
        ]
      }
    },
    "/delivery/order/{id}/update-location": {
      "post": {
        "description": "تحديث موقع السائق أثناء التوصيل (GPS tracking)",
        "operationId": "OrderController_updateDriverLocation",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "معرّف الطلب",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "lat": {
                    "type": "number",
                    "description": "خط العرض"
                  },
                  "lng": {
                    "type": "number",
                    "description": "خط الطول"
                  }
                },
                "required": [
                  "lat",
                  "lng"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "تم تحديث الموقع بنجاح"
          },
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "ليس لديك صلاحية (driver only)"
          },
          "404": {
            "description": "الطلب غير موجود"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "تحديث موقع السائق",
        "tags": [
          "Order"
        ]
      }
    },
    "/delivery/order/{id}/route-history": {
      "get": {
        "operationId": "OrderController_getRouteHistory",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "سجل المسار",
        "tags": [
          "Order"
        ]
      }
    },
    "/delivery/order/{id}/delivery-timeline": {
      "get": {
        "operationId": "OrderController_getDeliveryTimeline",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "خط زمني للتوصيل",
        "tags": [
          "Order"
        ]
      }
    },
    "/orders-cqrs": {
      "post": {
        "description": "ينشئ طلب جديد باستخدام CQRS Pattern",
        "operationId": "OrderCqrsController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateOrderDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "إنشاء طلب جديد (CQRS)",
        "tags": [
          "Orders (CQRS)"
        ]
      },
      "get": {
        "operationId": "OrderCqrsController_findUserOrders",
        "parameters": [
          {
            "name": "cursor",
            "required": false,
            "in": "query",
            "description": "Cursor للصفحة التالية",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "description": "عدد العناصر",
            "schema": {
              "default": 20,
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "جلب طلبات المستخدم (CQRS)",
        "tags": [
          "Orders (CQRS)"
        ]
      }
    },
    "/orders-cqrs/{id}/status": {
      "patch": {
        "operationId": "OrderCqrsController_updateStatus",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateOrderStatusDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Updated"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "تحديث حالة طلب (CQRS)",
        "tags": [
          "Orders (CQRS)"
        ]
      }
    },
    "/orders-cqrs/{id}/assign-driver": {
      "post": {
        "operationId": "OrderCqrsController_assignDriver",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "تعيين سائق للطلب (CQRS)",
        "tags": [
          "Orders (CQRS)"
        ]
      }
    },
    "/orders-cqrs/{id}/cancel": {
      "post": {
        "operationId": "OrderCqrsController_cancel",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "إلغاء طلب (CQRS)",
        "tags": [
          "Orders (CQRS)"
        ]
      }
    },
    "/orders-cqrs/{id}": {
      "get": {
        "operationId": "OrderCqrsController_findOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "جلب طلب محدد (CQRS)",
        "tags": [
          "Orders (CQRS)"
        ]
      }
    },
    "/drivers": {
      "post": {
        "operationId": "DriverController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateDriverDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "إنشاء سائق جديد (للإدارة)",
        "tags": [
          "Driver"
        ]
      }
    },
    "/drivers/available": {
      "get": {
        "operationId": "DriverController_findAvailable",
        "parameters": [
          {
            "name": "cursor",
            "required": false,
            "in": "query",
            "description": "Cursor للصفحة التالية",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "description": "عدد العناصر",
            "schema": {
              "default": 20,
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "جلب السائقين المتاحين",
        "tags": [
          "Driver"
        ]
      }
    },
    "/drivers/{id}": {
      "get": {
        "operationId": "DriverController_findOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "جلب سائق محدد",
        "tags": [
          "Driver"
        ]
      }
    },
    "/drivers/location": {
      "patch": {
        "operationId": "DriverController_updateLocation",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateLocationDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Updated"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "تحديث موقع السائق",
        "tags": [
          "Driver"
        ]
      }
    },
    "/drivers/availability": {
      "patch": {
        "operationId": "DriverController_updateAvailability",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "isAvailable": {
                    "type": "boolean"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Updated"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "تحديث حالة التوفر",
        "tags": [
          "Driver"
        ]
      }
    },
    "/drivers/profile": {
      "get": {
        "operationId": "DriverController_getProfile",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "ملفي الشخصي",
        "tags": [
          "Driver"
        ]
      },
      "patch": {
        "operationId": "DriverController_updateProfile",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "phone": {
                    "type": "string"
                  },
                  "vehicle": {
                    "type": "object"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Updated"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "تحديث الملف الشخصي",
        "tags": [
          "Driver"
        ]
      }
    },
    "/drivers/earnings": {
      "get": {
        "operationId": "DriverController_getEarnings",
        "parameters": [
          {
            "name": "startDate",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "endDate",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "أرباحي",
        "tags": [
          "Driver"
        ]
      }
    },
    "/drivers/earnings/daily": {
      "get": {
        "operationId": "DriverController_getDailyEarnings",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "أرباح اليوم",
        "tags": [
          "Driver"
        ]
      }
    },
    "/drivers/earnings/weekly": {
      "get": {
        "operationId": "DriverController_getWeeklyEarnings",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "أرباح الأسبوع",
        "tags": [
          "Driver"
        ]
      }
    },
    "/drivers/statistics": {
      "get": {
        "operationId": "DriverController_getStatistics",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "إحصائياتي",
        "tags": [
          "Driver"
        ]
      }
    },
    "/drivers/documents/upload": {
      "post": {
        "operationId": "DriverController_uploadDocument",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string"
                  },
                  "file": {
                    "type": "string"
                  },
                  "number": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "رفع مستند",
        "tags": [
          "Driver"
        ]
      }
    },
    "/drivers/documents": {
      "get": {
        "operationId": "DriverController_getDocuments",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "مستنداتي",
        "tags": [
          "Driver"
        ]
      }
    },
    "/drivers/{driverId}/documents": {
      "get": {
        "operationId": "DriverController_getDriverDocumentsAdmin",
        "parameters": [
          {
            "name": "driverId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "مستندات سائق (Admin)",
        "tags": [
          "Driver"
        ]
      }
    },
    "/drivers/{driverId}/documents/{docId}/verify": {
      "post": {
        "operationId": "DriverController_verifyDocument",
        "parameters": [
          {
            "name": "driverId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "docId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "التحقق من مستند (Admin)",
        "tags": [
          "Driver"
        ]
      }
    },
    "/drivers/vacations/request": {
      "post": {
        "operationId": "DriverController_requestVacation",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "startDate": {
                    "type": "string"
                  },
                  "endDate": {
                    "type": "string"
                  },
                  "reason": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "طلب إجازة",
        "tags": [
          "Driver"
        ]
      }
    },
    "/drivers/vacations/my": {
      "get": {
        "operationId": "DriverController_getMyVacations",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "إجازاتي",
        "tags": [
          "Driver"
        ]
      }
    },
    "/drivers/vacations/{id}/cancel": {
      "patch": {
        "operationId": "DriverController_cancelVacation",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Updated"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "إلغاء طلب إجازة",
        "tags": [
          "Driver"
        ]
      }
    },
    "/drivers/vacations/balance": {
      "get": {
        "operationId": "DriverController_getVacationBalance",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "رصيد الإجازات",
        "tags": [
          "Driver"
        ]
      }
    },
    "/drivers/vacations/policy": {
      "get": {
        "operationId": "DriverController_getVacationPolicy",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "سياسة الإجازات",
        "tags": [
          "Driver"
        ]
      }
    },
    "/drivers/orders/available": {
      "get": {
        "operationId": "DriverController_getAvailableOrders",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "الطلبات المتاحة للاستلام",
        "tags": [
          "Driver"
        ]
      }
    },
    "/drivers/orders/{id}/accept": {
      "post": {
        "operationId": "DriverController_acceptOrder",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "قبول طلب",
        "tags": [
          "Driver"
        ]
      }
    },
    "/drivers/orders/{id}/reject": {
      "post": {
        "operationId": "DriverController_rejectOrder",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "رفض طلب",
        "tags": [
          "Driver"
        ]
      }
    },
    "/drivers/orders/{id}/start-delivery": {
      "post": {
        "operationId": "DriverController_startDelivery",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "بدء التوصيل",
        "tags": [
          "Driver"
        ]
      }
    },
    "/drivers/orders/{id}/complete": {
      "post": {
        "operationId": "DriverController_completeDelivery",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "إتمام التوصيل",
        "tags": [
          "Driver"
        ]
      }
    },
    "/drivers/orders/history": {
      "get": {
        "operationId": "DriverController_getOrdersHistory",
        "parameters": [
          {
            "name": "cursor",
            "required": false,
            "in": "query",
            "description": "Cursor للصفحة التالية",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "description": "عدد العناصر",
            "schema": {
              "default": 20,
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "سجل الطلبات",
        "tags": [
          "Driver"
        ]
      }
    },
    "/drivers/issues/report": {
      "post": {
        "operationId": "DriverController_reportIssue",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "orderId": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "الإبلاغ عن مشكلة",
        "tags": [
          "Driver"
        ]
      }
    },
    "/drivers/change-password": {
      "post": {
        "operationId": "DriverController_changePassword",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "oldPassword": {
                    "type": "string"
                  },
                  "newPassword": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "تغيير كلمة المرور",
        "tags": [
          "Driver"
        ]
      }
    },
    "/vendors": {
      "post": {
        "operationId": "VendorController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateVendorDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "إنشاء تاجر جديد",
        "tags": [
          "Vendor"
        ]
      },
      "get": {
        "operationId": "VendorController_findAll",
        "parameters": [
          {
            "name": "cursor",
            "required": false,
            "in": "query",
            "description": "Cursor للصفحة التالية",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "description": "عدد العناصر",
            "schema": {
              "default": 20,
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "جلب كل التجار",
        "tags": [
          "Vendor"
        ]
      }
    },
    "/vendors/me": {
      "get": {
        "operationId": "VendorController_getProfile",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "جلب بيانات التاجر الحالي",
        "tags": [
          "Vendor"
        ]
      },
      "patch": {
        "operationId": "VendorController_update",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateVendorDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Updated"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "تحديث بيانات التاجر",
        "tags": [
          "Vendor"
        ]
      }
    },
    "/vendors/{id}": {
      "get": {
        "operationId": "VendorController_findOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "جلب تاجر محدد",
        "tags": [
          "Vendor"
        ]
      },
      "patch": {
        "operationId": "VendorController_updateVendor",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateVendorDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Updated"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "تحديث تاجر (للإدارة)",
        "tags": [
          "Vendor"
        ]
      }
    },
    "/vendors/{id}/status": {
      "patch": {
        "operationId": "VendorController_updateStatus",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Updated"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "تحديث حالة التاجر",
        "tags": [
          "Vendor"
        ]
      }
    },
    "/vendors/{id}/reset-password": {
      "post": {
        "operationId": "VendorController_resetPassword",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "إعادة تعيين كلمة مرور التاجر",
        "tags": [
          "Vendor"
        ]
      }
    },
    "/vendors/dashboard/overview": {
      "get": {
        "operationId": "VendorController_getDashboard",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "لوحة معلومات التاجر",
        "tags": [
          "Vendor"
        ]
      }
    },
    "/vendors/account/statement": {
      "get": {
        "operationId": "VendorController_getAccountStatement",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "كشف حساب التاجر",
        "tags": [
          "Vendor"
        ]
      }
    },
    "/vendors/settlements": {
      "get": {
        "operationId": "VendorController_getSettlements",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "طلبات التسوية المالية",
        "tags": [
          "Vendor"
        ]
      },
      "post": {
        "operationId": "VendorController_createSettlement",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "amount": {
                    "type": "number"
                  },
                  "bankAccount": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "طلب تسوية مالية",
        "tags": [
          "Vendor"
        ]
      }
    },
    "/vendors/sales": {
      "get": {
        "operationId": "VendorController_getSales",
        "parameters": [
          {
            "name": "limit",
            "required": true,
            "in": "query",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "سجل المبيعات",
        "tags": [
          "Vendor"
        ]
      }
    },
    "/vendors/account/delete-request": {
      "post": {
        "operationId": "VendorController_requestAccountDeletion",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "reason": {
                    "type": "string"
                  },
                  "exportData": {
                    "type": "boolean"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "طلب حذف الحساب",
        "tags": [
          "Vendor"
        ]
      }
    },
    "/admin/stores": {
      "post": {
        "operationId": "StoreController_createStore",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateStoreDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "إنشاء متجر",
        "tags": [
          "Admin - Stores"
        ]
      },
      "get": {
        "operationId": "StoreController_findStores",
        "parameters": [
          {
            "name": "cursor",
            "required": false,
            "in": "query",
            "description": "Cursor للصفحة التالية",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "description": "عدد العناصر",
            "schema": {
              "default": 20,
              "type": "number"
            }
          },
          {
            "name": "isActive",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "usageType",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "q",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "جلب المتاجر - الإدارة",
        "tags": [
          "Admin - Stores"
        ]
      }
    },
    "/admin/stores/{id}": {
      "get": {
        "operationId": "StoreController_findStore",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "جلب متجر محدد - الإدارة",
        "tags": [
          "Admin - Stores"
        ]
      },
      "patch": {
        "operationId": "StoreController_updateStore",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Updated"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "تحديث متجر",
        "tags": [
          "Admin - Stores"
        ]
      },
      "delete": {
        "operationId": "StoreController_deleteStore",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Deleted"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "حذف متجر",
        "tags": [
          "Admin - Stores"
        ]
      }
    },
    "/admin/stores/products": {
      "post": {
        "operationId": "StoreController_createProduct",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateProductDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "إنشاء منتج",
        "tags": [
          "Admin - Stores"
        ]
      }
    },
    "/admin/stores/{id}/products": {
      "get": {
        "operationId": "StoreController_getProducts",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "cursor",
            "required": false,
            "in": "query",
            "description": "Cursor للصفحة التالية",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "description": "عدد العناصر",
            "schema": {
              "default": 20,
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "جلب منتجات المتجر - الإدارة",
        "tags": [
          "Admin - Stores"
        ]
      }
    },
    "/admin/stores/{id}/activate": {
      "post": {
        "operationId": "StoreController_activateStore",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "تفعيل متجر",
        "tags": [
          "Admin - Stores"
        ]
      }
    },
    "/admin/stores/{id}/deactivate": {
      "post": {
        "operationId": "StoreController_deactivateStore",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "تعطيل متجر",
        "tags": [
          "Admin - Stores"
        ]
      }
    },
    "/admin/stores/{id}/force-close": {
      "post": {
        "operationId": "StoreController_forceCloseStore",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "إغلاق قسري للمتجر",
        "tags": [
          "Admin - Stores"
        ]
      }
    },
    "/admin/stores/{id}/force-open": {
      "post": {
        "operationId": "StoreController_forceOpenStore",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "فتح قسري للمتجر",
        "tags": [
          "Admin - Stores"
        ]
      }
    },
    "/admin/stores/products/{id}": {
      "patch": {
        "operationId": "StoreController_updateProduct",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Updated"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "تحديث منتج",
        "tags": [
          "Admin - Stores"
        ]
      }
    },
    "/admin/stores/{id}/analytics": {
      "get": {
        "operationId": "StoreController_getStoreAnalytics",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "startDate",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "endDate",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "تحليلات المتجر - الإدارة",
        "tags": [
          "Admin - Stores"
        ]
      }
    },
    "/admin/stores/products/{id}/variants": {
      "get": {
        "operationId": "StoreController_getProductVariants",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "متغيرات المنتج",
        "tags": [
          "Admin - Stores"
        ]
      },
      "post": {
        "operationId": "StoreController_addProductVariant",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "إضافة متغير",
        "tags": [
          "Admin - Stores"
        ]
      }
    },
    "/admin/stores/{id}/inventory": {
      "get": {
        "operationId": "StoreController_getStoreInventory",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "جرد المتجر - الإدارة",
        "tags": [
          "Admin - Stores"
        ]
      }
    },
    "/admin/stores/pending": {
      "get": {
        "operationId": "StoreController_getPendingStores",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "المتاجر المعلقة - تحتاج موافقة",
        "tags": [
          "Admin - Stores"
        ]
      }
    },
    "/admin/stores/{id}/approve": {
      "post": {
        "operationId": "StoreController_approveStore",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "الموافقة على متجر",
        "tags": [
          "Admin - Stores"
        ]
      }
    },
    "/admin/stores/{id}/reject": {
      "post": {
        "operationId": "StoreController_rejectStore",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "رفض متجر",
        "tags": [
          "Admin - Stores"
        ]
      }
    },
    "/admin/stores/{id}/suspend": {
      "post": {
        "operationId": "StoreController_suspendStore",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "تعليق متجر",
        "tags": [
          "Admin - Stores"
        ]
      }
    },
    "/delivery/stores": {
      "get": {
        "operationId": "DeliveryStoreController_findStores",
        "parameters": [
          {
            "name": "cursor",
            "required": false,
            "in": "query",
            "description": "Cursor للصفحة التالية",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "description": "عدد العناصر",
            "schema": {
              "default": 20,
              "type": "number"
            }
          },
          {
            "name": "categoryId",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "isTrending",
            "required": true,
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "isFeatured",
            "required": true,
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "usageType",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "summary": "جلب المتاجر - عام",
        "tags": [
          "Delivery - Stores"
        ]
      }
    },
    "/delivery/stores/search": {
      "get": {
        "operationId": "DeliveryStoreController_searchStores",
        "parameters": [
          {
            "name": "q",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "cursor",
            "required": false,
            "in": "query",
            "description": "Cursor للصفحة التالية",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "description": "عدد العناصر",
            "schema": {
              "default": 20,
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "summary": "البحث عن متاجر",
        "tags": [
          "Delivery - Stores"
        ]
      }
    },
    "/delivery/stores/{id}": {
      "get": {
        "operationId": "DeliveryStoreController_findStore",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found"
          }
        },
        "summary": "جلب متجر محدد",
        "tags": [
          "Delivery - Stores"
        ]
      },
      "put": {
        "operationId": "DeliveryStoreController_updateStore",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Updated"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found"
          }
        },
        "summary": "تحديث متجر",
        "tags": [
          "Delivery - Stores"
        ]
      }
    },
    "/delivery/stores/{id}/products": {
      "get": {
        "operationId": "DeliveryStoreController_getProducts",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "cursor",
            "required": false,
            "in": "query",
            "description": "Cursor للصفحة التالية",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "description": "عدد العناصر",
            "schema": {
              "default": 20,
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found"
          }
        },
        "summary": "جلب منتجات المتجر",
        "tags": [
          "Delivery - Stores"
        ]
      }
    },
    "/delivery/stores/{id}/statistics": {
      "get": {
        "operationId": "DeliveryStoreController_getStoreStatistics",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found"
          }
        },
        "summary": "إحصائيات المتجر - عامة",
        "tags": [
          "Delivery - Stores"
        ]
      }
    },
    "/delivery/stores/{id}/reviews": {
      "get": {
        "operationId": "DeliveryStoreController_getStoreReviews",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "cursor",
            "required": false,
            "in": "query",
            "description": "Cursor للصفحة التالية",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "description": "عدد العناصر",
            "schema": {
              "default": 20,
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found"
          }
        },
        "summary": "مراجعات المتجر",
        "tags": [
          "Delivery - Stores"
        ]
      }
    },
    "/users/me": {
      "get": {
        "description": "الحصول على جميع بيانات المستخدم الحالي",
        "operationId": "UserController_getCurrentUser",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "المستخدم غير موجود"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "جلب بيانات المستخدم الحالي",
        "tags": [
          "User"
        ]
      },
      "patch": {
        "description": "تحديث بيانات المستخدم الحالي",
        "operationId": "UserController_updateProfile",
        "parameters": [],
        "requestBody": {
          "required": true,
          "description": "البيانات المراد تحديثها",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUserDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Updated"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "تحديث الملف الشخصي",
        "tags": [
          "User"
        ]
      }
    },
    "/users/addresses": {
      "get": {
        "description": "الحصول على قائمة عناوين التوصيل المحفوظة",
        "operationId": "UserController_getAddresses",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "جلب جميع عناوين المستخدم",
        "tags": [
          "User"
        ]
      },
      "post": {
        "description": "إضافة عنوان توصيل مع الإحداثيات والتفاصيل",
        "operationId": "UserController_addAddress",
        "parameters": [],
        "requestBody": {
          "required": true,
          "description": "بيانات العنوان",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddAddressDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "إضافة عنوان توصيل جديد",
        "tags": [
          "User"
        ]
      }
    },
    "/users/addresses/{addressId}": {
      "patch": {
        "description": "تعديل بيانات عنوان توصيل محفوظ",
        "operationId": "UserController_updateAddress",
        "parameters": [
          {
            "name": "addressId",
            "required": true,
            "in": "path",
            "description": "معرّف العنوان",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "description": "البيانات المراد تحديثها",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddAddressDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Updated"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "تحديث عنوان موجود",
        "tags": [
          "User"
        ]
      },
      "delete": {
        "description": "حذف عنوان توصيل من القائمة",
        "operationId": "UserController_deleteAddress",
        "parameters": [
          {
            "name": "addressId",
            "required": true,
            "in": "path",
            "description": "معرّف العنوان",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Deleted"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "حذف عنوان",
        "tags": [
          "User"
        ]
      }
    },
    "/users/addresses/{addressId}/set-default": {
      "post": {
        "description": "جعل عنوان معين هو العنوان الافتراضي للتوصيل",
        "operationId": "UserController_setDefaultAddress",
        "parameters": [
          {
            "name": "addressId",
            "required": true,
            "in": "path",
            "description": "معرّف العنوان",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "تم تعيين العنوان الافتراضي بنجاح"
          },
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "العنوان غير موجود"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "تعيين العنوان الافتراضي",
        "tags": [
          "User"
        ]
      }
    },
    "/users/address/{id}": {
      "patch": {
        "operationId": "UserController_updateAddressAlias",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "تحديث عنوان موجود (alias)",
        "tags": [
          "User"
        ]
      },
      "delete": {
        "operationId": "UserController_deleteAddressAlias",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "حذف عنوان (alias)",
        "tags": [
          "User"
        ]
      }
    },
    "/users/default-address": {
      "patch": {
        "operationId": "UserController_setDefaultAddressAlias",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "addressId": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "تعيين العنوان الافتراضي (alias)",
        "tags": [
          "User"
        ]
      }
    },
    "/users/deactivate": {
      "delete": {
        "description": "تعطيل حساب المستخدم بشكل مؤقت أو دائم",
        "operationId": "UserController_deactivateAccount",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Deleted"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "إلغاء تفعيل الحساب",
        "tags": [
          "User"
        ]
      }
    },
    "/users/search": {
      "get": {
        "description": "البحث في قاعدة بيانات المستخدمين (admin only)",
        "operationId": "UserController_searchUsers",
        "parameters": [
          {
            "name": "q",
            "required": true,
            "in": "query",
            "description": "نص البحث (اسم، رقم، email)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "cursor",
            "required": false,
            "in": "query",
            "description": "Cursor للصفحة التالية",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "description": "عدد النتائج",
            "schema": {
              "default": 20,
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "ليس لديك صلاحية (admin only)"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "البحث عن مستخدمين",
        "tags": [
          "User"
        ]
      }
    },
    "/users/pin/set": {
      "post": {
        "description": "تعيين رمز PIN من 4-6 أرقام مع تشفير bcrypt",
        "operationId": "UserController_setPin",
        "parameters": [],
        "requestBody": {
          "required": true,
          "description": "بيانات PIN",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SetPinDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "تم تعيين PIN بنجاح"
          },
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "تعيين رمز PIN مشفر",
        "tags": [
          "User"
        ]
      }
    },
    "/users/pin/verify": {
      "post": {
        "description": "التحقق من صحة رمز PIN مع حماية من Brute Force",
        "operationId": "UserController_verifyPin",
        "parameters": [],
        "requestBody": {
          "required": true,
          "description": "رمز PIN للتحقق",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VerifyPinDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "PIN صحيح"
          },
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "التحقق من رمز PIN",
        "tags": [
          "User"
        ]
      }
    },
    "/users/pin/change": {
      "post": {
        "description": "تغيير PIN الحالي (يتطلب PIN القديم)",
        "operationId": "UserController_changePin",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "oldPin": {
                    "type": "string"
                  },
                  "newPin": {
                    "type": "string"
                  },
                  "confirmNewPin": {
                    "type": "string"
                  }
                },
                "required": [
                  "oldPin",
                  "newPin",
                  "confirmNewPin"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "تم تغيير PIN بنجاح"
          },
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "تغيير رمز PIN",
        "tags": [
          "User"
        ]
      }
    },
    "/users/pin/status": {
      "get": {
        "description": "التحقق من وجود PIN وحالة القفل",
        "operationId": "UserController_getPinStatus",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "حالة رمز PIN",
        "tags": [
          "User"
        ]
      }
    },
    "/users/pin/reset/{userId}": {
      "delete": {
        "description": "إعادة تعيين PIN لمستخدم معين (admin only)",
        "operationId": "UserController_resetPin",
        "parameters": [
          {
            "name": "userId",
            "required": true,
            "in": "path",
            "description": "معرّف المستخدم",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Deleted"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "ليس لديك صلاحية (admin only)"
          },
          "404": {
            "description": "Not found"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "إعادة تعيين PIN (للمسؤولين)",
        "tags": [
          "User"
        ]
      }
    },
    "/notifications": {
      "post": {
        "operationId": "NotificationController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateNotificationDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "إنشاء إشعار (للإدارة)",
        "tags": [
          "Notification"
        ]
      }
    },
    "/notifications/my": {
      "get": {
        "operationId": "NotificationController_getMyNotifications",
        "parameters": [
          {
            "name": "cursor",
            "required": false,
            "in": "query",
            "description": "Cursor للصفحة التالية",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "description": "عدد العناصر",
            "schema": {
              "default": 20,
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "جلب إشعارات المستخدم",
        "tags": [
          "Notification"
        ]
      }
    },
    "/notifications/{id}/read": {
      "post": {
        "operationId": "NotificationController_markAsRead",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "تحديد الإشعار كمقروء",
        "tags": [
          "Notification"
        ]
      }
    },
    "/notifications/unread/count": {
      "get": {
        "operationId": "NotificationController_getUnreadCount",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "عدد الإشعارات غير المقروءة",
        "tags": [
          "Notification"
        ]
      }
    },
    "/notifications/read-all": {
      "post": {
        "operationId": "NotificationController_markAllAsRead",
        "parameters": [],
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "تحديد جميع الإشعارات كمقروءة",
        "tags": [
          "Notification"
        ]
      }
    },
    "/notifications/{id}": {
      "delete": {
        "operationId": "NotificationController_delete",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Deleted"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "حذف إشعار",
        "tags": [
          "Notification"
        ]
      }
    },
    "/notifications/suppression": {
      "post": {
        "operationId": "NotificationController_createSuppression",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateSuppressionDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "حظر قنوات إشعارات محددة",
        "tags": [
          "Notification"
        ]
      },
      "get": {
        "operationId": "NotificationController_getUserSuppressions",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "جلب قائمة الحظر للمستخدم",
        "tags": [
          "Notification"
        ]
      }
    },
    "/notifications/suppression/channels": {
      "get": {
        "operationId": "NotificationController_getSuppressedChannels",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "جلب القنوات المحظورة",
        "tags": [
          "Notification"
        ]
      }
    },
    "/notifications/suppression/{id}": {
      "delete": {
        "operationId": "NotificationController_removeSuppression",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "معرف الحظر",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Deleted"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "إلغاء حظر",
        "tags": [
          "Notification"
        ]
      }
    },
    "/notifications/suppression/channel/{channel}": {
      "delete": {
        "operationId": "NotificationController_removeChannelSuppression",
        "parameters": [
          {
            "name": "channel",
            "required": true,
            "in": "path",
            "schema": {
              "enum": [
                "push",
                "email",
                "sms"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Deleted"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "إلغاء حظر قناة محددة",
        "tags": [
          "Notification"
        ]
      }
    },
    "/notifications/suppression/stats": {
      "get": {
        "operationId": "NotificationController_getSuppressionStats",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "إحصائيات الحظر (للإدارة)",
        "tags": [
          "Notification"
        ]
      }
    },
    "/notifications/send-bulk": {
      "post": {
        "operationId": "NotificationController_sendBulkNotification",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": {
                    "type": "string"
                  },
                  "body": {
                    "type": "string"
                  },
                  "userIds": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "إرسال إشعار جماعي (Admin)",
        "tags": [
          "Notification"
        ]
      }
    },
    "/admin/dashboard": {
      "get": {
        "operationId": "AdminController_getDashboard",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "لوحة التحكم - الإحصائيات العامة",
        "tags": [
          "Admin"
        ]
      }
    },
    "/admin/stats/today": {
      "get": {
        "operationId": "AdminController_getTodayStats",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "إحصائيات اليوم",
        "tags": [
          "Admin"
        ]
      }
    },
    "/admin/stats/financial": {
      "get": {
        "operationId": "AdminController_getFinancialStats",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "الإحصائيات المالية",
        "tags": [
          "Admin"
        ]
      }
    },
    "/admin/dashboard/orders-by-status": {
      "get": {
        "operationId": "AdminController_getOrdersByStatus",
        "parameters": [
          {
            "name": "startDate",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "endDate",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "الطلبات حسب الحالة",
        "tags": [
          "Admin"
        ]
      }
    },
    "/admin/dashboard/revenue": {
      "get": {
        "operationId": "AdminController_getRevenueAnalytics",
        "parameters": [
          {
            "name": "period",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "startDate",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "endDate",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "تحليلات الإيرادات",
        "tags": [
          "Admin"
        ]
      }
    },
    "/admin/dashboard/live-metrics": {
      "get": {
        "operationId": "AdminController_getLiveMetrics",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "المقاييس الحية",
        "tags": [
          "Admin"
        ]
      }
    },
    "/admin/drivers": {
      "get": {
        "operationId": "AdminController_getAllDrivers",
        "parameters": [
          {
            "name": "status",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "isAvailable",
            "required": true,
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "page",
            "required": true,
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": true,
            "in": "query",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "جلب كل السائقين",
        "tags": [
          "Admin"
        ]
      }
    },
    "/admin/drivers/{id}": {
      "get": {
        "operationId": "AdminController_getDriverDetails",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "تفاصيل سائق محدد",
        "tags": [
          "Admin"
        ]
      },
      "delete": {
        "operationId": "AdminController_deleteDriver",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Deleted"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "حذف سائق",
        "tags": [
          "Admin"
        ]
      }
    },
    "/admin/drivers/{id}/performance": {
      "get": {
        "operationId": "AdminController_getDriverPerformance",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "startDate",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "endDate",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "أداء السائق",
        "tags": [
          "Admin"
        ]
      }
    },
    "/admin/drivers/{id}/financials": {
      "get": {
        "operationId": "AdminController_getDriverFinancials",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "مالية السائق",
        "tags": [
          "Admin"
        ]
      }
    },
    "/admin/drivers/{id}/ban": {
      "post": {
        "operationId": "AdminController_banDriver",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "حظر سائق",
        "tags": [
          "Admin"
        ]
      }
    },
    "/admin/drivers/{id}/unban": {
      "post": {
        "operationId": "AdminController_unbanDriver",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "إلغاء حظر سائق",
        "tags": [
          "Admin"
        ]
      }
    },
    "/admin/drivers/{id}/adjust-balance": {
      "patch": {
        "operationId": "AdminController_adjustDriverBalance",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "تعديل رصيد السائق",
        "tags": [
          "Admin"
        ]
      }
    },
    "/admin/withdrawals": {
      "get": {
        "operationId": "AdminController_getWithdrawals",
        "parameters": [
          {
            "name": "status",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userModel",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "required": true,
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": true,
            "in": "query",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "جلب طلبات السحب",
        "tags": [
          "Admin"
        ]
      }
    },
    "/admin/withdrawals/pending": {
      "get": {
        "operationId": "AdminController_getPendingWithdrawals",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "طلبات السحب المعلقة",
        "tags": [
          "Admin"
        ]
      }
    },
    "/admin/withdrawals/{id}/approve": {
      "patch": {
        "operationId": "AdminController_approveWithdrawal",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "الموافقة على طلب سحب",
        "tags": [
          "Admin"
        ]
      }
    },
    "/admin/withdrawals/{id}/reject": {
      "patch": {
        "operationId": "AdminController_rejectWithdrawal",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "رفض طلب سحب",
        "tags": [
          "Admin"
        ]
      }
    },
    "/admin/vendors/pending": {
      "get": {
        "operationId": "AdminController_getPendingVendors",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "التجار المعلقين",
        "tags": [
          "Admin"
        ]
      }
    },
    "/admin/vendors/{id}/approve": {
      "post": {
        "operationId": "AdminController_approveVendor",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "الموافقة على تاجر",
        "tags": [
          "Admin"
        ]
      }
    },
    "/admin/vendors/{id}/reject": {
      "post": {
        "operationId": "AdminController_rejectVendor",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "رفض تاجر",
        "tags": [
          "Admin"
        ]
      }
    },
    "/admin/vendors/{id}/suspend": {
      "post": {
        "operationId": "AdminController_suspendVendor",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "تعليق تاجر",
        "tags": [
          "Admin"
        ]
      }
    },
    "/admin/users": {
      "get": {
        "operationId": "AdminController_getUsers",
        "parameters": [
          {
            "name": "search",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "isActive",
            "required": true,
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "page",
            "required": true,
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": true,
            "in": "query",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "جلب المستخدمين",
        "tags": [
          "Admin"
        ]
      }
    },
    "/admin/users/{id}": {
      "get": {
        "operationId": "AdminController_getUserDetails",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "تفاصيل مستخدم",
        "tags": [
          "Admin"
        ]
      }
    },
    "/admin/users/{id}/ban": {
      "post": {
        "operationId": "AdminController_banUser",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "حظر مستخدم",
        "tags": [
          "Admin"
        ]
      }
    },
    "/admin/users/{id}/unban": {
      "post": {
        "operationId": "AdminController_unbanUser",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "إلغاء حظر مستخدم",
        "tags": [
          "Admin"
        ]
      }
    },
    "/admin/reports/daily": {
      "get": {
        "operationId": "AdminController_getDailyReport",
        "parameters": [
          {
            "name": "date",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "تقرير يومي",
        "tags": [
          "Admin"
        ]
      }
    },
    "/admin/reports/export/{type}/{format}": {
      "post": {
        "operationId": "AdminController_exportReport",
        "parameters": [
          {
            "name": "type",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "format",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "تصدير التقارير بصيغة Excel أو PDF",
            "content": {
              "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet": {},
              "application/pdf": {}
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "تصدير تقارير",
        "tags": [
          "Admin"
        ]
      }
    },
    "/admin/drivers/{id}/attendance": {
      "get": {
        "operationId": "AdminController_getDriverAttendance",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "month",
            "required": true,
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "year",
            "required": true,
            "in": "query",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "سجل حضور السائق",
        "tags": [
          "Admin"
        ]
      }
    },
    "/admin/drivers/attendance/summary": {
      "get": {
        "operationId": "AdminController_getAttendanceSummary",
        "parameters": [
          {
            "name": "date",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "ملخص الحضور لكل السائقين",
        "tags": [
          "Admin"
        ]
      }
    },
    "/admin/drivers/{id}/attendance/adjust": {
      "post": {
        "operationId": "AdminController_adjustAttendance",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "تعديل حضور السائق",
        "tags": [
          "Admin"
        ]
      }
    },
    "/admin/drivers/shifts/{id}": {
      "delete": {
        "operationId": "AdminController_deleteShift",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Deleted"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "حذف وردية",
        "tags": [
          "Admin"
        ]
      }
    },
    "/admin/drivers/assets/{id}": {
      "delete": {
        "operationId": "AdminController_deleteDriverAsset",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Deleted"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "حذف أصل سائق",
        "tags": [
          "Admin"
        ]
      }
    },
    "/admin/drivers/leave-requests": {
      "get": {
        "operationId": "AdminController_getLeaveRequests",
        "parameters": [
          {
            "name": "status",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "required": true,
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": true,
            "in": "query",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "طلبات الإجازات",
        "tags": [
          "Admin"
        ]
      }
    },
    "/admin/drivers/leave-requests/{id}/approve": {
      "patch": {
        "operationId": "AdminController_approveLeaveRequest",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "الموافقة على طلب إجازة",
        "tags": [
          "Admin"
        ]
      }
    },
    "/admin/drivers/leave-requests/{id}/reject": {
      "patch": {
        "operationId": "AdminController_rejectLeaveRequest",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "رفض طلب إجازة",
        "tags": [
          "Admin"
        ]
      }
    },
    "/admin/drivers/leave-requests/{id}": {
      "delete": {
        "operationId": "AdminController_deleteLeaveRequest",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Deleted"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "حذف طلب إجازة",
        "tags": [
          "Admin"
        ]
      }
    },
    "/admin/drivers/{id}/leave-balance": {
      "get": {
        "operationId": "AdminController_getDriverLeaveBalance",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "رصيد إجازات السائق",
        "tags": [
          "Admin"
        ]
      }
    },
    "/admin/drivers/{id}/leave-balance/adjust": {
      "patch": {
        "operationId": "AdminController_adjustLeaveBalance",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "تعديل رصيد الإجازات",
        "tags": [
          "Admin"
        ]
      }
    },
    "/admin/quality/metrics": {
      "get": {
        "operationId": "AdminController_getQualityMetrics",
        "parameters": [
          {
            "name": "startDate",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "endDate",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "مقاييس الجودة",
        "tags": [
          "Admin"
        ]
      }
    },
    "/admin/settings": {
      "get": {
        "operationId": "AdminController_getSettings",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "إعدادات النظام",
        "tags": [
          "Admin"
        ]
      },
      "patch": {
        "operationId": "AdminController_updateSettings",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "maintenanceMode": {
                    "type": "boolean"
                  },
                  "allowRegistration": {
                    "type": "boolean"
                  },
                  "minAppVersion": {
                    "type": "string"
                  },
                  "maxOrderRadius": {
                    "type": "number"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "تحديث الإعدادات",
        "tags": [
          "Admin"
        ]
      }
    },
    "/admin/settings/feature-flags": {
      "get": {
        "operationId": "AdminController_getFeatureFlags",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "أعلام الميزات",
        "tags": [
          "Admin"
        ]
      }
    },
    "/admin/settings/feature-flags/{flag}": {
      "patch": {
        "operationId": "AdminController_updateFeatureFlag",
        "parameters": [
          {
            "name": "flag",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "تحديث علم ميزة",
        "tags": [
          "Admin"
        ]
      }
    },
    "/admin/backup/create": {
      "post": {
        "operationId": "AdminController_createBackup",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "collections": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "description": {
                    "type": "string",
                    "example": "نسخة احتياطية يومية"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "إنشاء نسخة احتياطية",
        "tags": [
          "Admin"
        ]
      }
    },
    "/admin/backup/list": {
      "get": {
        "operationId": "AdminController_listBackups",
        "parameters": [
          {
            "name": "page",
            "required": true,
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": true,
            "in": "query",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "قائمة النسخ الاحتياطية",
        "tags": [
          "Admin"
        ]
      }
    },
    "/admin/backup/{id}/restore": {
      "post": {
        "operationId": "AdminController_restoreBackup",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "استعادة نسخة احتياطية",
        "tags": [
          "Admin"
        ]
      }
    },
    "/admin/backup/{id}/download": {
      "get": {
        "operationId": "AdminController_downloadBackup",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "تحميل نسخة احتياطية",
        "tags": [
          "Admin"
        ]
      }
    },
    "/admin/data-deletion/requests": {
      "get": {
        "operationId": "AdminController_getDataDeletionRequests",
        "parameters": [
          {
            "name": "status",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "طلبات حذف البيانات",
        "tags": [
          "Admin"
        ]
      }
    },
    "/admin/data-deletion/{id}/approve": {
      "patch": {
        "operationId": "AdminController_approveDataDeletion",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "الموافقة على حذف البيانات",
        "tags": [
          "Admin"
        ]
      }
    },
    "/admin/data-deletion/{id}/reject": {
      "patch": {
        "operationId": "AdminController_rejectDataDeletion",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "رفض حذف البيانات",
        "tags": [
          "Admin"
        ]
      }
    },
    "/admin/security/password-attempts": {
      "get": {
        "operationId": "AdminController_getFailedPasswordAttempts",
        "parameters": [
          {
            "name": "threshold",
            "required": true,
            "in": "query",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "محاولات كلمات المرور الفاشلة",
        "tags": [
          "Admin"
        ]
      }
    },
    "/admin/security/reset-password/{userId}": {
      "post": {
        "operationId": "AdminController_resetUserPassword",
        "parameters": [
          {
            "name": "userId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "إعادة تعيين كلمة مرور مستخدم",
        "tags": [
          "Admin"
        ]
      }
    },
    "/admin/security/unlock-account/{userId}": {
      "post": {
        "operationId": "AdminController_unlockAccount",
        "parameters": [
          {
            "name": "userId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "فتح حساب مقفل",
        "tags": [
          "Admin"
        ]
      }
    },
    "/admin/marketers": {
      "get": {
        "operationId": "AdminController_getAllMarketers",
        "parameters": [
          {
            "name": "status",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "required": true,
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": true,
            "in": "query",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "جلب المسوقين الميدانيين",
        "tags": [
          "Admin"
        ]
      },
      "post": {
        "operationId": "AdminController_createMarketer",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "fullName",
                  "phone"
                ],
                "properties": {
                  "fullName": {
                    "type": "string",
                    "example": "أحمد محمد"
                  },
                  "phone": {
                    "type": "string",
                    "example": "+966501234567"
                  },
                  "email": {
                    "type": "string",
                    "example": "marketer@bthwani.com"
                  },
                  "territory": {
                    "type": "string",
                    "example": "الرياض"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "إضافة مسوق جديد",
        "tags": [
          "Admin"
        ]
      }
    },
    "/admin/marketers/{id}": {
      "get": {
        "operationId": "AdminController_getMarketerDetails",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "تفاصيل مسوق",
        "tags": [
          "Admin"
        ]
      },
      "patch": {
        "operationId": "AdminController_updateMarketer",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "تحديث مسوق",
        "tags": [
          "Admin"
        ]
      }
    },
    "/admin/marketers/{id}/performance": {
      "get": {
        "operationId": "AdminController_getMarketerPerformance",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "startDate",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "endDate",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "أداء المسوق",
        "tags": [
          "Admin"
        ]
      }
    },
    "/admin/marketers/{id}/stores": {
      "get": {
        "operationId": "AdminController_getMarketerStores",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "متاجر المسوق",
        "tags": [
          "Admin"
        ]
      }
    },
    "/admin/marketers/{id}/activate": {
      "post": {
        "operationId": "AdminController_activateMarketer",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "تفعيل مسوق",
        "tags": [
          "Admin"
        ]
      }
    },
    "/admin/marketers/{id}/deactivate": {
      "post": {
        "operationId": "AdminController_deactivateMarketer",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "تعطيل مسوق",
        "tags": [
          "Admin"
        ]
      }
    },
    "/admin/marketers/statistics": {
      "get": {
        "operationId": "AdminController_getMarketersStatistics",
        "parameters": [
          {
            "name": "startDate",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "endDate",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "إحصائيات المسوقين",
        "tags": [
          "Admin"
        ]
      }
    },
    "/admin/marketers/export": {
      "get": {
        "operationId": "AdminController_exportMarketers",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "تصدير المسوقين",
        "tags": [
          "Admin"
        ]
      }
    },
    "/admin/audit-logs": {
      "get": {
        "operationId": "AdminController_getAuditLogs",
        "parameters": [
          {
            "name": "action",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userId",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "startDate",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "endDate",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "سجلات المراجعة",
        "tags": [
          "Admin"
        ]
      }
    },
    "/admin/audit-logs/{id}": {
      "get": {
        "operationId": "AdminController_getAuditLogDetails",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "تفاصيل سجل مراجعة",
        "tags": [
          "Admin"
        ]
      }
    },
    "/admin/system/health": {
      "get": {
        "operationId": "AdminController_getSystemHealth",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "صحة النظام",
        "tags": [
          "Admin"
        ]
      }
    },
    "/admin/system/metrics": {
      "get": {
        "operationId": "AdminController_getSystemMetrics",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "مقاييس النظام",
        "tags": [
          "Admin"
        ]
      }
    },
    "/admin/database/stats": {
      "get": {
        "operationId": "AdminController_getDatabaseStats",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "إحصائيات قاعدة البيانات",
        "tags": [
          "Admin"
        ]
      }
    },
    "/admin/orders/stats/by-city": {
      "get": {
        "operationId": "AdminController_getOrdersByCity",
        "parameters": [
          {
            "name": "startDate",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "endDate",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "الطلبات حسب المدينة",
        "tags": [
          "Admin"
        ]
      }
    },
    "/admin/orders/stats/by-payment-method": {
      "get": {
        "operationId": "AdminController_getOrdersByPaymentMethod",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "الطلبات حسب طريقة الدفع",
        "tags": [
          "Admin"
        ]
      }
    },
    "/admin/drivers/stats/by-status": {
      "get": {
        "operationId": "AdminController_getDriversByStatus",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "السائقين حسب الحالة",
        "tags": [
          "Admin"
        ]
      }
    },
    "/admin/users/{id}/orders-history": {
      "get": {
        "operationId": "AdminController_getUserOrdersHistory",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "سجل طلبات المستخدم",
        "tags": [
          "Admin"
        ]
      }
    },
    "/admin/cache/clear": {
      "post": {
        "operationId": "AdminController_clearCache",
        "parameters": [],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "مسح الكاش",
        "tags": [
          "Admin"
        ]
      }
    },
    "/admin/cache/stats": {
      "get": {
        "operationId": "AdminController_getCacheStats",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "إحصائيات الكاش",
        "tags": [
          "Admin"
        ]
      }
    },
    "/admin/roles": {
      "get": {
        "operationId": "AdminController_getRoles",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "الأدوار",
        "tags": [
          "Admin"
        ]
      },
      "post": {
        "operationId": "AdminController_createRole",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "name"
                ],
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "manager"
                  },
                  "permissions": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "example": [
                      "users.read",
                      "orders.manage"
                    ]
                  },
                  "description": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "إنشاء دور",
        "tags": [
          "Admin"
        ]
      }
    },
    "/admin/roles/{id}": {
      "patch": {
        "operationId": "AdminController_updateRole",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "تحديث دور",
        "tags": [
          "Admin"
        ]
      }
    },
    "/admin/onboarding-slides": {
      "post": {
        "operationId": "AdminCMSController_createOnboardingSlide",
        "parameters": [],
        "responses": {
          "201": {
            "description": "Created"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "إضافة شريحة أونبوردينج",
        "tags": [
          "Admin CMS"
        ]
      }
    },
    "/admin/onboarding-slides/{id}": {
      "put": {
        "operationId": "AdminCMSController_updateOnboardingSlide",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Updated"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "تحديث شريحة أونبوردينج",
        "tags": [
          "Admin CMS"
        ]
      },
      "delete": {
        "operationId": "AdminCMSController_deleteOnboardingSlide",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Deleted"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "حذف شريحة أونبوردينج",
        "tags": [
          "Admin CMS"
        ]
      }
    },
    "/admin/pages/{id}": {
      "put": {
        "operationId": "AdminCMSController_updatePage",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Updated"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "تحديث صفحة",
        "tags": [
          "Admin CMS"
        ]
      },
      "delete": {
        "operationId": "AdminCMSController_deletePage",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Deleted"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "حذف صفحة",
        "tags": [
          "Admin CMS"
        ]
      }
    },
    "/admin/strings": {
      "post": {
        "operationId": "AdminCMSController_createString",
        "parameters": [],
        "responses": {
          "201": {
            "description": "Created"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "إضافة نص/ترجمة",
        "tags": [
          "Admin CMS"
        ]
      }
    },
    "/admin/strings/{id}": {
      "put": {
        "operationId": "AdminCMSController_updateString",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Updated"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "تحديث نص/ترجمة",
        "tags": [
          "Admin CMS"
        ]
      },
      "delete": {
        "operationId": "AdminCMSController_deleteString",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Deleted"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "حذف نص/ترجمة",
        "tags": [
          "Admin CMS"
        ]
      }
    },
    "/admin/home-layouts": {
      "post": {
        "operationId": "AdminCMSController_createHomeLayout",
        "parameters": [],
        "responses": {
          "201": {
            "description": "Created"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "إضافة تخطيط للصفحة الرئيسية",
        "tags": [
          "Admin CMS"
        ]
      }
    },
    "/admin/home-layouts/{id}": {
      "put": {
        "operationId": "AdminCMSController_updateHomeLayout",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Updated"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "تحديث تخطيط الصفحة الرئيسية",
        "tags": [
          "Admin CMS"
        ]
      },
      "delete": {
        "operationId": "AdminCMSController_deleteHomeLayout",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Deleted"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "حذف تخطيط الصفحة الرئيسية",
        "tags": [
          "Admin CMS"
        ]
      }
    },
    "/admin/wallet/coupons/{id}": {
      "delete": {
        "operationId": "AdminCMSController_deleteCoupon",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "حذف قسيمة",
        "tags": [
          "Admin CMS"
        ]
      }
    },
    "/admin/wallet/subscriptions/{id}": {
      "delete": {
        "operationId": "AdminCMSController_deleteSubscription",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "حذف اشتراك",
        "tags": [
          "Admin CMS"
        ]
      }
    },
    "/admin/reports/generate": {
      "post": {
        "operationId": "AdminCMSController_generateReport",
        "parameters": [],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "إنشاء تقرير",
        "tags": [
          "Admin CMS"
        ]
      }
    },
    "/admin/reports/export/{id}/{format}": {
      "post": {
        "operationId": "AdminCMSController_exportReport",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "format",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "تصدير تقرير",
        "tags": [
          "Admin CMS"
        ]
      }
    },
    "/admin/reports/realtime": {
      "get": {
        "operationId": "AdminCMSController_getRealtimeReports",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "التقارير الفورية",
        "tags": [
          "Admin CMS"
        ]
      }
    },
    "/admin/wallet/settlements/export": {
      "get": {
        "operationId": "AdminCMSController_exportSettlements",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "تصدير التسويات",
        "tags": [
          "Admin CMS"
        ]
      }
    },
    "/finance/commissions": {
      "post": {
        "operationId": "FinanceController_createCommission",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCommissionDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "إنشاء عمولة جديدة",
        "tags": [
          "Finance"
        ]
      }
    },
    "/finance/commissions/my": {
      "get": {
        "operationId": "FinanceController_getMyCommissions",
        "parameters": [
          {
            "name": "status",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "الحصول على عمولاتي",
        "tags": [
          "Finance"
        ]
      }
    },
    "/finance/commissions/stats/my": {
      "get": {
        "operationId": "FinanceController_getMyCommissionStats",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "إحصائيات عمولاتي",
        "tags": [
          "Finance"
        ]
      }
    },
    "/finance/commissions/{id}/approve": {
      "patch": {
        "operationId": "FinanceController_approveCommission",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Updated"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "الموافقة على عمولة",
        "tags": [
          "Finance"
        ]
      }
    },
    "/finance/commissions/{id}/cancel": {
      "patch": {
        "operationId": "FinanceController_cancelCommission",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Updated"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "إلغاء عمولة",
        "tags": [
          "Finance"
        ]
      }
    },
    "/finance/payouts/batches": {
      "post": {
        "operationId": "FinanceController_createPayoutBatch",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "commissionIds": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "batch": {
                    "type": "object"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "إنشاء دفعة من العمولات",
        "tags": [
          "Finance"
        ]
      },
      "get": {
        "operationId": "FinanceController_getPayoutBatches",
        "parameters": [
          {
            "name": "status",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "required": true,
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "cursor",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "الحصول على كل الدفعات",
        "tags": [
          "Finance"
        ]
      }
    },
    "/finance/payouts/batches/{id}": {
      "get": {
        "operationId": "FinanceController_getPayoutBatch",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "الحصول على دفعة",
        "tags": [
          "Finance"
        ]
      }
    },
    "/finance/payouts/batches/{id}/items": {
      "get": {
        "operationId": "FinanceController_getPayoutBatchItems",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "الحصول على عناصر دفعة",
        "tags": [
          "Finance"
        ]
      }
    },
    "/finance/payouts/batches/{id}/approve": {
      "patch": {
        "operationId": "FinanceController_approvePayoutBatch",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApprovePayoutBatchDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Updated"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "الموافقة على دفعة",
        "tags": [
          "Finance"
        ]
      }
    },
    "/finance/payouts/batches/{id}/complete": {
      "patch": {
        "operationId": "FinanceController_completePayoutBatch",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Updated"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "إكمال دفعة",
        "tags": [
          "Finance"
        ]
      }
    },
    "/finance/settlements": {
      "post": {
        "operationId": "FinanceController_createSettlement",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateSettlementDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "إنشاء تسوية",
        "tags": [
          "Finance"
        ]
      }
    },
    "/finance/settlements/entity/{entityId}": {
      "get": {
        "operationId": "FinanceController_getEntitySettlements",
        "parameters": [
          {
            "name": "entityId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "entityModel",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "status",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "الحصول على تسويات كيان",
        "tags": [
          "Finance"
        ]
      }
    },
    "/finance/settlements/{id}": {
      "get": {
        "operationId": "FinanceController_getSettlement",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "الحصول على تسوية",
        "tags": [
          "Finance"
        ]
      }
    },
    "/finance/settlements/{id}/approve": {
      "patch": {
        "operationId": "FinanceController_approveSettlement",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApproveSettlementDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Updated"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "الموافقة على تسوية",
        "tags": [
          "Finance"
        ]
      }
    },
    "/finance/coupons": {
      "post": {
        "operationId": "FinanceController_createCoupon",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateFinancialCouponDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "إنشاء كوبون",
        "tags": [
          "Finance"
        ]
      },
      "get": {
        "operationId": "FinanceController_getCoupons",
        "parameters": [
          {
            "name": "isActive",
            "required": true,
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "الحصول على كل الكوبونات",
        "tags": [
          "Finance"
        ]
      }
    },
    "/finance/coupons/validate": {
      "post": {
        "operationId": "FinanceController_validateCoupon",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ValidateCouponDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "التحقق من كوبون",
        "tags": [
          "Finance"
        ]
      }
    },
    "/finance/coupons/{id}": {
      "patch": {
        "operationId": "FinanceController_updateCoupon",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateFinancialCouponDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Updated"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "تحديث كوبون",
        "tags": [
          "Finance"
        ]
      }
    },
    "/finance/reconciliations": {
      "post": {
        "operationId": "FinanceController_createReconciliation",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "startDate": {
                    "type": "string"
                  },
                  "endDate": {
                    "type": "string"
                  },
                  "periodType": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "إنشاء مطابقة مالية",
        "tags": [
          "Finance"
        ]
      },
      "get": {
        "operationId": "FinanceController_getReconciliations",
        "parameters": [
          {
            "name": "status",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "الحصول على كل المطابقات",
        "tags": [
          "Finance"
        ]
      }
    },
    "/finance/reconciliations/{id}": {
      "get": {
        "operationId": "FinanceController_getReconciliation",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "الحصول على مطابقة",
        "tags": [
          "Finance"
        ]
      }
    },
    "/finance/reconciliations/{id}/actual-totals": {
      "patch": {
        "operationId": "FinanceController_addActualTotals",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Updated"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "إضافة الإجماليات الفعلية",
        "tags": [
          "Finance"
        ]
      }
    },
    "/finance/reconciliations/{id}/issues": {
      "post": {
        "operationId": "FinanceController_addReconciliationIssue",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "إضافة مشكلة للمطابقة",
        "tags": [
          "Finance"
        ]
      }
    },
    "/finance/reconciliations/{id}/issues/{issueIndex}/resolve": {
      "patch": {
        "operationId": "FinanceController_resolveReconciliationIssue",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "issueIndex",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Updated"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "حل مشكلة في المطابقة",
        "tags": [
          "Finance"
        ]
      }
    },
    "/finance/reports/daily": {
      "post": {
        "operationId": "FinanceController_generateDailyReport",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "date": {
                    "type": "string",
                    "format": "date"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "إنشاء تقرير يومي",
        "tags": [
          "Finance"
        ]
      }
    },
    "/finance/reports/daily/{date}": {
      "get": {
        "operationId": "FinanceController_getDailyReport",
        "parameters": [
          {
            "name": "date",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "الحصول على تقرير يومي",
        "tags": [
          "Finance"
        ]
      }
    },
    "/finance/reports": {
      "get": {
        "operationId": "FinanceController_getReports",
        "parameters": [
          {
            "name": "startDate",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "endDate",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "الحصول على التقارير",
        "tags": [
          "Finance"
        ]
      }
    },
    "/finance/reports/{id}/finalize": {
      "patch": {
        "operationId": "FinanceController_finalizeReport",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Updated"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "تثبيت تقرير",
        "tags": [
          "Finance"
        ]
      }
    },
    "/finance/commission-plans": {
      "get": {
        "operationId": "FinanceController_getCommissionPlans",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "خطط العمولات",
        "tags": [
          "Finance"
        ]
      },
      "post": {
        "operationId": "FinanceController_createCommissionPlan",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "percentage": {
                    "type": "number"
                  },
                  "minAmount": {
                    "type": "number"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "إنشاء خطة عمولة",
        "tags": [
          "Finance"
        ]
      }
    },
    "/finance/commission-plans/{id}": {
      "patch": {
        "operationId": "FinanceController_updateCommissionPlan",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Updated"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "تحديث خطة عمولة",
        "tags": [
          "Finance"
        ]
      }
    },
    "/delivery/cart": {
      "get": {
        "operationId": "CartController_getMyCart",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "الحصول على سلتي",
        "tags": [
          "Cart"
        ]
      },
      "delete": {
        "operationId": "CartController_clearCart",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Deleted"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "تفريغ السلة",
        "tags": [
          "Cart"
        ]
      }
    },
    "/delivery/cart/user/{userId}": {
      "get": {
        "operationId": "CartController_getUserCart",
        "parameters": [
          {
            "name": "userId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "الحصول على سلة مستخدم",
        "tags": [
          "Cart"
        ]
      }
    },
    "/delivery/cart/{cartId}": {
      "get": {
        "operationId": "CartController_getCartById",
        "parameters": [
          {
            "name": "cartId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "الحصول على سلة بالمعرف",
        "tags": [
          "Cart"
        ]
      }
    },
    "/delivery/cart/{id}": {
      "delete": {
        "operationId": "CartController_deleteCartItem",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Deleted"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "حذف سلة أو منتج من السلة",
        "tags": [
          "Cart"
        ]
      }
    },
    "/delivery/cart/items": {
      "post": {
        "operationId": "CartController_addToCart",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddToCartDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "إضافة منتج للسلة",
        "tags": [
          "Cart"
        ]
      }
    },
    "/delivery/cart/add": {
      "post": {
        "operationId": "CartController_addToCartCompat",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "items": {
                    "type": "array"
                  },
                  "store": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "إضافة منتج للسلة (توافق)",
        "tags": [
          "Cart"
        ]
      }
    },
    "/delivery/cart/items/{productId}": {
      "patch": {
        "operationId": "CartController_updateCartItem",
        "parameters": [
          {
            "name": "productId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateCartItemDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Updated"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "تحديث كمية منتج",
        "tags": [
          "Cart"
        ]
      },
      "delete": {
        "operationId": "CartController_removeFromCart",
        "parameters": [
          {
            "name": "productId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Deleted"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "حذف منتج من السلة",
        "tags": [
          "Cart"
        ]
      }
    },
    "/delivery/cart/{productId}": {
      "patch": {
        "operationId": "CartController_updateCartItemCompat",
        "parameters": [
          {
            "name": "productId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateCartItemDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Updated"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "تحديث كمية منتج (توافق)",
        "tags": [
          "Cart"
        ]
      },
      "delete": {
        "operationId": "CartController_removeFromCartCompat",
        "parameters": [
          {
            "name": "productId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Deleted"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "حذف منتج من السلة (توافق)",
        "tags": [
          "Cart"
        ]
      }
    },
    "/delivery/cart/note": {
      "patch": {
        "operationId": "CartController_addNote",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddNoteDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Updated"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "إضافة ملاحظة",
        "tags": [
          "Cart"
        ]
      }
    },
    "/delivery/cart/delivery-address": {
      "patch": {
        "operationId": "CartController_addDeliveryAddress",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddDeliveryAddressDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Updated"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "إضافة عنوان التوصيل",
        "tags": [
          "Cart"
        ]
      }
    },
    "/delivery/cart/count": {
      "get": {
        "operationId": "CartController_getCartCount",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "عدد العناصر في السلة",
        "tags": [
          "Cart"
        ]
      }
    },
    "/delivery/cart/fee": {
      "get": {
        "operationId": "CartController_getCartFee",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "حساب رسوم التوصيل",
        "tags": [
          "Cart"
        ]
      }
    },
    "/delivery/cart/merge": {
      "post": {
        "operationId": "CartController_mergeCart",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "guestCartId": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "دمج سلة الضيف مع سلة المستخدم",
        "tags": [
          "Cart"
        ]
      }
    },
    "/delivery/cart/shein": {
      "get": {
        "operationId": "CartController_getMySheinCart",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "الحصول على سلة Shein",
        "tags": [
          "Cart"
        ]
      },
      "delete": {
        "operationId": "CartController_clearSheinCart",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Deleted"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "تفريغ سلة Shein",
        "tags": [
          "Cart"
        ]
      }
    },
    "/delivery/cart/shein/items": {
      "post": {
        "operationId": "CartController_addToSheinCart",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddToSheinCartDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "إضافة منتج Shein للسلة",
        "tags": [
          "Cart"
        ]
      }
    },
    "/delivery/cart/shein/items/{sheinProductId}": {
      "patch": {
        "operationId": "CartController_updateSheinCartItem",
        "parameters": [
          {
            "name": "sheinProductId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateSheinCartItemDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Updated"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "تحديث كمية منتج Shein",
        "tags": [
          "Cart"
        ]
      },
      "delete": {
        "operationId": "CartController_removeFromSheinCart",
        "parameters": [
          {
            "name": "sheinProductId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Deleted"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "حذف منتج Shein من السلة",
        "tags": [
          "Cart"
        ]
      }
    },
    "/delivery/cart/shein/shipping": {
      "patch": {
        "operationId": "CartController_updateSheinShipping",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateSheinShippingDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Updated"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "تحديث تكاليف الشحن",
        "tags": [
          "Cart"
        ]
      }
    },
    "/delivery/cart/shein/note": {
      "patch": {
        "operationId": "CartController_addSheinNote",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddNoteDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Updated"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "إضافة ملاحظة لسلة Shein",
        "tags": [
          "Cart"
        ]
      }
    },
    "/delivery/cart/combined": {
      "get": {
        "operationId": "CartController_getCombinedCart",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "الحصول على السلة الموحدة",
        "tags": [
          "Cart"
        ]
      }
    },
    "/delivery/cart/combined/clear-all": {
      "delete": {
        "operationId": "CartController_clearAllCarts",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Deleted"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "تفريغ كل السلات",
        "tags": [
          "Cart"
        ]
      }
    },
    "/delivery/cart/abandoned": {
      "get": {
        "operationId": "CartController_getAbandonedCarts",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "الحصول على السلات المهجورة (Admin)",
        "tags": [
          "Cart"
        ]
      }
    },
    "/delivery/cart/{cartId}/items/{productId}": {
      "delete": {
        "operationId": "CartController_deleteSpecificCartItem",
        "parameters": [
          {
            "name": "cartId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "productId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Deleted"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "حذف منتج من سلة محددة (Admin)",
        "tags": [
          "Cart"
        ]
      }
    },
    "/delivery/cart/{cartId}/retarget/push": {
      "post": {
        "operationId": "CartController_sendRetargetNotification",
        "parameters": [
          {
            "name": "cartId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "إرسال إشعار استعادة السلة (Admin)",
        "tags": [
          "Cart"
        ]
      }
    },
    "/utility/options": {
      "get": {
        "operationId": "UtilityController_getUtilityOptions",
        "parameters": [
          {
            "name": "city",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "summary": "الحصول على خيارات الغاز والماء (public)",
        "tags": [
          "Utility"
        ]
      }
    },
    "/utility/calculate-price": {
      "post": {
        "operationId": "UtilityController_calculatePrice",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CalculateUtilityPriceDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "summary": "حساب سعر خدمة الغاز أو الماء",
        "tags": [
          "Utility"
        ]
      }
    },
    "/utility/pricing": {
      "post": {
        "operationId": "UtilityController_createPricing",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUtilityPricingDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "إنشاء تسعير لمدينة",
        "tags": [
          "Utility"
        ]
      },
      "get": {
        "operationId": "UtilityController_getAllPricing",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "الحصول على كل التسعيرات",
        "tags": [
          "Utility"
        ]
      }
    },
    "/utility/pricing/{city}": {
      "get": {
        "operationId": "UtilityController_getPricingByCity",
        "parameters": [
          {
            "name": "city",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "الحصول على تسعير مدينة",
        "tags": [
          "Utility"
        ]
      },
      "patch": {
        "operationId": "UtilityController_updatePricing",
        "parameters": [
          {
            "name": "city",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUtilityPricingDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Updated"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "تحديث تسعير مدينة",
        "tags": [
          "Utility"
        ]
      },
      "delete": {
        "operationId": "UtilityController_deletePricing",
        "parameters": [
          {
            "name": "city",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Deleted"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "حذف تسعير مدينة",
        "tags": [
          "Utility"
        ]
      }
    },
    "/utility/options/gas": {
      "patch": {
        "operationId": "UtilityController_upsertGas",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "price": {
                    "type": "number"
                  },
                  "unit": {
                    "type": "string"
                  },
                  "provider": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Updated"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "تحديث/إنشاء إعدادات الغاز",
        "tags": [
          "Utility"
        ]
      }
    },
    "/utility/options/water": {
      "patch": {
        "operationId": "UtilityController_upsertWater",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "price": {
                    "type": "number"
                  },
                  "unit": {
                    "type": "string"
                  },
                  "provider": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Updated"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "تحديث/إنشاء إعدادات الماء",
        "tags": [
          "Utility"
        ]
      }
    },
    "/utility/daily": {
      "get": {
        "operationId": "UtilityController_listDaily",
        "parameters": [
          {
            "name": "kind",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "city",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "الحصول على قائمة الأسعار اليومية",
        "tags": [
          "Utility"
        ]
      },
      "post": {
        "operationId": "UtilityController_upsertDaily",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateDailyPriceDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "إضافة/تحديث سعر يومي",
        "tags": [
          "Utility"
        ]
      },
      "delete": {
        "operationId": "UtilityController_deleteDailyByKey",
        "parameters": [
          {
            "name": "kind",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "city",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "date",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "variant",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Deleted"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "حذف سعر يومي حسب المفتاح المركب",
        "tags": [
          "Utility"
        ]
      }
    },
    "/utility/daily/{id}": {
      "delete": {
        "operationId": "UtilityController_deleteDaily",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Deleted"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "حذف سعر يومي حسب ID",
        "tags": [
          "Utility"
        ]
      }
    },
    "/utility/order": {
      "post": {
        "operationId": "UtilityController_createOrder",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUtilityOrderDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "إنشاء طلب غاز أو ماء",
        "tags": [
          "Utility"
        ]
      }
    },
    "/utility/orders": {
      "get": {
        "operationId": "UtilityController_getUserOrders",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "جلب طلبات المستخدم",
        "tags": [
          "Utility"
        ]
      }
    },
    "/utility/order/{id}": {
      "get": {
        "operationId": "UtilityController_getOrder",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "جلب تفاصيل طلب",
        "tags": [
          "Utility"
        ]
      }
    },
    "/utility/order/{id}/status": {
      "patch": {
        "operationId": "UtilityController_updateOrderStatus",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Updated"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "تحديث حالة الطلب",
        "tags": [
          "Utility"
        ]
      }
    },
    "/utility/order/{id}/cancel": {
      "patch": {
        "operationId": "UtilityController_cancelOrder",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Updated"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "إلغاء الطلب",
        "tags": [
          "Utility"
        ]
      }
    },
    "/utility/order/{id}/rate": {
      "post": {
        "operationId": "UtilityController_rateOrder",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "تقييم الطلب",
        "tags": [
          "Utility"
        ]
      }
    },
    "/utility/order/{id}/assign-driver": {
      "post": {
        "operationId": "UtilityController_assignDriver",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "تعيين سائق للطلب",
        "tags": [
          "Utility"
        ]
      }
    },
    "/utility/admin/orders": {
      "get": {
        "operationId": "UtilityController_getAllOrders",
        "parameters": [
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "cursor",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "جلب جميع الطلبات (admin)",
        "tags": [
          "Utility"
        ]
      }
    },
    "/akhdimni/errands/calculate-fee": {
      "post": {
        "operationId": "AkhdimniController_calculateFee",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CalculateFeeDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "حساب رسوم المهمة قبل إنشائها",
        "tags": [
          "Akhdimni"
        ]
      }
    },
    "/akhdimni/errands": {
      "post": {
        "operationId": "AkhdimniController_createErrand",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateErrandDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "إنشاء طلب مهمة (أخدمني)",
        "tags": [
          "Akhdimni"
        ]
      }
    },
    "/akhdimni/my-errands": {
      "get": {
        "operationId": "AkhdimniController_getMyErrands",
        "parameters": [
          {
            "name": "status",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "طلباتي من أخدمني",
        "tags": [
          "Akhdimni"
        ]
      }
    },
    "/akhdimni/errands/{id}": {
      "get": {
        "operationId": "AkhdimniController_getErrand",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "الحصول على طلب محدد",
        "tags": [
          "Akhdimni"
        ]
      }
    },
    "/akhdimni/errands/{id}/cancel": {
      "patch": {
        "operationId": "AkhdimniController_cancelErrand",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Updated"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "إلغاء طلب",
        "tags": [
          "Akhdimni"
        ]
      }
    },
    "/akhdimni/errands/{id}/rate": {
      "post": {
        "operationId": "AkhdimniController_rateErrand",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RateErrandDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "تقييم المهمة",
        "tags": [
          "Akhdimni"
        ]
      }
    },
    "/akhdimni/driver/my-errands": {
      "get": {
        "operationId": "AkhdimniController_getMyDriverErrands",
        "parameters": [
          {
            "name": "status",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "مهماتي كسائق",
        "tags": [
          "Akhdimni"
        ]
      }
    },
    "/akhdimni/errands/{id}/status": {
      "patch": {
        "operationId": "AkhdimniController_updateErrandStatus",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateErrandStatusDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Updated"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "تحديث حالة المهمة (سائق)",
        "tags": [
          "Akhdimni"
        ]
      }
    },
    "/akhdimni/admin/errands": {
      "get": {
        "operationId": "AkhdimniController_getAllErrands",
        "parameters": [
          {
            "name": "status",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "required": true,
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "cursor",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "كل طلبات أخدمني (إدارة)",
        "tags": [
          "Akhdimni"
        ]
      }
    },
    "/akhdimni/admin/errands/{id}/assign-driver": {
      "post": {
        "operationId": "AkhdimniController_assignDriver",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AssignDriverDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "تعيين سائق لمهمة",
        "tags": [
          "Akhdimni"
        ]
      }
    },
    "/errands/order": {
      "post": {
        "operationId": "ErrandsController_createErrandOrder",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateErrandDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "إنشاء طلب مهمة",
        "tags": [
          "Errands"
        ]
      }
    },
    "/errands/user/{id}": {
      "get": {
        "operationId": "ErrandsController_getUserErrands",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "status",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "طلبات المستخدم",
        "tags": [
          "Errands"
        ]
      }
    },
    "/errands/categories": {
      "get": {
        "operationId": "ErrandsController_getErrandCategories",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "فئات المهام",
        "tags": [
          "Errands"
        ]
      }
    },
    "/errands/drivers/available": {
      "get": {
        "operationId": "ErrandsController_getAvailableDrivers",
        "parameters": [
          {
            "name": "lat",
            "required": false,
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "lng",
            "required": false,
            "in": "query",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "السائقون المتاحون",
        "tags": [
          "Errands"
        ]
      }
    },
    "/errands/{id}": {
      "get": {
        "operationId": "ErrandsController_getErrand",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "الحصول على مهمة محددة",
        "tags": [
          "Errands"
        ]
      }
    },
    "/promotions/by-placement": {
      "get": {
        "operationId": "PromotionController_getPromotionsByPlacement",
        "parameters": [
          {
            "name": "channel",
            "required": false,
            "in": "query",
            "schema": {
              "enum": [
                "app",
                "web"
              ],
              "type": "string"
            }
          },
          {
            "name": "city",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "placement",
            "required": true,
            "in": "query",
            "schema": {
              "enum": [
                "home_hero",
                "home_strip",
                "category_header",
                "category_feed",
                "store_header",
                "search_banner",
                "cart",
                "checkout"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "summary": "الحصول على عروض حسب الموضع (public)",
        "tags": [
          "Promotion"
        ]
      }
    },
    "/promotions/{id}/click": {
      "post": {
        "operationId": "PromotionController_recordClick",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "summary": "تسجيل نقرة على عرض",
        "tags": [
          "Promotion"
        ]
      }
    },
    "/promotions/{id}/conversion": {
      "post": {
        "operationId": "PromotionController_recordConversion",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "summary": "تسجيل تحويل (طلب من العرض)",
        "tags": [
          "Promotion"
        ]
      }
    },
    "/promotions": {
      "post": {
        "operationId": "PromotionController_createPromotion",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePromotionDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "إنشاء عرض ترويجي",
        "tags": [
          "Promotion"
        ]
      },
      "get": {
        "operationId": "PromotionController_getAllPromotions",
        "parameters": [
          {
            "name": "isActive",
            "required": true,
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "الحصول على كل العروض",
        "tags": [
          "Promotion"
        ]
      }
    },
    "/promotions/{id}": {
      "get": {
        "operationId": "PromotionController_getPromotion",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "الحصول على عرض محدد",
        "tags": [
          "Promotion"
        ]
      },
      "patch": {
        "operationId": "PromotionController_updatePromotion",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdatePromotionDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Updated"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "تحديث عرض",
        "tags": [
          "Promotion"
        ]
      },
      "delete": {
        "operationId": "PromotionController_deletePromotion",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Deleted"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "حذف عرض",
        "tags": [
          "Promotion"
        ]
      }
    },
    "/promotions/stats/overview": {
      "get": {
        "operationId": "PromotionController_getStatistics",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "إحصائيات العروض",
        "tags": [
          "Promotion"
        ]
      }
    },
    "/merchants": {
      "post": {
        "operationId": "MerchantController_createMerchant",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateMerchantDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "إنشاء تاجر جديد",
        "tags": [
          "Merchant"
        ]
      },
      "get": {
        "operationId": "MerchantController_getAllMerchants",
        "parameters": [
          {
            "name": "isActive",
            "required": true,
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "الحصول على كل التجار",
        "tags": [
          "Merchant"
        ]
      }
    },
    "/merchants/{id}": {
      "get": {
        "operationId": "MerchantController_getMerchant",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "الحصول على تاجر محدد",
        "tags": [
          "Merchant"
        ]
      },
      "patch": {
        "operationId": "MerchantController_updateMerchant",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateMerchantDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Updated"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "تحديث تاجر",
        "tags": [
          "Merchant"
        ]
      },
      "delete": {
        "operationId": "MerchantController_deleteMerchant",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Deleted"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "حذف تاجر",
        "tags": [
          "Merchant"
        ]
      }
    },
    "/merchants/catalog/products": {
      "post": {
        "operationId": "MerchantController_createProductCatalog",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateProductCatalogDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "إضافة منتج للكتالوج",
        "tags": [
          "Merchant"
        ]
      },
      "get": {
        "operationId": "MerchantController_getAllProductCatalogs",
        "parameters": [
          {
            "name": "usageType",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "summary": "الحصول على منتجات الكتالوج (public)",
        "tags": [
          "Merchant"
        ]
      }
    },
    "/merchants/catalog/products/{id}": {
      "get": {
        "operationId": "MerchantController_getProductCatalog",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found"
          }
        },
        "summary": "الحصول على منتج من الكتالوج (public)",
        "tags": [
          "Merchant"
        ]
      },
      "patch": {
        "operationId": "MerchantController_updateProductCatalog",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateProductCatalogDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Updated"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "تحديث منتج في الكتالوج",
        "tags": [
          "Merchant"
        ]
      }
    },
    "/merchants/products": {
      "get": {
        "operationId": "MerchantController_getAllMerchantProducts",
        "parameters": [
          {
            "name": "merchantId",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "storeId",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "isAvailable",
            "required": true,
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "الحصول على جميع منتجات التجار",
        "tags": [
          "Merchant"
        ]
      },
      "post": {
        "operationId": "MerchantController_createMerchantProduct",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateMerchantProductDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "إضافة منتج لمتجر التاجر",
        "tags": [
          "Merchant"
        ]
      }
    },
    "/merchants/products/{id}": {
      "get": {
        "operationId": "MerchantController_getMerchantProduct",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found"
          }
        },
        "summary": "الحصول على منتج تاجر محدد",
        "tags": [
          "Merchant"
        ]
      },
      "patch": {
        "operationId": "MerchantController_updateMerchantProduct",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateMerchantProductDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Updated"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "تحديث منتج التاجر",
        "tags": [
          "Merchant"
        ]
      },
      "delete": {
        "operationId": "MerchantController_deleteMerchantProduct",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Deleted"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "حذف منتج تاجر",
        "tags": [
          "Merchant"
        ]
      }
    },
    "/merchants/{merchantId}/products": {
      "get": {
        "operationId": "MerchantController_getMerchantProducts",
        "parameters": [
          {
            "name": "merchantId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "storeId",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "isAvailable",
            "required": true,
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found"
          }
        },
        "summary": "منتجات التاجر (public)",
        "tags": [
          "Merchant"
        ]
      }
    },
    "/merchants/stores/{storeId}/products": {
      "get": {
        "operationId": "MerchantController_getStoreProducts",
        "parameters": [
          {
            "name": "storeId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sectionId",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found"
          }
        },
        "summary": "منتجات المتجر (public)",
        "tags": [
          "Merchant"
        ]
      }
    },
    "/merchants/products/{id}/stock": {
      "patch": {
        "operationId": "MerchantController_updateStock",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Updated"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "تحديث مخزون منتج",
        "tags": [
          "Merchant"
        ]
      }
    },
    "/merchants/categories": {
      "post": {
        "operationId": "MerchantController_createCategory",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateMerchantCategoryDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "إنشاء فئة منتجات",
        "tags": [
          "Merchant"
        ]
      },
      "get": {
        "operationId": "MerchantController_getCategories",
        "parameters": [
          {
            "name": "parent",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "summary": "الحصول على الفئات (public)",
        "tags": [
          "Merchant"
        ]
      }
    },
    "/merchants/categories/{id}": {
      "patch": {
        "operationId": "MerchantController_updateCategory",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateMerchantCategoryDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Updated"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "تحديث فئة",
        "tags": [
          "Merchant"
        ]
      },
      "delete": {
        "operationId": "MerchantController_deleteCategory",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Deleted"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "حذف فئة",
        "tags": [
          "Merchant"
        ]
      }
    },
    "/merchants/attributes": {
      "post": {
        "operationId": "MerchantController_createAttribute",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateAttributeDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "إنشاء خاصية منتج",
        "tags": [
          "Merchant"
        ]
      },
      "get": {
        "operationId": "MerchantController_getAttributes",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "summary": "الحصول على الخصائص (public)",
        "tags": [
          "Merchant"
        ]
      }
    },
    "/merchants/attributes/{id}": {
      "patch": {
        "operationId": "MerchantController_updateAttribute",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateAttributeDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Updated"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "تحديث خاصية",
        "tags": [
          "Merchant"
        ]
      },
      "delete": {
        "operationId": "MerchantController_deleteAttribute",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Deleted"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "حذف خاصية",
        "tags": [
          "Merchant"
        ]
      }
    },
    "/content/banners": {
      "get": {
        "operationId": "ContentController_getActiveBanners",
        "parameters": [
          {
            "name": "placement",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "summary": "الحصول على البانرات النشطة (public)",
        "tags": [
          "Content"
        ]
      },
      "post": {
        "operationId": "ContentController_createBanner",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateBannerDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "إنشاء بانر جديد",
        "tags": [
          "Content"
        ]
      }
    },
    "/content/banners/{id}/click": {
      "post": {
        "operationId": "ContentController_recordBannerClick",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "summary": "تسجيل نقرة على بانر",
        "tags": [
          "Content"
        ]
      }
    },
    "/content/admin/banners": {
      "get": {
        "operationId": "ContentController_getAllBanners",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "كل البانرات (admin)",
        "tags": [
          "Content"
        ]
      }
    },
    "/content/banners/{id}": {
      "patch": {
        "operationId": "ContentController_updateBanner",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateBannerDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Updated"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "تحديث بانر",
        "tags": [
          "Content"
        ]
      },
      "delete": {
        "operationId": "ContentController_deleteBanner",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Deleted"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "حذف بانر",
        "tags": [
          "Content"
        ]
      }
    },
    "/content/stores/{storeId}/sections": {
      "get": {
        "operationId": "ContentController_getStoreSections",
        "parameters": [
          {
            "name": "storeId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found"
          }
        },
        "summary": "الحصول على أقسام المتجر (public)",
        "tags": [
          "Content"
        ]
      }
    },
    "/content/sections": {
      "post": {
        "operationId": "ContentController_createStoreSection",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateStoreSectionDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "إنشاء قسم متجر",
        "tags": [
          "Content"
        ]
      }
    },
    "/content/sections/{id}": {
      "patch": {
        "operationId": "ContentController_updateStoreSection",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateStoreSectionDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Updated"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "تحديث قسم",
        "tags": [
          "Content"
        ]
      },
      "delete": {
        "operationId": "ContentController_deleteStoreSection",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Deleted"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "حذف قسم",
        "tags": [
          "Content"
        ]
      }
    },
    "/content/subscription-plans": {
      "get": {
        "operationId": "ContentController_getSubscriptionPlans",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "summary": "الحصول على خطط الاشتراك (public)",
        "tags": [
          "Content"
        ]
      },
      "post": {
        "operationId": "ContentController_createSubscriptionPlan",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateSubscriptionPlanDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "إنشاء خطة اشتراك",
        "tags": [
          "Content"
        ]
      }
    },
    "/content/subscribe": {
      "post": {
        "operationId": "ContentController_subscribe",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SubscribeDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "الاشتراك في خطة",
        "tags": [
          "Content"
        ]
      }
    },
    "/content/my-subscription": {
      "get": {
        "operationId": "ContentController_getMySubscription",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "الحصول على اشتراكي",
        "tags": [
          "Content"
        ]
      }
    },
    "/content/my-subscription/cancel": {
      "patch": {
        "operationId": "ContentController_cancelSubscription",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "reason": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Updated"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "إلغاء الاشتراك",
        "tags": [
          "Content"
        ]
      }
    },
    "/content/pages": {
      "get": {
        "operationId": "ContentController_getCMSPages",
        "parameters": [
          {
            "name": "type",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "summary": "الحصول على صفحات CMS (public)",
        "tags": [
          "Content"
        ]
      }
    },
    "/content/pages/{slug}": {
      "get": {
        "operationId": "ContentController_getCMSPageBySlug",
        "parameters": [
          {
            "name": "slug",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found"
          }
        },
        "summary": "الحصول على صفحة CMS بالـ slug",
        "tags": [
          "Content"
        ]
      }
    },
    "/content/admin/pages": {
      "post": {
        "operationId": "ContentController_createCMSPage",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": {
                    "type": "string"
                  },
                  "slug": {
                    "type": "string"
                  },
                  "content": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "إنشاء صفحة CMS",
        "tags": [
          "Content"
        ]
      }
    },
    "/content/admin/pages/{id}": {
      "patch": {
        "operationId": "ContentController_updateCMSPage",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Updated"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "تحديث صفحة CMS",
        "tags": [
          "Content"
        ]
      }
    },
    "/content/app-settings": {
      "get": {
        "operationId": "ContentController_getAppSettings",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "summary": "إعدادات التطبيق (public)",
        "tags": [
          "Content"
        ]
      }
    },
    "/content/admin/app-settings": {
      "patch": {
        "operationId": "ContentController_updateAppSettings",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "minAppVersion": {
                    "type": "string"
                  },
                  "maintenanceMode": {
                    "type": "boolean"
                  },
                  "supportEmail": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Updated"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "تحديث إعدادات التطبيق",
        "tags": [
          "Content"
        ]
      }
    },
    "/content/faqs": {
      "get": {
        "operationId": "ContentController_getFAQs",
        "parameters": [
          {
            "name": "category",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "summary": "الأسئلة الشائعة (public)",
        "tags": [
          "Content"
        ]
      }
    },
    "/content/admin/faqs": {
      "post": {
        "operationId": "ContentController_createFAQ",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "question": {
                    "type": "string"
                  },
                  "answer": {
                    "type": "string"
                  },
                  "category": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "إضافة سؤال شائع",
        "tags": [
          "Content"
        ]
      }
    },
    "/content/admin/faqs/{id}": {
      "patch": {
        "operationId": "ContentController_updateFAQ",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Updated"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "تحديث سؤال شائع",
        "tags": [
          "Content"
        ]
      },
      "delete": {
        "operationId": "ContentController_deleteFAQ",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Deleted"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "حذف سؤال شائع",
        "tags": [
          "Content"
        ]
      }
    },
    "/er/employees": {
      "post": {
        "operationId": "ERController_createEmployee",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateEmployeeDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "bearer": []
          },
          {
            "bearer": []
          }
        ],
        "summary": "إضافة موظف جديد",
        "tags": [
          "ER System"
        ]
      },
      "get": {
        "operationId": "ERController_getAllEmployees",
        "parameters": [
          {
            "name": "status",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "bearer": []
          },
          {
            "bearer": []
          }
        ],
        "summary": "الحصول على كل الموظفين",
        "tags": [
          "ER System"
        ]
      }
    },
    "/er/employees/{id}": {
      "get": {
        "operationId": "ERController_getEmployee",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found"
          }
        },
        "security": [
          {
            "bearer": []
          },
          {
            "bearer": []
          }
        ],
        "summary": "الحصول على موظف محدد",
        "tags": [
          "ER System"
        ]
      },
      "patch": {
        "operationId": "ERController_updateEmployee",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateEmployeeDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Updated"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found"
          }
        },
        "security": [
          {
            "bearer": []
          },
          {
            "bearer": []
          }
        ],
        "summary": "تحديث موظف",
        "tags": [
          "ER System"
        ]
      },
      "delete": {
        "operationId": "ERController_deleteEmployee",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Deleted"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found"
          }
        },
        "security": [
          {
            "bearer": []
          },
          {
            "bearer": []
          }
        ],
        "summary": "حذف موظف",
        "tags": [
          "ER System"
        ]
      }
    },
    "/er/attendance/check-in": {
      "post": {
        "operationId": "ERController_checkIn",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "location": {
                    "type": "object"
                  },
                  "notes": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "bearer": []
          },
          {
            "bearer": []
          }
        ],
        "summary": "تسجيل حضور",
        "tags": [
          "ER System"
        ]
      }
    },
    "/er/attendance/check-out": {
      "post": {
        "operationId": "ERController_checkOut",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "location": {
                    "type": "object"
                  },
                  "notes": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "bearer": []
          },
          {
            "bearer": []
          }
        ],
        "summary": "تسجيل انصراف",
        "tags": [
          "ER System"
        ]
      }
    },
    "/er/attendance/{employeeId}": {
      "get": {
        "operationId": "ERController_getEmployeeAttendance",
        "parameters": [
          {
            "name": "employeeId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "month",
            "required": true,
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "year",
            "required": true,
            "in": "query",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found"
          }
        },
        "security": [
          {
            "bearer": []
          },
          {
            "bearer": []
          }
        ],
        "summary": "سجل حضور موظف",
        "tags": [
          "ER System"
        ]
      }
    },
    "/er/leave-requests": {
      "post": {
        "operationId": "ERController_createLeaveRequest",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateLeaveRequestDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "bearer": []
          },
          {
            "bearer": []
          }
        ],
        "summary": "تقديم طلب إجازة",
        "tags": [
          "ER System"
        ]
      }
    },
    "/er/leave-requests/{id}/approve": {
      "patch": {
        "operationId": "ERController_approveLeaveRequest",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Updated"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found"
          }
        },
        "security": [
          {
            "bearer": []
          },
          {
            "bearer": []
          }
        ],
        "summary": "الموافقة على طلب إجازة",
        "tags": [
          "ER System"
        ]
      }
    },
    "/er/leave-requests/{id}/reject": {
      "patch": {
        "operationId": "ERController_rejectLeaveRequest",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Updated"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found"
          }
        },
        "security": [
          {
            "bearer": []
          },
          {
            "bearer": []
          }
        ],
        "summary": "رفض طلب إجازة",
        "tags": [
          "ER System"
        ]
      }
    },
    "/er/payroll/generate": {
      "post": {
        "operationId": "ERController_generatePayroll",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "employeeId": {
                    "type": "string"
                  },
                  "month": {
                    "type": "string"
                  },
                  "year": {
                    "type": "number"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "bearer": []
          },
          {
            "bearer": []
          }
        ],
        "summary": "إنشاء كشف راتب",
        "tags": [
          "ER System"
        ]
      }
    },
    "/er/payroll/{id}/approve": {
      "patch": {
        "operationId": "ERController_approvePayroll",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Updated"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found"
          }
        },
        "security": [
          {
            "bearer": []
          },
          {
            "bearer": []
          }
        ],
        "summary": "الموافقة على كشف راتب",
        "tags": [
          "ER System"
        ]
      }
    },
    "/er/payroll/{id}/mark-paid": {
      "patch": {
        "operationId": "ERController_markAsPaid",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Updated"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found"
          }
        },
        "security": [
          {
            "bearer": []
          },
          {
            "bearer": []
          }
        ],
        "summary": "تحديد كدفع",
        "tags": [
          "ER System"
        ]
      }
    },
    "/er/accounts": {
      "post": {
        "operationId": "ERController_createAccount",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateChartAccountDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "bearer": []
          },
          {
            "bearer": []
          }
        ],
        "summary": "إنشاء حساب",
        "tags": [
          "ER System"
        ]
      },
      "get": {
        "operationId": "ERController_getAccounts",
        "parameters": [
          {
            "name": "type",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "bearer": []
          },
          {
            "bearer": []
          }
        ],
        "summary": "دليل الحسابات",
        "tags": [
          "ER System"
        ]
      }
    },
    "/er/accounts/{id}": {
      "get": {
        "operationId": "ERController_getAccount",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found"
          }
        },
        "security": [
          {
            "bearer": []
          },
          {
            "bearer": []
          }
        ],
        "summary": "الحصول على حساب",
        "tags": [
          "ER System"
        ]
      }
    },
    "/er/journal-entries": {
      "post": {
        "operationId": "ERController_createJournalEntry",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateJournalEntryDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "bearer": []
          },
          {
            "bearer": []
          }
        ],
        "summary": "إنشاء قيد يومية",
        "tags": [
          "ER System"
        ]
      },
      "get": {
        "operationId": "ERController_getJournalEntries",
        "parameters": [
          {
            "name": "type",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "status",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "startDate",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "endDate",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "bearer": []
          },
          {
            "bearer": []
          }
        ],
        "summary": "الحصول على قيود اليومية",
        "tags": [
          "ER System"
        ]
      }
    },
    "/er/journal-entries/{id}/post": {
      "patch": {
        "operationId": "ERController_postJournalEntry",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Updated"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found"
          }
        },
        "security": [
          {
            "bearer": []
          },
          {
            "bearer": []
          }
        ],
        "summary": "ترحيل قيد",
        "tags": [
          "ER System"
        ]
      }
    },
    "/er/reports/trial-balance": {
      "get": {
        "operationId": "ERController_getTrialBalance",
        "parameters": [
          {
            "name": "date",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "bearer": []
          },
          {
            "bearer": []
          }
        ],
        "summary": "ميزان المراجعة",
        "tags": [
          "ER System"
        ]
      }
    },
    "/er/assets/{id}": {
      "delete": {
        "operationId": "ERController_deleteAsset",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Deleted"
          }
        },
        "security": [
          {
            "bearer": []
          },
          {
            "bearer": []
          }
        ],
        "summary": "حذف أصل",
        "tags": [
          "ER System"
        ]
      }
    },
    "/er/accounts/chart/{id}": {
      "delete": {
        "operationId": "ERController_deleteChartAccount",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Deleted"
          }
        },
        "security": [
          {
            "bearer": []
          },
          {
            "bearer": []
          }
        ],
        "summary": "حذف حساب من دليل الحسابات",
        "tags": [
          "ER System"
        ]
      }
    },
    "/er/documents/{id}": {
      "delete": {
        "operationId": "ERController_deleteDocument",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Deleted"
          }
        },
        "security": [
          {
            "bearer": []
          },
          {
            "bearer": []
          }
        ],
        "summary": "حذف مستند",
        "tags": [
          "ER System"
        ]
      }
    },
    "/er/documents/{id}/download": {
      "get": {
        "operationId": "ERController_downloadDocument",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "security": [
          {
            "bearer": []
          },
          {
            "bearer": []
          }
        ],
        "summary": "تنزيل مستند",
        "tags": [
          "ER System"
        ]
      }
    },
    "/er/documents/bulk": {
      "delete": {
        "operationId": "ERController_deleteBulkDocuments",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Deleted"
          }
        },
        "security": [
          {
            "bearer": []
          },
          {
            "bearer": []
          }
        ],
        "summary": "حذف مستندات متعددة",
        "tags": [
          "ER System"
        ]
      }
    },
    "/er/documents/export": {
      "get": {
        "operationId": "ERController_exportDocuments",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "security": [
          {
            "bearer": []
          },
          {
            "bearer": []
          }
        ],
        "summary": "تصدير مستندات",
        "tags": [
          "ER System"
        ]
      }
    },
    "/er/payroll/{id}": {
      "delete": {
        "operationId": "ERController_deletePayroll",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Deleted"
          }
        },
        "security": [
          {
            "bearer": []
          },
          {
            "bearer": []
          }
        ],
        "summary": "حذف كشف راتب",
        "tags": [
          "ER System"
        ]
      }
    },
    "/marketer/profile": {
      "get": {
        "operationId": "MarketerController_getProfile",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "ملفي الشخصي",
        "tags": [
          "Marketer"
        ]
      },
      "patch": {
        "operationId": "MarketerController_updateProfile",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "phone": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Updated"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "تحديث الملف الشخصي",
        "tags": [
          "Marketer"
        ]
      }
    },
    "/marketer/referrals/generate-code": {
      "post": {
        "operationId": "MarketerController_generateReferralCode",
        "parameters": [],
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "إنشاء كود إحالة",
        "tags": [
          "Marketer"
        ]
      }
    },
    "/marketer/referrals/my": {
      "get": {
        "operationId": "MarketerController_getMyReferrals",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "إحالاتي",
        "tags": [
          "Marketer"
        ]
      }
    },
    "/marketer/referrals/statistics": {
      "get": {
        "operationId": "MarketerController_getReferralStatistics",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "إحصائيات الإحالات",
        "tags": [
          "Marketer"
        ]
      }
    },
    "/marketer/stores/my": {
      "get": {
        "operationId": "MarketerController_getMyStores",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "متاجري",
        "tags": [
          "Marketer"
        ]
      }
    },
    "/marketer/stores/{id}": {
      "get": {
        "operationId": "MarketerController_getStoreDetails",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "تفاصيل متجر",
        "tags": [
          "Marketer"
        ]
      }
    },
    "/marketer/stores/{id}/performance": {
      "get": {
        "operationId": "MarketerController_getStorePerformance",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "startDate",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "endDate",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "أداء المتجر",
        "tags": [
          "Marketer"
        ]
      }
    },
    "/marketer/vendors/my": {
      "get": {
        "operationId": "MarketerController_getMyVendors",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "تجاري",
        "tags": [
          "Marketer"
        ]
      }
    },
    "/marketer/vendors/{id}": {
      "get": {
        "operationId": "MarketerController_getVendorDetails",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "تفاصيل تاجر",
        "tags": [
          "Marketer"
        ]
      }
    },
    "/marketer/commissions/my": {
      "get": {
        "operationId": "MarketerController_getMyCommissions",
        "parameters": [
          {
            "name": "status",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "عمولاتي",
        "tags": [
          "Marketer"
        ]
      }
    },
    "/marketer/commissions/statistics": {
      "get": {
        "operationId": "MarketerController_getCommissionStatistics",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "إحصائيات العمولات",
        "tags": [
          "Marketer"
        ]
      }
    },
    "/marketer/commissions/pending": {
      "get": {
        "operationId": "MarketerController_getPendingCommissions",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "العمولات المعلقة",
        "tags": [
          "Marketer"
        ]
      }
    },
    "/marketer/overview": {
      "get": {
        "operationId": "MarketerController_getOverview",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "نظرة عامة",
        "tags": [
          "Marketer"
        ]
      }
    },
    "/marketer/statistics/today": {
      "get": {
        "operationId": "MarketerController_getTodayStatistics",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "إحصائيات اليوم",
        "tags": [
          "Marketer"
        ]
      }
    },
    "/marketer/statistics/month": {
      "get": {
        "operationId": "MarketerController_getMonthStatistics",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "إحصائيات الشهر",
        "tags": [
          "Marketer"
        ]
      }
    },
    "/marketer/earnings": {
      "get": {
        "operationId": "MarketerController_getEarnings",
        "parameters": [
          {
            "name": "startDate",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "endDate",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "أرباحي",
        "tags": [
          "Marketer"
        ]
      }
    },
    "/marketer/earnings/breakdown": {
      "get": {
        "operationId": "MarketerController_getEarningsBreakdown",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "تفصيل الأرباح",
        "tags": [
          "Marketer"
        ]
      }
    },
    "/marketer/files/upload": {
      "post": {
        "operationId": "MarketerController_uploadFile",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "fileUrl": {
                    "type": "string"
                  },
                  "type": {
                    "type": "string"
                  },
                  "relatedTo": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "رفع ملف",
        "tags": [
          "Marketer"
        ]
      }
    },
    "/marketer/files": {
      "get": {
        "operationId": "MarketerController_getFiles",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "ملفاتي",
        "tags": [
          "Marketer"
        ]
      }
    },
    "/marketer/notifications": {
      "get": {
        "operationId": "MarketerController_getNotifications",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "إشعاراتي",
        "tags": [
          "Marketer"
        ]
      }
    },
    "/marketer/notifications/{id}/read": {
      "patch": {
        "operationId": "MarketerController_markNotificationRead",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Updated"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "تحديد إشعار كمقروء",
        "tags": [
          "Marketer"
        ]
      }
    },
    "/marketer/territory/stats": {
      "get": {
        "operationId": "MarketerController_getTerritoryStats",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "إحصائيات المنطقة",
        "tags": [
          "Marketer"
        ]
      }
    },
    "/analytics/roas/daily": {
      "get": {
        "operationId": "AnalyticsController_getDailyRoas",
        "parameters": [
          {
            "name": "startDate",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "endDate",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "platform",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "ROAS اليومي",
        "tags": [
          "Analytics"
        ]
      }
    },
    "/analytics/roas/summary": {
      "get": {
        "operationId": "AnalyticsController_getRoasSummary",
        "parameters": [
          {
            "name": "startDate",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "endDate",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "ملخص ROAS",
        "tags": [
          "Analytics"
        ]
      }
    },
    "/analytics/roas/by-platform": {
      "get": {
        "operationId": "AnalyticsController_getRoasByPlatform",
        "parameters": [
          {
            "name": "startDate",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "endDate",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "ROAS حسب المنصة",
        "tags": [
          "Analytics"
        ]
      }
    },
    "/analytics/roas/calculate": {
      "post": {
        "operationId": "AnalyticsController_calculateRoas",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "date": {
                    "type": "string",
                    "format": "date"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "حساب ROAS",
        "tags": [
          "Analytics"
        ]
      }
    },
    "/analytics/adspend": {
      "post": {
        "operationId": "AnalyticsController_recordAdSpend",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "date": {
                    "type": "string"
                  },
                  "platform": {
                    "type": "string"
                  },
                  "amount": {
                    "type": "number"
                  },
                  "campaign": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "تسجيل إنفاق إعلاني",
        "tags": [
          "Analytics"
        ]
      },
      "get": {
        "operationId": "AnalyticsController_getAdSpend",
        "parameters": [
          {
            "name": "startDate",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "endDate",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "platform",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "الإنفاق الإعلاني",
        "tags": [
          "Analytics"
        ]
      }
    },
    "/analytics/adspend/summary": {
      "get": {
        "operationId": "AnalyticsController_getAdSpendSummary",
        "parameters": [
          {
            "name": "startDate",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "endDate",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "ملخص الإنفاق الإعلاني",
        "tags": [
          "Analytics"
        ]
      }
    },
    "/analytics/kpis": {
      "get": {
        "operationId": "AnalyticsController_getKPIs",
        "parameters": [
          {
            "name": "startDate",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "endDate",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "مؤشرات الأداء الرئيسية",
        "tags": [
          "Analytics"
        ]
      }
    },
    "/analytics/kpis/real-time": {
      "get": {
        "operationId": "AnalyticsController_getRealTimeKPIs",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "مؤشرات الأداء الحية",
        "tags": [
          "Analytics"
        ]
      }
    },
    "/analytics/kpis/trends": {
      "get": {
        "operationId": "AnalyticsController_getKPITrends",
        "parameters": [
          {
            "name": "metric",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "period",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "اتجاهات الأداء",
        "tags": [
          "Analytics"
        ]
      }
    },
    "/analytics/events/track": {
      "post": {
        "operationId": "AnalyticsController_trackEvent",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "eventType": {
                    "type": "string"
                  },
                  "eventData": {
                    "type": "object"
                  },
                  "userId": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "تتبع حدث تسويقي",
        "tags": [
          "Analytics"
        ]
      }
    },
    "/analytics/events": {
      "get": {
        "operationId": "AnalyticsController_getEvents",
        "parameters": [
          {
            "name": "eventType",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "startDate",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "endDate",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "الأحداث التسويقية",
        "tags": [
          "Analytics"
        ]
      }
    },
    "/analytics/events/summary": {
      "get": {
        "operationId": "AnalyticsController_getEventsSummary",
        "parameters": [
          {
            "name": "startDate",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "endDate",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "ملخص الأحداث",
        "tags": [
          "Analytics"
        ]
      }
    },
    "/analytics/funnel/conversion": {
      "get": {
        "operationId": "AnalyticsController_getConversionFunnel",
        "parameters": [
          {
            "name": "startDate",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "endDate",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "قمع التحويل",
        "tags": [
          "Analytics"
        ]
      }
    },
    "/analytics/funnel/drop-off": {
      "get": {
        "operationId": "AnalyticsController_getDropOffPoints",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "نقاط الانسحاب",
        "tags": [
          "Analytics"
        ]
      }
    },
    "/analytics/users/growth": {
      "get": {
        "operationId": "AnalyticsController_getUserGrowth",
        "parameters": [
          {
            "name": "period",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "نمو المستخدمين",
        "tags": [
          "Analytics"
        ]
      }
    },
    "/analytics/users/retention": {
      "get": {
        "operationId": "AnalyticsController_getUserRetention",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "معدل الاحتفاظ",
        "tags": [
          "Analytics"
        ]
      }
    },
    "/analytics/users/cohort": {
      "get": {
        "operationId": "AnalyticsController_getCohortAnalysis",
        "parameters": [
          {
            "name": "cohortDate",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "تحليل الأفواج",
        "tags": [
          "Analytics"
        ]
      }
    },
    "/analytics/revenue/forecast": {
      "get": {
        "operationId": "AnalyticsController_getRevenueForecast",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "توقعات الإيرادات",
        "tags": [
          "Analytics"
        ]
      }
    },
    "/analytics/revenue/breakdown": {
      "get": {
        "operationId": "AnalyticsController_getRevenueBreakdown",
        "parameters": [
          {
            "name": "startDate",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "endDate",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "تفصيل الإيرادات",
        "tags": [
          "Analytics"
        ]
      }
    },
    "/analytics/advanced/dashboard-overview": {
      "get": {
        "operationId": "AnalyticsController_getDashboardOverview",
        "parameters": [
          {
            "name": "startDate",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "endDate",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "نظرة عامة متقدمة",
        "tags": [
          "Analytics"
        ]
      }
    },
    "/analytics/advanced/cohort-analysis-advanced": {
      "get": {
        "operationId": "AnalyticsController_getCohortAnalysisAdvanced",
        "parameters": [
          {
            "name": "type",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "تحليل المجموعات المتقدم",
        "tags": [
          "Analytics"
        ]
      }
    },
    "/analytics/advanced/funnel-analysis": {
      "get": {
        "operationId": "AnalyticsController_getFunnelAnalysis",
        "parameters": [
          {
            "name": "funnelType",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "تحليل القمع",
        "tags": [
          "Analytics"
        ]
      }
    },
    "/analytics/advanced/retention": {
      "get": {
        "operationId": "AnalyticsController_getRetentionRate",
        "parameters": [
          {
            "name": "period",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "معدل الاحتفاظ",
        "tags": [
          "Analytics"
        ]
      }
    },
    "/analytics/advanced/ltv": {
      "get": {
        "operationId": "AnalyticsController_getCustomerLTV",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "القيمة الدائمة للعميل",
        "tags": [
          "Analytics"
        ]
      }
    },
    "/analytics/advanced/churn-rate": {
      "get": {
        "operationId": "AnalyticsController_getChurnRate",
        "parameters": [
          {
            "name": "period",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "معدل التراجع",
        "tags": [
          "Analytics"
        ]
      }
    },
    "/analytics/advanced/geographic-distribution": {
      "get": {
        "operationId": "AnalyticsController_getGeographicDistribution",
        "parameters": [
          {
            "name": "metric",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "التوزيع الجغرافي",
        "tags": [
          "Analytics"
        ]
      }
    },
    "/analytics/advanced/peak-hours": {
      "get": {
        "operationId": "AnalyticsController_getPeakHours",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "ساعات الذروة",
        "tags": [
          "Analytics"
        ]
      }
    },
    "/analytics/advanced/product-performance": {
      "get": {
        "operationId": "AnalyticsController_getProductPerformance",
        "parameters": [
          {
            "name": "startDate",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "endDate",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "أداء المنتجات",
        "tags": [
          "Analytics"
        ]
      }
    },
    "/analytics/advanced/driver-performance": {
      "get": {
        "operationId": "AnalyticsController_getDriverPerformance",
        "parameters": [
          {
            "name": "startDate",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "endDate",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "أداء السائقين",
        "tags": [
          "Analytics"
        ]
      }
    },
    "/legal/privacy-policy": {
      "get": {
        "operationId": "LegalController_getPrivacyPolicy",
        "parameters": [
          {
            "name": "lang",
            "required": false,
            "in": "query",
            "description": "اللغة (ar أو en)",
            "schema": {
              "enum": [
                "ar",
                "en"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "لا توجد سياسة خصوصية نشطة"
          }
        },
        "summary": "الحصول على سياسة الخصوصية النشطة",
        "tags": [
          "Legal"
        ]
      }
    },
    "/legal/terms-of-service": {
      "get": {
        "operationId": "LegalController_getTermsOfService",
        "parameters": [
          {
            "name": "lang",
            "required": false,
            "in": "query",
            "description": "اللغة (ar أو en)",
            "schema": {
              "enum": [
                "ar",
                "en"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "لا توجد شروط خدمة نشطة"
          }
        },
        "summary": "الحصول على شروط الخدمة النشطة",
        "tags": [
          "Legal"
        ]
      }
    },
    "/legal/consent": {
      "post": {
        "operationId": "LegalController_recordConsent",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RecordConsentDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "تم تسجيل الموافقة بنجاح"
          },
          "400": {
            "description": "بيانات غير صحيحة"
          },
          "401": {
            "description": "غير مصرح"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "تسجيل موافقة المستخدم",
        "tags": [
          "Legal"
        ]
      }
    },
    "/legal/consent/my": {
      "get": {
        "operationId": "LegalController_getMyConsents",
        "parameters": [],
        "responses": {
          "200": {
            "description": "تم الحصول على الموافقات بنجاح"
          },
          "401": {
            "description": "غير مصرح"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "الحصول على موافقات المستخدم الحالي",
        "tags": [
          "Legal"
        ]
      }
    },
    "/legal/consent/check/{type}": {
      "get": {
        "operationId": "LegalController_checkConsent",
        "parameters": [
          {
            "name": "type",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "تم التحقق بنجاح"
          },
          "401": {
            "description": "غير مصرح"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "التحقق من موافقة المستخدم على الإصدار الحالي",
        "tags": [
          "Legal"
        ]
      }
    },
    "/legal/admin/privacy-policies": {
      "get": {
        "operationId": "LegalController_getAllPrivacyPolicies",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "ممنوع - يتطلب صلاحيات إدارية"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "الحصول على جميع سياسات الخصوصية (للإدارة)",
        "tags": [
          "Legal"
        ]
      }
    },
    "/legal/admin/privacy-policy": {
      "post": {
        "operationId": "LegalController_createPrivacyPolicy",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePrivacyPolicyDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "ممنوع - يتطلب صلاحيات إدارية"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "إنشاء سياسة خصوصية جديدة (للإدارة)",
        "tags": [
          "Legal"
        ]
      }
    },
    "/legal/admin/privacy-policy/{id}/activate": {
      "patch": {
        "operationId": "LegalController_activatePrivacyPolicy",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Updated"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "ممنوع - يتطلب صلاحيات إدارية"
          },
          "404": {
            "description": "Not found"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "تفعيل سياسة خصوصية معينة (للإدارة)",
        "tags": [
          "Legal"
        ]
      }
    },
    "/legal/admin/terms-of-service": {
      "get": {
        "operationId": "LegalController_getAllTermsOfService",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "ممنوع - يتطلب صلاحيات إدارية"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "الحصول على جميع شروط الخدمة (للإدارة)",
        "tags": [
          "Legal"
        ]
      },
      "post": {
        "operationId": "LegalController_createTermsOfService",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateTermsOfServiceDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "ممنوع - يتطلب صلاحيات إدارية"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "إنشاء شروط خدمة جديدة (للإدارة)",
        "tags": [
          "Legal"
        ]
      }
    },
    "/legal/admin/terms-of-service/{id}/activate": {
      "patch": {
        "operationId": "LegalController_activateTermsOfService",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Updated"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "ممنوع - يتطلب صلاحيات إدارية"
          },
          "404": {
            "description": "Not found"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "تفعيل شروط خدمة معينة (للإدارة)",
        "tags": [
          "Legal"
        ]
      }
    },
    "/legal/admin/consent/statistics": {
      "get": {
        "operationId": "LegalController_getConsentStatistics",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "ممنوع - يتطلب صلاحيات إدارية"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "الحصول على إحصائيات الموافقات (للإدارة)",
        "tags": [
          "Legal"
        ]
      }
    },
    "/health": {
      "get": {
        "operationId": "HealthController_check",
        "parameters": [],
        "responses": {
          "200": {
            "description": "The Health Check is successful",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "ok"
                    },
                    "info": {
                      "type": "object",
                      "example": {
                        "database": {
                          "status": "up"
                        }
                      },
                      "additionalProperties": {
                        "type": "object",
                        "required": [
                          "status"
                        ],
                        "properties": {
                          "status": {
                            "type": "string"
                          }
                        },
                        "additionalProperties": true
                      },
                      "nullable": true
                    },
                    "error": {
                      "type": "object",
                      "example": {},
                      "additionalProperties": {
                        "type": "object",
                        "required": [
                          "status"
                        ],
                        "properties": {
                          "status": {
                            "type": "string"
                          }
                        },
                        "additionalProperties": true
                      },
                      "nullable": true
                    },
                    "details": {
                      "type": "object",
                      "example": {
                        "database": {
                          "status": "up"
                        }
                      },
                      "additionalProperties": {
                        "type": "object",
                        "required": [
                          "status"
                        ],
                        "properties": {
                          "status": {
                            "type": "string"
                          }
                        },
                        "additionalProperties": true
                      }
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "The Health Check is not successful",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "error"
                    },
                    "info": {
                      "type": "object",
                      "example": {
                        "database": {
                          "status": "up"
                        }
                      },
                      "additionalProperties": {
                        "type": "object",
                        "required": [
                          "status"
                        ],
                        "properties": {
                          "status": {
                            "type": "string"
                          }
                        },
                        "additionalProperties": true
                      },
                      "nullable": true
                    },
                    "error": {
                      "type": "object",
                      "example": {
                        "redis": {
                          "status": "down",
                          "message": "Could not connect"
                        }
                      },
                      "additionalProperties": {
                        "type": "object",
                        "required": [
                          "status"
                        ],
                        "properties": {
                          "status": {
                            "type": "string"
                          }
                        },
                        "additionalProperties": true
                      },
                      "nullable": true
                    },
                    "details": {
                      "type": "object",
                      "example": {
                        "database": {
                          "status": "up"
                        },
                        "redis": {
                          "status": "down",
                          "message": "Could not connect"
                        }
                      },
                      "additionalProperties": {
                        "type": "object",
                        "required": [
                          "status"
                        ],
                        "properties": {
                          "status": {
                            "type": "string"
                          }
                        },
                        "additionalProperties": true
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Health Check - الفحص الصحي الشامل للتطبيق",
        "tags": [
          "Health"
        ]
      }
    },
    "/health/liveness": {
      "get": {
        "operationId": "HealthController_liveness",
        "parameters": [],
        "responses": {
          "200": {
            "description": "The Health Check is successful",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "ok"
                    },
                    "info": {
                      "type": "object",
                      "example": {
                        "database": {
                          "status": "up"
                        }
                      },
                      "additionalProperties": {
                        "type": "object",
                        "required": [
                          "status"
                        ],
                        "properties": {
                          "status": {
                            "type": "string"
                          }
                        },
                        "additionalProperties": true
                      },
                      "nullable": true
                    },
                    "error": {
                      "type": "object",
                      "example": {},
                      "additionalProperties": {
                        "type": "object",
                        "required": [
                          "status"
                        ],
                        "properties": {
                          "status": {
                            "type": "string"
                          }
                        },
                        "additionalProperties": true
                      },
                      "nullable": true
                    },
                    "details": {
                      "type": "object",
                      "example": {
                        "database": {
                          "status": "up"
                        }
                      },
                      "additionalProperties": {
                        "type": "object",
                        "required": [
                          "status"
                        ],
                        "properties": {
                          "status": {
                            "type": "string"
                          }
                        },
                        "additionalProperties": true
                      }
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "The Health Check is not successful",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "error"
                    },
                    "info": {
                      "type": "object",
                      "example": {
                        "database": {
                          "status": "up"
                        }
                      },
                      "additionalProperties": {
                        "type": "object",
                        "required": [
                          "status"
                        ],
                        "properties": {
                          "status": {
                            "type": "string"
                          }
                        },
                        "additionalProperties": true
                      },
                      "nullable": true
                    },
                    "error": {
                      "type": "object",
                      "example": {
                        "redis": {
                          "status": "down",
                          "message": "Could not connect"
                        }
                      },
                      "additionalProperties": {
                        "type": "object",
                        "required": [
                          "status"
                        ],
                        "properties": {
                          "status": {
                            "type": "string"
                          }
                        },
                        "additionalProperties": true
                      },
                      "nullable": true
                    },
                    "details": {
                      "type": "object",
                      "example": {
                        "database": {
                          "status": "up"
                        },
                        "redis": {
                          "status": "down",
                          "message": "Could not connect"
                        }
                      },
                      "additionalProperties": {
                        "type": "object",
                        "required": [
                          "status"
                        ],
                        "properties": {
                          "status": {
                            "type": "string"
                          }
                        },
                        "additionalProperties": true
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Liveness Probe - للـ Kubernetes",
        "tags": [
          "Health"
        ]
      }
    },
    "/health/readiness": {
      "get": {
        "operationId": "HealthController_readiness",
        "parameters": [],
        "responses": {
          "200": {
            "description": "The Health Check is successful",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "ok"
                    },
                    "info": {
                      "type": "object",
                      "example": {
                        "database": {
                          "status": "up"
                        }
                      },
                      "additionalProperties": {
                        "type": "object",
                        "required": [
                          "status"
                        ],
                        "properties": {
                          "status": {
                            "type": "string"
                          }
                        },
                        "additionalProperties": true
                      },
                      "nullable": true
                    },
                    "error": {
                      "type": "object",
                      "example": {},
                      "additionalProperties": {
                        "type": "object",
                        "required": [
                          "status"
                        ],
                        "properties": {
                          "status": {
                            "type": "string"
                          }
                        },
                        "additionalProperties": true
                      },
                      "nullable": true
                    },
                    "details": {
                      "type": "object",
                      "example": {
                        "database": {
                          "status": "up"
                        }
                      },
                      "additionalProperties": {
                        "type": "object",
                        "required": [
                          "status"
                        ],
                        "properties": {
                          "status": {
                            "type": "string"
                          }
                        },
                        "additionalProperties": true
                      }
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "The Health Check is not successful",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "error"
                    },
                    "info": {
                      "type": "object",
                      "example": {
                        "database": {
                          "status": "up"
                        }
                      },
                      "additionalProperties": {
                        "type": "object",
                        "required": [
                          "status"
                        ],
                        "properties": {
                          "status": {
                            "type": "string"
                          }
                        },
                        "additionalProperties": true
                      },
                      "nullable": true
                    },
                    "error": {
                      "type": "object",
                      "example": {
                        "redis": {
                          "status": "down",
                          "message": "Could not connect"
                        }
                      },
                      "additionalProperties": {
                        "type": "object",
                        "required": [
                          "status"
                        ],
                        "properties": {
                          "status": {
                            "type": "string"
                          }
                        },
                        "additionalProperties": true
                      },
                      "nullable": true
                    },
                    "details": {
                      "type": "object",
                      "example": {
                        "database": {
                          "status": "up"
                        },
                        "redis": {
                          "status": "down",
                          "message": "Could not connect"
                        }
                      },
                      "additionalProperties": {
                        "type": "object",
                        "required": [
                          "status"
                        ],
                        "properties": {
                          "status": {
                            "type": "string"
                          }
                        },
                        "additionalProperties": true
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Readiness Probe - للـ Kubernetes",
        "tags": [
          "Health"
        ]
      }
    },
    "/health/advanced": {
      "get": {
        "operationId": "HealthController_advanced",
        "parameters": [],
        "responses": {
          "200": {
            "description": "The Health Check is successful",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "ok"
                    },
                    "info": {
                      "type": "object",
                      "example": {
                        "database": {
                          "status": "up"
                        }
                      },
                      "additionalProperties": {
                        "type": "object",
                        "required": [
                          "status"
                        ],
                        "properties": {
                          "status": {
                            "type": "string"
                          }
                        },
                        "additionalProperties": true
                      },
                      "nullable": true
                    },
                    "error": {
                      "type": "object",
                      "example": {},
                      "additionalProperties": {
                        "type": "object",
                        "required": [
                          "status"
                        ],
                        "properties": {
                          "status": {
                            "type": "string"
                          }
                        },
                        "additionalProperties": true
                      },
                      "nullable": true
                    },
                    "details": {
                      "type": "object",
                      "example": {
                        "database": {
                          "status": "up"
                        }
                      },
                      "additionalProperties": {
                        "type": "object",
                        "required": [
                          "status"
                        ],
                        "properties": {
                          "status": {
                            "type": "string"
                          }
                        },
                        "additionalProperties": true
                      }
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "The Health Check is not successful",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "error"
                    },
                    "info": {
                      "type": "object",
                      "example": {
                        "database": {
                          "status": "up"
                        }
                      },
                      "additionalProperties": {
                        "type": "object",
                        "required": [
                          "status"
                        ],
                        "properties": {
                          "status": {
                            "type": "string"
                          }
                        },
                        "additionalProperties": true
                      },
                      "nullable": true
                    },
                    "error": {
                      "type": "object",
                      "example": {
                        "redis": {
                          "status": "down",
                          "message": "Could not connect"
                        }
                      },
                      "additionalProperties": {
                        "type": "object",
                        "required": [
                          "status"
                        ],
                        "properties": {
                          "status": {
                            "type": "string"
                          }
                        },
                        "additionalProperties": true
                      },
                      "nullable": true
                    },
                    "details": {
                      "type": "object",
                      "example": {
                        "database": {
                          "status": "up"
                        },
                        "redis": {
                          "status": "down",
                          "message": "Could not connect"
                        }
                      },
                      "additionalProperties": {
                        "type": "object",
                        "required": [
                          "status"
                        ],
                        "properties": {
                          "status": {
                            "type": "string"
                          }
                        },
                        "additionalProperties": true
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Advanced Health Check - فحص متقدم شامل",
        "tags": [
          "Health"
        ]
      }
    },
    "/health/startup": {
      "get": {
        "operationId": "HealthController_startup",
        "parameters": [],
        "responses": {
          "200": {
            "description": "التطبيق انتهى من بدء التشغيل"
          },
          "503": {
            "description": "التطبيق ما زال يبدأ"
          }
        },
        "summary": "Startup Probe - للـ Kubernetes",
        "tags": [
          "Health"
        ]
      }
    },
    "/health/detailed": {
      "get": {
        "operationId": "HealthController_detailed",
        "parameters": [],
        "responses": {
          "200": {
            "description": "معلومات تفصيلية عن صحة التطبيق"
          }
        },
        "summary": "Detailed Health Check - فحص تفصيلي",
        "tags": [
          "Health"
        ]
      }
    },
    "/health/metrics": {
      "get": {
        "operationId": "HealthController_metrics",
        "parameters": [],
        "responses": {
          "200": {
            "description": "مقاييس الصحة"
          }
        },
        "summary": "Health Metrics - مقاييس الصحة المبسطة",
        "tags": [
          "Health"
        ]
      }
    },
    "/health/info": {
      "get": {
        "operationId": "HealthController_info",
        "parameters": [],
        "responses": {
          "200": {
            "description": "معلومات التطبيق"
          }
        },
        "summary": "Application Info - معلومات التطبيق",
        "tags": [
          "Health"
        ]
      }
    },
    "/metrics": {
      "get": {
        "operationId": "MetricsController_getPrometheusMetrics",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Metrics in Prometheus format"
          }
        },
        "summary": "Prometheus Metrics Endpoint",
        "tags": [
          "Metrics"
        ]
      }
    },
    "/metrics/json": {
      "get": {
        "operationId": "MetricsController_getJsonMetrics",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Metrics in JSON format"
          }
        },
        "summary": "Metrics in JSON format",
        "tags": [
          "Metrics"
        ]
      }
    }
  },
  "info": {
    "title": "Bthwani API v2",
    "description": "NestJS API Documentation - نظام إدارة الطلبات والتجارة",
    "version": "2.0",
    "contact": {}
  },
  "tags": [
    {
      "name": "Auth",
      "description": "المصادقة وتسجيل الدخول"
    },
    {
      "name": "User",
      "description": "إدارة المستخدمين"
    },
    {
      "name": "Wallet",
      "description": "المحفظة والمعاملات المالية"
    },
    {
      "name": "Order",
      "description": "إدارة الطلبات"
    },
    {
      "name": "Driver",
      "description": "عمليات السائقين"
    },
    {
      "name": "Vendor",
      "description": "إدارة التجار"
    },
    {
      "name": "Store",
      "description": "المتاجر والمنتجات"
    },
    {
      "name": "Finance",
      "description": "المحاسبة والتقارير المالية"
    }
  ],
  "servers": [],
  "components": {
    "securitySchemes": {
      "bearer": {
        "scheme": "bearer",
        "bearerFormat": "JWT",
        "type": "http"
      }
    },
    "schemas": {
      "FirebaseAuthDto": {
        "type": "object",
        "properties": {
          "idToken": {
            "type": "string",
            "description": "Firebase ID Token"
          }
        },
        "required": [
          "idToken"
        ]
      },
      "ConsentDto": {
        "type": "object",
        "properties": {
          "consentType": {
            "type": "string",
            "description": "نوع الموافقة",
            "enum": [
              "privacy_policy",
              "terms_of_service",
              "marketing",
              "data_processing"
            ],
            "example": "privacy_policy"
          },
          "granted": {
            "type": "boolean",
            "description": "حالة الموافقة (موافق/غير موافق)",
            "example": true
          },
          "version": {
            "type": "string",
            "description": "نسخة السياسة أو الشروط",
            "example": "1.0.0"
          },
          "notes": {
            "type": "string",
            "description": "ملاحظات إضافية",
            "example": "موافقة تلقائية عند التسجيل"
          }
        },
        "required": [
          "consentType",
          "granted",
          "version"
        ]
      },
      "BulkConsentDto": {
        "type": "object",
        "properties": {
          "consents": {
            "description": "قائمة الموافقات المتعددة",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ConsentDto"
            }
          }
        },
        "required": [
          "consents"
        ]
      },
      "ForgotPasswordDto": {
        "type": "object",
        "properties": {
          "emailOrPhone": {
            "type": "string",
            "description": "البريد الإلكتروني أو رقم الهاتف",
            "example": "user@example.com"
          }
        },
        "required": [
          "emailOrPhone"
        ]
      },
      "VerifyResetCodeDto": {
        "type": "object",
        "properties": {
          "emailOrPhone": {
            "type": "string",
            "description": "البريد الإلكتروني أو رقم الهاتف",
            "example": "user@example.com"
          },
          "code": {
            "type": "string",
            "description": "رمز التحقق",
            "example": "123456"
          }
        },
        "required": [
          "emailOrPhone",
          "code"
        ]
      },
      "ResetPasswordDto": {
        "type": "object",
        "properties": {
          "emailOrPhone": {
            "type": "string",
            "description": "البريد الإلكتروني أو رقم الهاتف",
            "example": "user@example.com"
          },
          "code": {
            "type": "string",
            "description": "رمز التحقق",
            "example": "123456"
          },
          "newPassword": {
            "type": "string",
            "description": "كلمة المرور الجديدة",
            "example": "NewPassword123!"
          }
        },
        "required": [
          "emailOrPhone",
          "code",
          "newPassword"
        ]
      },
      "VerifyOtpDto": {
        "type": "object",
        "properties": {
          "phone": {
            "type": "string",
            "description": "رقم الهاتف",
            "example": "+967771234567"
          },
          "otp": {
            "type": "string",
            "description": "رمز OTP",
            "example": "123456"
          }
        },
        "required": [
          "phone",
          "otp"
        ]
      },
      "CreateTransactionDto": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "string",
            "description": "معرف المستخدم"
          },
          "userModel": {
            "type": "string",
            "description": "نوع النموذج",
            "enum": [
              "User",
              "Driver"
            ]
          },
          "amount": {
            "type": "number",
            "description": "المبلغ",
            "example": 100
          },
          "type": {
            "type": "string",
            "description": "نوع العملية",
            "enum": [
              "credit",
              "debit"
            ]
          },
          "method": {
            "type": "string",
            "description": "طريقة الدفع",
            "enum": [
              "agent",
              "card",
              "transfer",
              "payment",
              "escrow",
              "reward",
              "kuraimi",
              "withdrawal"
            ]
          },
          "description": {
            "type": "string",
            "description": "الوصف"
          },
          "bankRef": {
            "type": "string",
            "description": "رقم مرجعي بنكي"
          },
          "meta": {
            "type": "object",
            "description": "بيانات إضافية"
          }
        },
        "required": [
          "userId",
          "userModel",
          "amount",
          "type",
          "method"
        ]
      },
      "OrderItemDto": {
        "type": "object",
        "properties": {
          "productType": {
            "type": "string"
          },
          "productId": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "quantity": {
            "type": "number"
          },
          "unitPrice": {
            "type": "number"
          },
          "store": {
            "type": "string"
          },
          "image": {
            "type": "string"
          }
        },
        "required": [
          "productType",
          "productId",
          "name",
          "quantity",
          "unitPrice",
          "store"
        ]
      },
      "AddressDto": {
        "type": "object",
        "properties": {
          "label": {
            "type": "string"
          },
          "street": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "location": {
            "type": "object"
          }
        },
        "required": [
          "label",
          "street",
          "city",
          "location"
        ]
      },
      "CreateOrderDto": {
        "type": "object",
        "properties": {
          "user": {
            "type": "string",
            "description": "معرف المستخدم"
          },
          "items": {
            "description": "عناصر الطلب",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrderItemDto"
            }
          },
          "price": {
            "type": "number",
            "description": "إجمالي السعر"
          },
          "deliveryFee": {
            "type": "number",
            "description": "رسوم التوصيل"
          },
          "companyShare": {
            "type": "number",
            "description": "حصة الشركة"
          },
          "platformShare": {
            "type": "number",
            "description": "حصة المنصة"
          },
          "address": {
            "description": "العنوان",
            "allOf": [
              {
                "$ref": "#/components/schemas/AddressDto"
              }
            ]
          },
          "paymentMethod": {
            "type": "string",
            "description": "طريقة الدفع",
            "enum": [
              "cash",
              "wallet",
              "card",
              "mixed"
            ]
          },
          "orderType": {
            "type": "string",
            "description": "نوع الطلب",
            "enum": [
              "marketplace",
              "errand",
              "utility"
            ]
          },
          "walletUsed": {
            "type": "number",
            "description": "المبلغ المستخدم من المحفظة"
          },
          "cashDue": {
            "type": "number",
            "description": "المبلغ المتبقي كاش"
          }
        },
        "required": [
          "user",
          "items",
          "price",
          "deliveryFee",
          "companyShare",
          "platformShare",
          "address",
          "paymentMethod",
          "orderType"
        ]
      },
      "UpdateOrderStatusDto": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "الحالة الجديدة",
            "enum": [
              "created",
              "confirmed",
              "preparing",
              "ready",
              "picked_up",
              "on_the_way",
              "arrived",
              "delivered",
              "cancelled",
              "returned",
              "refunded",
              "failed"
            ]
          },
          "reason": {
            "type": "string",
            "description": "سبب التغيير"
          },
          "changedBy": {
            "type": "string",
            "description": "من قام بالتغيير",
            "enum": [
              "admin",
              "store",
              "driver",
              "customer"
            ]
          }
        },
        "required": [
          "status"
        ]
      },
      "CreateDriverDto": {
        "type": "object",
        "properties": {
          "fullName": {
            "type": "string",
            "description": "الاسم الكامل"
          },
          "email": {
            "type": "string",
            "description": "البريد الإلكتروني"
          },
          "password": {
            "type": "string",
            "description": "كلمة المرور"
          },
          "phone": {
            "type": "string",
            "description": "رقم الهاتف"
          },
          "role": {
            "type": "string",
            "description": "الدور",
            "enum": [
              "rider_driver",
              "light_driver",
              "women_driver"
            ]
          },
          "vehicleType": {
            "type": "string",
            "description": "نوع المركبة",
            "enum": [
              "motor",
              "bike",
              "car"
            ]
          },
          "vehicleClass": {
            "type": "string",
            "description": "فئة المركبة",
            "enum": [
              "light",
              "medium",
              "heavy"
            ]
          },
          "vehiclePower": {
            "type": "number",
            "description": "قوة المركبة"
          },
          "driverType": {
            "type": "string",
            "description": "نوع السائق",
            "enum": [
              "primary",
              "joker"
            ]
          },
          "isFemaleDriver": {
            "type": "boolean",
            "description": "سائقة أنثى"
          }
        },
        "required": [
          "fullName",
          "email",
          "password",
          "phone",
          "role",
          "vehicleType"
        ]
      },
      "UpdateLocationDto": {
        "type": "object",
        "properties": {
          "lat": {
            "type": "number",
            "description": "خط العرض"
          },
          "lng": {
            "type": "number",
            "description": "خط الطول"
          }
        },
        "required": [
          "lat",
          "lng"
        ]
      },
      "CreateVendorDto": {
        "type": "object",
        "properties": {
          "fullName": {
            "type": "string",
            "description": "الاسم الكامل"
          },
          "phone": {
            "type": "string",
            "description": "رقم الهاتف"
          },
          "email": {
            "type": "string",
            "description": "البريد الإلكتروني"
          },
          "password": {
            "type": "string",
            "description": "كلمة المرور"
          },
          "store": {
            "type": "string",
            "description": "معرف المتجر"
          },
          "createdByMarketerUid": {
            "type": "string",
            "description": "معرف المسوق"
          },
          "source": {
            "type": "string",
            "description": "المصدر",
            "enum": [
              "marketerQuickOnboard",
              "admin",
              "other"
            ]
          }
        },
        "required": [
          "fullName",
          "phone",
          "password",
          "store"
        ]
      },
      "UpdateVendorDto": {
        "type": "object",
        "properties": {
          "isActive": {
            "type": "boolean",
            "description": "حالة النشاط"
          },
          "expoPushToken": {
            "type": "string",
            "description": "توكن الإشعارات"
          },
          "notificationSettings": {
            "type": "object",
            "description": "إعدادات الإشعارات"
          }
        }
      },
      "LocationDto": {
        "type": "object",
        "properties": {
          "lat": {
            "type": "number"
          },
          "lng": {
            "type": "number"
          }
        },
        "required": [
          "lat",
          "lng"
        ]
      },
      "CreateStoreDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "اسم المتجر"
          },
          "name_ar": {
            "type": "string",
            "description": "الاسم بالعربي"
          },
          "name_en": {
            "type": "string",
            "description": "الاسم بالإنجليزي"
          },
          "address": {
            "type": "string",
            "description": "العنوان"
          },
          "location": {
            "description": "الموقع",
            "allOf": [
              {
                "$ref": "#/components/schemas/LocationDto"
              }
            ]
          },
          "category": {
            "type": "string",
            "description": "معرف الفئة"
          },
          "image": {
            "type": "string",
            "description": "صورة المتجر"
          },
          "logo": {
            "type": "string",
            "description": "الشعار"
          },
          "commissionRate": {
            "type": "number",
            "description": "نسبة العمولة"
          },
          "usageType": {
            "type": "string",
            "description": "نوع المتجر",
            "enum": [
              "restaurant",
              "grocery",
              "pharmacy",
              "bakery",
              "cafe",
              "other"
            ]
          },
          "tags": {
            "description": "الوسوم",
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "name",
          "address",
          "location"
        ]
      },
      "CreateProductDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "اسم المنتج"
          },
          "name_ar": {
            "type": "string",
            "description": "الاسم بالعربي"
          },
          "name_en": {
            "type": "string",
            "description": "الاسم بالإنجليزي"
          },
          "description": {
            "type": "string",
            "description": "الوصف"
          },
          "price": {
            "type": "number",
            "description": "السعر"
          },
          "store": {
            "type": "string",
            "description": "معرف المتجر"
          },
          "category": {
            "type": "string",
            "description": "معرف الفئة"
          },
          "image": {
            "type": "string",
            "description": "صورة المنتج"
          },
          "images": {
            "description": "الصور",
            "default": [],
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "inStock": {
            "type": "boolean",
            "description": "متوفر في المخزون",
            "default": true
          },
          "stockQuantity": {
            "type": "number",
            "description": "كمية المخزون",
            "default": 0
          },
          "discount": {
            "type": "number",
            "description": "الخصم",
            "default": 0
          }
        },
        "required": [
          "name",
          "price",
          "store",
          "images",
          "inStock",
          "stockQuantity",
          "discount"
        ]
      },
      "UpdateUserDto": {
        "type": "object",
        "properties": {
          "fullName": {
            "type": "string",
            "description": "الاسم الكامل"
          },
          "aliasName": {
            "type": "string",
            "description": "الاسم المستعار"
          },
          "phone": {
            "type": "string",
            "description": "رقم الهاتف"
          },
          "profileImage": {
            "type": "string",
            "description": "صورة الملف الشخصي"
          },
          "language": {
            "type": "string",
            "description": "اللغة",
            "enum": [
              "ar",
              "en"
            ]
          },
          "theme": {
            "type": "string",
            "description": "الثيم",
            "enum": [
              "light",
              "dark"
            ]
          },
          "pushToken": {
            "type": "string",
            "description": "توكن الإشعارات"
          }
        }
      },
      "AddAddressDto": {
        "type": "object",
        "properties": {
          "label": {
            "type": "string",
            "description": "تسمية العنوان (منزل، عمل، إلخ)"
          },
          "city": {
            "type": "string",
            "description": "المدينة"
          },
          "street": {
            "type": "string",
            "description": "الشارع"
          },
          "location": {
            "description": "الموقع الجغرافي",
            "allOf": [
              {
                "$ref": "#/components/schemas/LocationDto"
              }
            ]
          }
        },
        "required": [
          "label",
          "city",
          "street"
        ]
      },
      "SetPinDto": {
        "type": "object",
        "properties": {
          "pin": {
            "type": "string",
            "description": "رمز PIN من 4 أرقام",
            "example": "1234",
            "minLength": 4,
            "maxLength": 6
          },
          "confirmPin": {
            "type": "string",
            "description": "تأكيد رمز PIN",
            "example": "1234"
          }
        },
        "required": [
          "pin",
          "confirmPin"
        ]
      },
      "VerifyPinDto": {
        "type": "object",
        "properties": {
          "pin": {
            "type": "string",
            "description": "رمز PIN للتحقق",
            "example": "1234"
          }
        },
        "required": [
          "pin"
        ]
      },
      "CreateNotificationDto": {
        "type": "object",
        "properties": {
          "toUser": {
            "type": "string",
            "description": "معرف المستخدم المستهدف"
          },
          "audience": {
            "description": "الجمهور المستهدف",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "title": {
            "type": "string",
            "description": "العنوان"
          },
          "body": {
            "type": "string",
            "description": "المحتوى"
          },
          "data": {
            "type": "object",
            "description": "بيانات إضافية"
          },
          "collapseId": {
            "type": "string",
            "description": "معرف التجميع"
          }
        },
        "required": [
          "title",
          "body"
        ]
      },
      "CreateSuppressionDto": {
        "type": "object",
        "properties": {
          "suppressedChannels": {
            "type": "array",
            "description": "القنوات المراد حظرها",
            "example": [
              "email",
              "push"
            ],
            "items": {
              "type": "string",
              "enum": [
                "push",
                "email",
                "sms"
              ]
            }
          },
          "reason": {
            "type": "string",
            "description": "سبب الحظر",
            "enum": [
              "user_request",
              "bounce",
              "complaint",
              "unsubscribe",
              "invalid_contact",
              "too_many_failures",
              "admin_block"
            ],
            "example": "user_request"
          },
          "details": {
            "type": "string",
            "description": "تفاصيل إضافية",
            "example": "المستخدم طلب إيقاف الإشعارات"
          },
          "expiresAt": {
            "format": "date-time",
            "type": "string",
            "description": "تاريخ انتهاء الحظر",
            "example": "2025-12-31T23:59:59Z"
          }
        },
        "required": [
          "suppressedChannels",
          "reason"
        ]
      },
      "CreateCommissionDto": {
        "type": "object",
        "properties": {
          "entityId": {
            "type": "string",
            "description": "معرف الكيان (طلب، بائع، سائق، مسوق)",
            "example": "60f1b2b3c4d5e6f7g8h9i0j1"
          },
          "entityModel": {
            "type": "string",
            "description": "نوع الكيان",
            "enum": [
              "Order",
              "Vendor",
              "Driver",
              "Marketer"
            ],
            "example": "Order"
          },
          "beneficiary": {
            "type": "string",
            "description": "معرف المستفيد",
            "example": "60f1b2b3c4d5e6f7g8h9i0j2"
          },
          "beneficiaryType": {
            "type": "string",
            "description": "نوع المستفيد",
            "enum": [
              "driver",
              "vendor",
              "marketer",
              "company"
            ],
            "example": "driver"
          },
          "amount": {
            "type": "number",
            "description": "مبلغ العمولة",
            "example": 50
          },
          "rate": {
            "type": "number",
            "description": "نسبة العمولة (مثلاً 10 = 10%)",
            "example": 10
          },
          "baseAmount": {
            "type": "number",
            "description": "المبلغ الأساسي الذي حُسبت منه العمولة",
            "example": 500
          },
          "calculationType": {
            "type": "string",
            "description": "نوع الحساب",
            "enum": [
              "percentage",
              "fixed"
            ],
            "example": "percentage"
          },
          "metadata": {
            "type": "object",
            "description": "البيانات الإضافية",
            "example": {
              "orderId": "123",
              "orderType": "delivery"
            }
          },
          "notes": {
            "type": "string",
            "description": "الملاحظات",
            "example": "عمولة توصيل طلب رقم 123"
          }
        },
        "required": [
          "entityId",
          "entityModel",
          "beneficiary",
          "beneficiaryType",
          "amount",
          "rate",
          "baseAmount",
          "calculationType"
        ]
      },
      "ApprovePayoutBatchDto": {
        "type": "object",
        "properties": {}
      },
      "CreateSettlementDto": {
        "type": "object",
        "properties": {}
      },
      "ApproveSettlementDto": {
        "type": "object",
        "properties": {}
      },
      "CreateFinancialCouponDto": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "كود الكوبون",
            "example": "SAVE10"
          },
          "description": {
            "type": "string",
            "description": "الوصف",
            "example": "خصم 10% على جميع الطلبات"
          },
          "discountType": {
            "type": "string",
            "description": "نوع الخصم",
            "enum": [
              "percentage",
              "fixed"
            ],
            "example": "percentage"
          },
          "discountValue": {
            "type": "number",
            "description": "قيمة الخصم",
            "example": 10
          },
          "maxDiscountAmount": {
            "type": "number",
            "description": "الحد الأقصى للخصم",
            "example": 100
          },
          "minOrderAmount": {
            "type": "number",
            "description": "الحد الأدنى لقيمة الطلب",
            "example": 50
          },
          "maxUsage": {
            "type": "number",
            "description": "الحد الأقصى للاستخدام",
            "example": 100
          },
          "maxUsagePerUser": {
            "type": "number",
            "description": "الحد الأقصى للاستخدام لكل مستخدم",
            "example": 1,
            "default": 1
          },
          "startDate": {
            "format": "date-time",
            "type": "string",
            "description": "تاريخ البداية",
            "example": "2025-01-01"
          },
          "endDate": {
            "format": "date-time",
            "type": "string",
            "description": "تاريخ النهاية",
            "example": "2025-12-31"
          },
          "isActive": {
            "type": "boolean",
            "description": "حالة النشاط",
            "example": true,
            "default": true
          }
        },
        "required": [
          "code",
          "description",
          "discountType",
          "discountValue",
          "maxUsage",
          "maxUsagePerUser",
          "startDate",
          "endDate",
          "isActive"
        ]
      },
      "ValidateCouponDto": {
        "type": "object",
        "properties": {}
      },
      "UpdateFinancialCouponDto": {
        "type": "object",
        "properties": {}
      },
      "AddToCartDto": {
        "type": "object",
        "properties": {}
      },
      "UpdateCartItemDto": {
        "type": "object",
        "properties": {}
      },
      "AddNoteDto": {
        "type": "object",
        "properties": {}
      },
      "AddDeliveryAddressDto": {
        "type": "object",
        "properties": {}
      },
      "AddToSheinCartDto": {
        "type": "object",
        "properties": {}
      },
      "UpdateSheinCartItemDto": {
        "type": "object",
        "properties": {}
      },
      "UpdateSheinShippingDto": {
        "type": "object",
        "properties": {}
      },
      "CalculateUtilityPriceDto": {
        "type": "object",
        "properties": {}
      },
      "CreateUtilityPricingDto": {
        "type": "object",
        "properties": {}
      },
      "UpdateUtilityPricingDto": {
        "type": "object",
        "properties": {}
      },
      "CreateDailyPriceDto": {
        "type": "object",
        "properties": {}
      },
      "CreateUtilityOrderDto": {
        "type": "object",
        "properties": {}
      },
      "PointDto": {
        "type": "object",
        "properties": {
          "location": {
            "description": "موقع النقطة",
            "allOf": [
              {
                "$ref": "#/components/schemas/LocationDto"
              }
            ]
          },
          "city": {
            "type": "string",
            "description": "المدينة"
          },
          "street": {
            "type": "string",
            "description": "الشارع"
          }
        },
        "required": [
          "location"
        ]
      },
      "CalculateFeeDto": {
        "type": "object",
        "properties": {
          "category": {
            "type": "string",
            "enum": [
              "docs",
              "parcel",
              "groceries",
              "carton",
              "food",
              "fragile",
              "other"
            ],
            "description": "نوع الغرض",
            "example": "parcel"
          },
          "size": {
            "type": "string",
            "enum": [
              "small",
              "medium",
              "large"
            ],
            "description": "حجم الغرض",
            "example": "medium"
          },
          "weightKg": {
            "type": "number",
            "description": "الوزن بالكيلوجرام",
            "example": 2.5
          },
          "pickup": {
            "description": "نقطة الاستلام",
            "allOf": [
              {
                "$ref": "#/components/schemas/PointDto"
              }
            ]
          },
          "dropoff": {
            "description": "نقطة التسليم",
            "allOf": [
              {
                "$ref": "#/components/schemas/PointDto"
              }
            ]
          },
          "tip": {
            "type": "number",
            "description": "البقشيش",
            "example": 0
          }
        },
        "required": [
          "category",
          "size",
          "pickup",
          "dropoff"
        ]
      },
      "CreateErrandDto": {
        "type": "object",
        "properties": {}
      },
      "RateErrandDto": {
        "type": "object",
        "properties": {}
      },
      "UpdateErrandStatusDto": {
        "type": "object",
        "properties": {}
      },
      "AssignDriverDto": {
        "type": "object",
        "properties": {}
      },
      "CreatePromotionDto": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "description": "العنوان",
            "example": "عرض خاص"
          },
          "description": {
            "type": "string",
            "description": "الوصف",
            "example": "خصم 20% على جميع المنتجات"
          },
          "image": {
            "type": "string",
            "description": "الصورة",
            "example": "https://example.com/promo.jpg"
          },
          "link": {
            "type": "string",
            "description": "الرابط",
            "example": "/products/123"
          },
          "target": {
            "type": "string",
            "description": "الهدف",
            "enum": [
              "product",
              "store",
              "category"
            ],
            "example": "product"
          },
          "value": {
            "type": "number",
            "description": "القيمة",
            "example": 20
          },
          "valueType": {
            "type": "string",
            "description": "نوع القيمة",
            "enum": [
              "percentage",
              "fixed"
            ],
            "example": "percentage"
          },
          "product": {
            "type": "string",
            "description": "معرف المنتج"
          },
          "store": {
            "type": "string",
            "description": "معرف المتجر"
          },
          "category": {
            "type": "string",
            "description": "معرف الفئة"
          },
          "placements": {
            "type": "array",
            "description": "المواضع",
            "example": [
              "home_hero"
            ],
            "items": {
              "type": "string",
              "enum": [
                "home_hero",
                "home_strip",
                "category_header",
                "category_feed",
                "store_header",
                "search_banner",
                "cart",
                "checkout"
              ]
            }
          },
          "cities": {
            "description": "المدن",
            "example": [
              "صنعاء",
              "عدن"
            ],
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "channels": {
            "description": "القنوات",
            "example": [
              "app",
              "web"
            ],
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "stacking": {
            "type": "string",
            "description": "قاعدة التكديس",
            "enum": [
              "none",
              "best",
              "stack_same_target"
            ],
            "example": "best"
          },
          "minQty": {
            "type": "number",
            "description": "الحد الأدنى للكمية",
            "example": 2
          },
          "minOrderSubtotal": {
            "type": "number",
            "description": "الحد الأدنى لقيمة الطلب",
            "example": 100
          },
          "maxDiscountAmount": {
            "type": "number",
            "description": "الحد الأقصى للخصم",
            "example": 50
          },
          "order": {
            "type": "number",
            "description": "الترتيب",
            "example": 1
          },
          "startDate": {
            "format": "date-time",
            "type": "string",
            "description": "تاريخ البداية",
            "example": "2025-01-01"
          },
          "endDate": {
            "format": "date-time",
            "type": "string",
            "description": "تاريخ النهاية",
            "example": "2025-12-31"
          },
          "isActive": {
            "type": "boolean",
            "description": "حالة النشاط",
            "example": true,
            "default": true
          }
        },
        "required": [
          "target",
          "placements",
          "startDate",
          "endDate",
          "isActive"
        ]
      },
      "UpdatePromotionDto": {
        "type": "object",
        "properties": {}
      },
      "CreateMerchantDto": {
        "type": "object",
        "properties": {}
      },
      "UpdateMerchantDto": {
        "type": "object",
        "properties": {}
      },
      "CreateProductCatalogDto": {
        "type": "object",
        "properties": {}
      },
      "UpdateProductCatalogDto": {
        "type": "object",
        "properties": {}
      },
      "CreateMerchantProductDto": {
        "type": "object",
        "properties": {}
      },
      "UpdateMerchantProductDto": {
        "type": "object",
        "properties": {}
      },
      "CreateMerchantCategoryDto": {
        "type": "object",
        "properties": {}
      },
      "UpdateMerchantCategoryDto": {
        "type": "object",
        "properties": {}
      },
      "CreateAttributeDto": {
        "type": "object",
        "properties": {}
      },
      "UpdateAttributeDto": {
        "type": "object",
        "properties": {}
      },
      "CreateBannerDto": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "description": "العنوان",
            "example": "عرض خاص"
          },
          "description": {
            "type": "string",
            "description": "الوصف",
            "example": "خصم 50% على جميع المنتجات"
          },
          "image": {
            "type": "string",
            "description": "الصورة",
            "example": "https://example.com/banner.jpg"
          },
          "link": {
            "type": "string",
            "description": "الرابط",
            "example": "/products/123"
          },
          "store": {
            "type": "string",
            "description": "معرف المتجر"
          },
          "category": {
            "type": "string",
            "description": "معرف الفئة"
          },
          "placement": {
            "type": "string",
            "description": "موضع العرض",
            "enum": [
              "home",
              "category",
              "store",
              "search"
            ],
            "example": "home"
          },
          "order": {
            "type": "number",
            "description": "الترتيب",
            "example": 1,
            "default": 0
          },
          "startDate": {
            "format": "date-time",
            "type": "string",
            "description": "تاريخ البداية",
            "example": "2025-01-01"
          },
          "endDate": {
            "format": "date-time",
            "type": "string",
            "description": "تاريخ النهاية",
            "example": "2025-12-31"
          }
        },
        "required": [
          "image",
          "order"
        ]
      },
      "UpdateBannerDto": {
        "type": "object",
        "properties": {}
      },
      "CreateStoreSectionDto": {
        "type": "object",
        "properties": {
          "store": {
            "type": "string",
            "description": "معرف المتجر"
          },
          "name": {
            "type": "string",
            "description": "الاسم",
            "example": "خضروات"
          },
          "nameAr": {
            "type": "string",
            "description": "الاسم بالعربية",
            "example": "خضروات"
          },
          "description": {
            "type": "string",
            "description": "الوصف",
            "example": "قسم الخضروات الطازجة"
          },
          "icon": {
            "type": "string",
            "description": "الأيقونة",
            "example": "🥕"
          },
          "usageType": {
            "type": "string",
            "description": "نوع الاستخدام",
            "enum": [
              "grocery",
              "restaurant",
              "retail"
            ],
            "example": "grocery"
          },
          "order": {
            "type": "number",
            "description": "الترتيب",
            "example": 1,
            "default": 0
          }
        },
        "required": [
          "store",
          "name",
          "usageType",
          "order"
        ]
      },
      "UpdateStoreSectionDto": {
        "type": "object",
        "properties": {}
      },
      "CreateSubscriptionPlanDto": {
        "type": "object",
        "properties": {}
      },
      "SubscribeDto": {
        "type": "object",
        "properties": {}
      },
      "CreateEmployeeDto": {
        "type": "object",
        "properties": {
          "firstName": {
            "type": "string",
            "description": "الاسم الأول",
            "example": "أحمد"
          },
          "lastName": {
            "type": "string",
            "description": "اسم العائلة",
            "example": "محمد"
          },
          "email": {
            "type": "string",
            "description": "البريد الإلكتروني",
            "example": "ahmed.mohamed@company.com"
          },
          "phone": {
            "type": "string",
            "description": "رقم الهاتف",
            "example": "+966501234567"
          },
          "nationalId": {
            "type": "string",
            "description": "رقم الهوية الوطنية",
            "example": "1234567890"
          },
          "position": {
            "type": "string",
            "description": "المنصب",
            "example": "مدير مبيعات"
          },
          "department": {
            "type": "string",
            "description": "القسم",
            "example": "المبيعات"
          },
          "employmentType": {
            "type": "string",
            "description": "نوع التوظيف",
            "enum": [
              "full_time",
              "part_time",
              "contract",
              "intern"
            ],
            "example": "full_time"
          },
          "salary": {
            "type": "number",
            "description": "الراتب الأساسي",
            "example": 5000
          },
          "hireDate": {
            "type": "string",
            "description": "تاريخ التعيين",
            "example": "2025-01-15"
          },
          "terminationDate": {
            "type": "string",
            "description": "تاريخ إنهاء الخدمة",
            "example": "2025-12-31"
          },
          "address": {
            "type": "object",
            "description": "العنوان"
          },
          "emergencyContact": {
            "type": "string",
            "description": "جهة الاتصال للطوارئ",
            "example": "فاطمة محمد"
          },
          "emergencyPhone": {
            "type": "string",
            "description": "رقم هاتف الطوارئ",
            "example": "+966507654321"
          },
          "manager": {
            "type": "string",
            "description": "المدير المباشر",
            "example": "60f1b2b3c4d5e6f7g8h9i0j1"
          },
          "skills": {
            "description": "المهارات",
            "example": [
              "JavaScript",
              "Node.js",
              "React"
            ],
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "bankDetails": {
            "type": "object",
            "description": "تفاصيل البنك"
          },
          "annualLeaveDays": {
            "type": "number",
            "description": "أيام الإجازة السنوية",
            "example": 30
          },
          "sickLeaveDays": {
            "type": "number",
            "description": "أيام الإجازة المرضية",
            "example": 10
          }
        },
        "required": [
          "firstName",
          "lastName",
          "email",
          "phone",
          "position",
          "department",
          "employmentType",
          "salary",
          "hireDate"
        ]
      },
      "UpdateEmployeeDto": {
        "type": "object",
        "properties": {
          "firstName": {
            "type": "string",
            "description": "الاسم الأول",
            "example": "أحمد"
          },
          "lastName": {
            "type": "string",
            "description": "اسم العائلة",
            "example": "محمد"
          },
          "email": {
            "type": "string",
            "description": "البريد الإلكتروني",
            "example": "ahmed.mohamed@company.com"
          },
          "phone": {
            "type": "string",
            "description": "رقم الهاتف",
            "example": "+966501234567"
          },
          "nationalId": {
            "type": "string",
            "description": "رقم الهوية الوطنية",
            "example": "1234567890"
          },
          "position": {
            "type": "string",
            "description": "المنصب",
            "example": "مدير مبيعات"
          },
          "department": {
            "type": "string",
            "description": "القسم",
            "example": "المبيعات"
          },
          "employmentType": {
            "type": "string",
            "description": "نوع التوظيف",
            "enum": [
              "full_time",
              "part_time",
              "contract",
              "intern"
            ],
            "example": "full_time"
          },
          "salary": {
            "type": "number",
            "description": "الراتب الأساسي",
            "example": 5000
          },
          "hireDate": {
            "type": "string",
            "description": "تاريخ التعيين",
            "example": "2025-01-15"
          },
          "terminationDate": {
            "type": "string",
            "description": "تاريخ إنهاء الخدمة",
            "example": "2025-12-31"
          },
          "address": {
            "type": "object",
            "description": "العنوان"
          },
          "emergencyContact": {
            "type": "string",
            "description": "جهة الاتصال للطوارئ",
            "example": "فاطمة محمد"
          },
          "emergencyPhone": {
            "type": "string",
            "description": "رقم هاتف الطوارئ",
            "example": "+966507654321"
          },
          "manager": {
            "type": "string",
            "description": "المدير المباشر",
            "example": "60f1b2b3c4d5e6f7g8h9i0j1"
          },
          "skills": {
            "description": "المهارات",
            "example": [
              "JavaScript",
              "Node.js",
              "React"
            ],
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "bankDetails": {
            "type": "object",
            "description": "تفاصيل البنك"
          },
          "annualLeaveDays": {
            "type": "number",
            "description": "أيام الإجازة السنوية",
            "example": 30
          },
          "sickLeaveDays": {
            "type": "number",
            "description": "أيام الإجازة المرضية",
            "example": 10
          }
        }
      },
      "CreateLeaveRequestDto": {
        "type": "object",
        "properties": {
          "leaveType": {
            "type": "string",
            "description": "نوع الإجازة",
            "enum": [
              "annual",
              "sick",
              "unpaid",
              "maternity",
              "emergency"
            ],
            "example": "annual"
          },
          "startDate": {
            "type": "string",
            "description": "تاريخ البداية",
            "example": "2025-01-15"
          },
          "endDate": {
            "type": "string",
            "description": "تاريخ النهاية",
            "example": "2025-01-20"
          },
          "reason": {
            "type": "string",
            "description": "سبب الإجازة",
            "example": "إجازة سنوية"
          },
          "notes": {
            "type": "string",
            "description": "ملاحظات إضافية",
            "example": "سأكون متاح عبر الهاتف"
          },
          "attachments": {
            "description": "مرفقات (روابط URL)",
            "example": [
              "https://example.com/medical-certificate.pdf"
            ],
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "leaveType",
          "startDate",
          "endDate",
          "reason"
        ]
      },
      "CreateChartAccountDto": {
        "type": "object",
        "properties": {
          "accountCode": {
            "type": "string",
            "description": "رمز الحساب",
            "example": "1001"
          },
          "accountName": {
            "type": "string",
            "description": "اسم الحساب",
            "example": "Cash Account"
          },
          "accountNameAr": {
            "type": "string",
            "description": "الاسم بالعربية",
            "example": "حساب النقدية"
          },
          "accountType": {
            "type": "string",
            "description": "نوع الحساب",
            "enum": [
              "asset",
              "liability",
              "equity",
              "revenue",
              "expense"
            ],
            "example": "asset"
          },
          "normalBalance": {
            "type": "string",
            "description": "الطبيعة الطبيعية للحساب",
            "enum": [
              "debit",
              "credit"
            ],
            "example": "debit"
          },
          "parent": {
            "type": "string",
            "description": "الحساب الأب",
            "example": "60f1b2b3c4d5e6f7g8h9i0j1"
          },
          "description": {
            "type": "string",
            "description": "وصف الحساب",
            "example": "حساب للنقدية في الخزنة"
          }
        },
        "required": [
          "accountCode",
          "accountName",
          "accountType",
          "normalBalance"
        ]
      },
      "JournalLineDto": {
        "type": "object",
        "properties": {
          "account": {
            "type": "string",
            "description": "معرف الحساب",
            "example": "60f1b2b3c4d5e6f7g8h9i0j1"
          },
          "debit": {
            "type": "number",
            "description": "المبلغ المدين",
            "example": 1000
          },
          "credit": {
            "type": "number",
            "description": "المبلغ الدائن",
            "example": 0
          },
          "description": {
            "type": "string",
            "description": "وصف السطر",
            "example": "دفع نقدي"
          }
        },
        "required": [
          "account",
          "debit",
          "credit"
        ]
      },
      "CreateJournalEntryDto": {
        "type": "object",
        "properties": {
          "date": {
            "type": "string",
            "description": "تاريخ القيد",
            "example": "2025-01-15"
          },
          "description": {
            "type": "string",
            "description": "وصف القيد",
            "example": "قيد بيع بضائع"
          },
          "lines": {
            "description": "سطور القيد",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/JournalLineDto"
            }
          },
          "type": {
            "type": "string",
            "description": "نوع القيد",
            "enum": [
              "general",
              "sales",
              "purchase",
              "payment",
              "receipt",
              "adjustment"
            ],
            "example": "sales"
          },
          "reference": {
            "type": "string",
            "description": "المرجع الخارجي",
            "example": "INV-2025-001"
          },
          "relatedEntity": {
            "type": "string",
            "description": "الكيان المرتبط",
            "example": "60f1b2b3c4d5e6f7g8h9i0j1"
          },
          "relatedEntityModel": {
            "type": "string",
            "description": "نوع الكيان المرتبط",
            "example": "Order"
          },
          "notes": {
            "type": "string",
            "description": "ملاحظات إضافية",
            "example": "قيد تم إنشاؤه تلقائياً من نظام المبيعات"
          }
        },
        "required": [
          "date",
          "description",
          "lines",
          "type"
        ]
      },
      "RecordConsentDto": {
        "type": "object",
        "properties": {
          "consentType": {
            "type": "string",
            "description": "نوع الموافقة",
            "enum": [
              "privacy_policy",
              "terms_of_service"
            ],
            "example": "privacy_policy"
          },
          "version": {
            "type": "string",
            "description": "إصدار المستند",
            "example": "1.0.0"
          },
          "accepted": {
            "type": "boolean",
            "description": "هل تمت الموافقة",
            "default": true
          },
          "ipAddress": {
            "type": "string",
            "description": "عنوان IP"
          },
          "userAgent": {
            "type": "string",
            "description": "User Agent"
          }
        },
        "required": [
          "consentType",
          "version",
          "accepted"
        ]
      },
      "CreatePrivacyPolicyDto": {
        "type": "object",
        "properties": {
          "version": {
            "type": "string",
            "description": "إصدار السياسة",
            "example": "1.0.0"
          },
          "content": {
            "type": "string",
            "description": "محتوى السياسة بالعربية"
          },
          "contentEn": {
            "type": "string",
            "description": "محتوى السياسة بالإنجليزية"
          },
          "effectiveDate": {
            "format": "date-time",
            "type": "string",
            "description": "تاريخ سريان السياسة"
          },
          "isActive": {
            "type": "boolean",
            "description": "هل السياسة نشطة",
            "default": true
          }
        },
        "required": [
          "version",
          "content",
          "contentEn"
        ]
      },
      "CreateTermsOfServiceDto": {
        "type": "object",
        "properties": {
          "version": {
            "type": "string",
            "description": "إصدار الشروط",
            "example": "1.0.0"
          },
          "content": {
            "type": "string",
            "description": "محتوى الشروط بالعربية"
          },
          "contentEn": {
            "type": "string",
            "description": "محتوى الشروط بالإنجليزية"
          },
          "effectiveDate": {
            "format": "date-time",
            "type": "string",
            "description": "تاريخ سريان الشروط"
          },
          "isActive": {
            "type": "boolean",
            "description": "هل الشروط نشطة",
            "default": true
          }
        },
        "required": [
          "version",
          "content",
          "contentEn"
        ]
      }
    }
  }
}