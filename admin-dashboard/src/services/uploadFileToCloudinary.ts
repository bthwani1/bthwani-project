// src/services/uploadFileToBunny.ts
import { auth } from "../config/firebaseConfig";

export async function uploadFileToBunny(file: File): Promise<string> {
  // 1) ╪к╪г┘Г╪п ┘Е┘Ж ╪г┘Ж ╪з┘Д┘Е╪│╪к╪о╪п┘Е ┘Е╪│╪м┘Д ╪п╪о┘И┘Д
  const user = auth.currentUser;
  if (!user) throw new Error("ЁЯЪл ┘Д╪з ┘К┘И╪м╪п ╪к┘И┘Г┘Ж ┘Е╪╡╪з╪п┘В╪й");
  await user.getIdToken(true); // (╪з╪о╪к┘К╪з╪▒┘К╪М ╪н╪│╪и ╪з┘Д╪и╪з┘Г-╪е┘Ж╪п)

  // 2) ╪н╪п╪п ╪з╪│┘Е ╪з┘Д┘Е┘Д┘Б (┘К┘Б╪╢┘Д unique)
  const fileName = `${Date.now()}-${file.name}`;

  // 3) ╪м┘З┘С╪▓ FormData
  const form = new FormData();
  form.append("file", file);

  // 4) ╪з╪▒┘Б╪╣ ╪е┘Д┘Й Bunny Storage Zone
  // тЪая╕П ╪з╪│╪к╪и╪п┘Д ZONENAME ┘И AccessKey ╪н╪│╪и ╪е╪╣╪п╪з╪п┘Г
  const storageZone = "bthwani-storage";
  const accessKey = "2ea49c52-481c-48f9-a7ce4d882e42-0cf4-4dca";
  const url = `https://storage.bunnycdn.com/${storageZone}/stores/${fileName}`;

  const resp = await fetch(url, {
    method: "PUT",
    headers: {
      AccessKey: accessKey,
    },
    body: file,
  });

  if (!resp.ok) {
    throw new Error(`┘Б╪┤┘Д ╪▒┘Б╪╣ ╪з┘Д┘Е┘Д┘Б ╪е┘Д┘Й Bunny: ${resp.status}`);
  }

  // 5) ╪з┘Д╪▒╪з╪и╪╖ ╪з┘Д╪╣╪з┘Е (┘Е┘Ж ╪з┘Д┘А Pull Zone)
  const cdnUrl = `https://cdn.bthwani.com/stores/${fileName}`;
  return cdnUrl;
}
